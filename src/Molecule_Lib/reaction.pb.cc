// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reaction.proto

#include "reaction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Molecule_5fLib_2fsubstructure_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Molecule_5fLib_2fsubstructure_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SubstructureQuery;
}  // namespace protobuf_Molecule_5fLib_2fsubstructure_2eproto
namespace protobuf_Molecule_5fLib_2ftoggle_5fkekule_5fform_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Molecule_5fLib_2ftoggle_5fkekule_5fform_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ToggleKekuleForm;
}  // namespace protobuf_Molecule_5fLib_2ftoggle_5fkekule_5fform_2eproto
namespace protobuf_reaction_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BondToBeMade;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChangeElement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChangeFormalCharge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FormalCharge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IncrementIsotope;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MatchConditions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MatchedAtomInComponent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PairOfAtoms;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlaceIsotope;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WedgeBond;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<15> scc_info_ScaffoldReactionSite;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<18> scc_info_SidechainReactionSite;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BondAngle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BondLength;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DihedralAngle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InterParticleBond;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NoReaction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReplaceAtom;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ScaffoldMatchConditions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SidechainMatchConditions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StereoCenter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StereoCenterComponent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_reaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ThreeDReplace;
}  // namespace protobuf_reaction_2eproto
namespace ReactionProto {
class MatchConditionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchConditions>
      _instance;
} _MatchConditions_default_instance_;
class ScaffoldMatchConditionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScaffoldMatchConditions>
      _instance;
} _ScaffoldMatchConditions_default_instance_;
class SidechainMatchConditionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SidechainMatchConditions>
      _instance;
} _SidechainMatchConditions_default_instance_;
class PairOfAtomsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PairOfAtoms>
      _instance;
} _PairOfAtoms_default_instance_;
class MatchedAtomInComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchedAtomInComponent>
      _instance;
} _MatchedAtomInComponent_default_instance_;
class StereoCenterComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StereoCenterComponent>
      _instance;
  const ::ReactionProto::MatchedAtomInComponent* atom_;
  bool implicit_hydrogen_;
} _StereoCenterComponent_default_instance_;
class StereoCenterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StereoCenter>
      _instance;
} _StereoCenter_default_instance_;
class BondToBeMadeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BondToBeMade>
      _instance;
} _BondToBeMade_default_instance_;
class InterParticleBondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterParticleBond>
      _instance;
  ::google::protobuf::uint32 a1_;
  const ::ReactionProto::MatchedAtomInComponent* c1_;
  ::google::protobuf::uint32 a2_;
  const ::ReactionProto::MatchedAtomInComponent* c2_;
} _InterParticleBond_default_instance_;
class ReplaceAtomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplaceAtom>
      _instance;
  ::google::protobuf::uint32 a1_;
  const ::ReactionProto::MatchedAtomInComponent* c1_;
  ::google::protobuf::uint32 a2_;
  const ::ReactionProto::MatchedAtomInComponent* c2_;
} _ReplaceAtom_default_instance_;
class WedgeBondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WedgeBond>
      _instance;
} _WedgeBond_default_instance_;
class ChangeElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeElement>
      _instance;
} _ChangeElement_default_instance_;
class FormalChargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FormalCharge>
      _instance;
} _FormalCharge_default_instance_;
class ChangeFormalChargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeFormalCharge>
      _instance;
} _ChangeFormalCharge_default_instance_;
class PlaceIsotopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaceIsotope>
      _instance;
} _PlaceIsotope_default_instance_;
class IncrementIsotopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementIsotope>
      _instance;
} _IncrementIsotope_default_instance_;
class BondLengthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BondLength>
      _instance;
  ::google::protobuf::uint32 a1_;
  const ::ReactionProto::MatchedAtomInComponent* c1_;
  ::google::protobuf::uint32 a2_;
  const ::ReactionProto::MatchedAtomInComponent* c2_;
} _BondLength_default_instance_;
class BondAngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BondAngle>
      _instance;
  ::google::protobuf::uint32 a1_;
  const ::ReactionProto::MatchedAtomInComponent* c1_;
  ::google::protobuf::uint32 a2_;
  const ::ReactionProto::MatchedAtomInComponent* c2_;
  ::google::protobuf::uint32 a3_;
  const ::ReactionProto::MatchedAtomInComponent* c3_;
} _BondAngle_default_instance_;
class DihedralAngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DihedralAngle>
      _instance;
  ::google::protobuf::uint32 a1_;
  const ::ReactionProto::MatchedAtomInComponent* c1_;
  ::google::protobuf::uint32 a2_;
  const ::ReactionProto::MatchedAtomInComponent* c2_;
  ::google::protobuf::uint32 a3_;
  const ::ReactionProto::MatchedAtomInComponent* c3_;
  ::google::protobuf::uint32 a4_;
  const ::ReactionProto::MatchedAtomInComponent* c4_;
} _DihedralAngle_default_instance_;
class RotateFragmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RotateFragment>
      _instance;
  ::google::protobuf::uint32 atom_;
  const ::ReactionProto::MatchedAtomInComponent* cspec_;
} _RotateFragment_default_instance_;
class ThreeDReplaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThreeDReplace>
      _instance;
} _ThreeDReplace_default_instance_;
class NoReactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NoReaction>
      _instance;
} _NoReaction_default_instance_;
class ReactionSiteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReactionSite>
      _instance;
} _ReactionSite_default_instance_;
class ScaffoldReactionSiteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScaffoldReactionSite>
      _instance;
} _ScaffoldReactionSite_default_instance_;
class SidechainReactionSiteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SidechainReactionSite>
      _instance;
} _SidechainReactionSite_default_instance_;
class ReactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reaction>
      _instance;
} _Reaction_default_instance_;
}  // namespace ReactionProto
namespace protobuf_reaction_2eproto {
static void InitDefaultsMatchConditions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_MatchConditions_default_instance_;
    new (ptr) ::ReactionProto::MatchConditions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::MatchConditions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MatchConditions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMatchConditions}, {}};

static void InitDefaultsScaffoldMatchConditions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_ScaffoldMatchConditions_default_instance_;
    new (ptr) ::ReactionProto::ScaffoldMatchConditions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::ScaffoldMatchConditions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScaffoldMatchConditions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScaffoldMatchConditions}, {
      &protobuf_reaction_2eproto::scc_info_MatchConditions.base,}};

static void InitDefaultsSidechainMatchConditions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_SidechainMatchConditions_default_instance_;
    new (ptr) ::ReactionProto::SidechainMatchConditions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::SidechainMatchConditions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SidechainMatchConditions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSidechainMatchConditions}, {
      &protobuf_reaction_2eproto::scc_info_MatchConditions.base,}};

static void InitDefaultsPairOfAtoms() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_PairOfAtoms_default_instance_;
    new (ptr) ::ReactionProto::PairOfAtoms();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::PairOfAtoms::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PairOfAtoms =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPairOfAtoms}, {}};

static void InitDefaultsMatchedAtomInComponent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_MatchedAtomInComponent_default_instance_;
    new (ptr) ::ReactionProto::MatchedAtomInComponent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::MatchedAtomInComponent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MatchedAtomInComponent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMatchedAtomInComponent}, {}};

static void InitDefaultsStereoCenterComponent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_StereoCenterComponent_default_instance_;
    new (ptr) ::ReactionProto::StereoCenterComponent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::StereoCenterComponent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StereoCenterComponent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStereoCenterComponent}, {
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base,}};

static void InitDefaultsStereoCenter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_StereoCenter_default_instance_;
    new (ptr) ::ReactionProto::StereoCenter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::StereoCenter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StereoCenter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStereoCenter}, {
      &protobuf_reaction_2eproto::scc_info_StereoCenterComponent.base,}};

static void InitDefaultsBondToBeMade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_BondToBeMade_default_instance_;
    new (ptr) ::ReactionProto::BondToBeMade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::BondToBeMade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BondToBeMade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBondToBeMade}, {}};

static void InitDefaultsInterParticleBond() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_InterParticleBond_default_instance_;
    new (ptr) ::ReactionProto::InterParticleBond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::InterParticleBond::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InterParticleBond =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInterParticleBond}, {
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base,}};

static void InitDefaultsReplaceAtom() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_ReplaceAtom_default_instance_;
    new (ptr) ::ReactionProto::ReplaceAtom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::ReplaceAtom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReplaceAtom =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReplaceAtom}, {
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base,}};

static void InitDefaultsWedgeBond() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_WedgeBond_default_instance_;
    new (ptr) ::ReactionProto::WedgeBond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::WedgeBond::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WedgeBond =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWedgeBond}, {}};

static void InitDefaultsChangeElement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_ChangeElement_default_instance_;
    new (ptr) ::ReactionProto::ChangeElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::ChangeElement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeElement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeElement}, {}};

static void InitDefaultsFormalCharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_FormalCharge_default_instance_;
    new (ptr) ::ReactionProto::FormalCharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::FormalCharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FormalCharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFormalCharge}, {}};

static void InitDefaultsChangeFormalCharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_ChangeFormalCharge_default_instance_;
    new (ptr) ::ReactionProto::ChangeFormalCharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::ChangeFormalCharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeFormalCharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeFormalCharge}, {}};

static void InitDefaultsPlaceIsotope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_PlaceIsotope_default_instance_;
    new (ptr) ::ReactionProto::PlaceIsotope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::PlaceIsotope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlaceIsotope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlaceIsotope}, {}};

static void InitDefaultsIncrementIsotope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_IncrementIsotope_default_instance_;
    new (ptr) ::ReactionProto::IncrementIsotope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::IncrementIsotope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IncrementIsotope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIncrementIsotope}, {}};

static void InitDefaultsBondLength() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_BondLength_default_instance_;
    new (ptr) ::ReactionProto::BondLength();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::BondLength::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BondLength =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBondLength}, {
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base,}};

static void InitDefaultsBondAngle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_BondAngle_default_instance_;
    new (ptr) ::ReactionProto::BondAngle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::BondAngle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BondAngle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBondAngle}, {
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base,}};

static void InitDefaultsDihedralAngle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_DihedralAngle_default_instance_;
    new (ptr) ::ReactionProto::DihedralAngle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::DihedralAngle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DihedralAngle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDihedralAngle}, {
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base,}};

static void InitDefaultsRotateFragment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_RotateFragment_default_instance_;
    new (ptr) ::ReactionProto::RotateFragment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::RotateFragment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RotateFragment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRotateFragment}, {
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base,}};

static void InitDefaultsThreeDReplace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_ThreeDReplace_default_instance_;
    new (ptr) ::ReactionProto::ThreeDReplace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::ThreeDReplace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ThreeDReplace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsThreeDReplace}, {
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base,}};

static void InitDefaultsNoReaction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_NoReaction_default_instance_;
    new (ptr) ::ReactionProto::NoReaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::NoReaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NoReaction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNoReaction}, {
      &protobuf_Molecule_5fLib_2fsubstructure_2eproto::scc_info_SubstructureQuery.base,}};

static void InitDefaultsReactionSite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_ReactionSite_default_instance_;
    new (ptr) ::ReactionProto::ReactionSite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::ReactionSite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<15> scc_info_ReactionSite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 15, InitDefaultsReactionSite}, {
      &protobuf_Molecule_5fLib_2fsubstructure_2eproto::scc_info_SubstructureQuery.base,
      &protobuf_reaction_2eproto::scc_info_BondToBeMade.base,
      &protobuf_reaction_2eproto::scc_info_PairOfAtoms.base,
      &protobuf_reaction_2eproto::scc_info_ChangeElement.base,
      &protobuf_reaction_2eproto::scc_info_FormalCharge.base,
      &protobuf_reaction_2eproto::scc_info_ChangeFormalCharge.base,
      &protobuf_reaction_2eproto::scc_info_PlaceIsotope.base,
      &protobuf_reaction_2eproto::scc_info_IncrementIsotope.base,
      &protobuf_reaction_2eproto::scc_info_BondLength.base,
      &protobuf_reaction_2eproto::scc_info_BondAngle.base,
      &protobuf_reaction_2eproto::scc_info_DihedralAngle.base,
      &protobuf_reaction_2eproto::scc_info_ThreeDReplace.base,
      &protobuf_reaction_2eproto::scc_info_WedgeBond.base,
      &protobuf_reaction_2eproto::scc_info_ReplaceAtom.base,
      &protobuf_Molecule_5fLib_2ftoggle_5fkekule_5fform_2eproto::scc_info_ToggleKekuleForm.base,}};

static void InitDefaultsScaffoldReactionSite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_ScaffoldReactionSite_default_instance_;
    new (ptr) ::ReactionProto::ScaffoldReactionSite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::ScaffoldReactionSite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<15> scc_info_ScaffoldReactionSite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 15, InitDefaultsScaffoldReactionSite}, {
      &protobuf_Molecule_5fLib_2fsubstructure_2eproto::scc_info_SubstructureQuery.base,
      &protobuf_reaction_2eproto::scc_info_BondToBeMade.base,
      &protobuf_reaction_2eproto::scc_info_PairOfAtoms.base,
      &protobuf_reaction_2eproto::scc_info_ChangeElement.base,
      &protobuf_reaction_2eproto::scc_info_FormalCharge.base,
      &protobuf_reaction_2eproto::scc_info_ChangeFormalCharge.base,
      &protobuf_reaction_2eproto::scc_info_PlaceIsotope.base,
      &protobuf_reaction_2eproto::scc_info_IncrementIsotope.base,
      &protobuf_reaction_2eproto::scc_info_BondLength.base,
      &protobuf_reaction_2eproto::scc_info_BondAngle.base,
      &protobuf_reaction_2eproto::scc_info_DihedralAngle.base,
      &protobuf_reaction_2eproto::scc_info_ThreeDReplace.base,
      &protobuf_reaction_2eproto::scc_info_WedgeBond.base,
      &protobuf_reaction_2eproto::scc_info_ReplaceAtom.base,
      &protobuf_Molecule_5fLib_2ftoggle_5fkekule_5fform_2eproto::scc_info_ToggleKekuleForm.base,}};

static void InitDefaultsSidechainReactionSite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_SidechainReactionSite_default_instance_;
    new (ptr) ::ReactionProto::SidechainReactionSite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::SidechainReactionSite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<18> scc_info_SidechainReactionSite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 18, InitDefaultsSidechainReactionSite}, {
      &protobuf_Molecule_5fLib_2fsubstructure_2eproto::scc_info_SubstructureQuery.base,
      &protobuf_reaction_2eproto::scc_info_BondToBeMade.base,
      &protobuf_reaction_2eproto::scc_info_PairOfAtoms.base,
      &protobuf_reaction_2eproto::scc_info_ChangeElement.base,
      &protobuf_reaction_2eproto::scc_info_FormalCharge.base,
      &protobuf_reaction_2eproto::scc_info_ChangeFormalCharge.base,
      &protobuf_reaction_2eproto::scc_info_PlaceIsotope.base,
      &protobuf_reaction_2eproto::scc_info_IncrementIsotope.base,
      &protobuf_reaction_2eproto::scc_info_BondLength.base,
      &protobuf_reaction_2eproto::scc_info_BondAngle.base,
      &protobuf_reaction_2eproto::scc_info_DihedralAngle.base,
      &protobuf_reaction_2eproto::scc_info_ThreeDReplace.base,
      &protobuf_reaction_2eproto::scc_info_WedgeBond.base,
      &protobuf_reaction_2eproto::scc_info_ReplaceAtom.base,
      &protobuf_Molecule_5fLib_2ftoggle_5fkekule_5fform_2eproto::scc_info_ToggleKekuleForm.base,
      &protobuf_reaction_2eproto::scc_info_InterParticleBond.base,
      &protobuf_reaction_2eproto::scc_info_NoReaction.base,
      &protobuf_reaction_2eproto::scc_info_SidechainMatchConditions.base,}};

static void InitDefaultsReaction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ReactionProto::_Reaction_default_instance_;
    new (ptr) ::ReactionProto::Reaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReactionProto::Reaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Reaction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsReaction}, {
      &protobuf_reaction_2eproto::scc_info_ScaffoldReactionSite.base,
      &protobuf_reaction_2eproto::scc_info_SidechainReactionSite.base,
      &protobuf_reaction_2eproto::scc_info_StereoCenter.base,
      &protobuf_reaction_2eproto::scc_info_ScaffoldMatchConditions.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MatchConditions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScaffoldMatchConditions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SidechainMatchConditions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PairOfAtoms.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatchedAtomInComponent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StereoCenterComponent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StereoCenter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BondToBeMade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InterParticleBond.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReplaceAtom.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WedgeBond.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeElement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FormalCharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeFormalCharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlaceIsotope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IncrementIsotope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BondLength.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BondAngle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DihedralAngle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RotateFragment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ThreeDReplace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NoReaction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReactionSite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScaffoldReactionSite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SidechainReactionSite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Reaction.base);
}

::google::protobuf::Metadata file_level_metadata[26];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, ignore_not_reacting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, find_unique_embeddings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, process_hit_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, one_embedding_per_start_atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, ignore_symmetry_related_matches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, multiple_match_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchConditions, suppress_if_more_than_this_many_substructure_search_hits_),
  2,
  3,
  1,
  4,
  5,
  0,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldMatchConditions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldMatchConditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldMatchConditions, match_conditions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldMatchConditions, enumerate_scaffold_hits_individually_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldMatchConditions, combinatorial_expansion_of_scaffold_hits_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainMatchConditions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainMatchConditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainMatchConditions, match_conditions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainMatchConditions, make_new_reagent_for_each_hit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainMatchConditions, max_matches_to_find_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainMatchConditions, strip_reagents_to_largest_fragment_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::PairOfAtoms, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::PairOfAtoms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::PairOfAtoms, a1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::PairOfAtoms, a2_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchedAtomInComponent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchedAtomInComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchedAtomInComponent, component_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchedAtomInComponent, atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::MatchedAtomInComponent, component_and_atom_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenterComponent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenterComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenterComponent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ReactionProto::StereoCenterComponentDefaultTypeInternal, atom_),
  offsetof(::ReactionProto::StereoCenterComponentDefaultTypeInternal, implicit_hydrogen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenterComponent, AtomOrHydrogen_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenter, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenter, top_front_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenter, top_back_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenter, left_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenter, right_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::StereoCenter, optional_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondToBeMade, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondToBeMade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondToBeMade, a1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondToBeMade, a2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondToBeMade, btype_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::InterParticleBond, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::InterParticleBond, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::InterParticleBond, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ReactionProto::InterParticleBondDefaultTypeInternal, a1_),
  offsetof(::ReactionProto::InterParticleBondDefaultTypeInternal, c1_),
  offsetof(::ReactionProto::InterParticleBondDefaultTypeInternal, a2_),
  offsetof(::ReactionProto::InterParticleBondDefaultTypeInternal, c2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::InterParticleBond, btype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::InterParticleBond, atom1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::InterParticleBond, atom2_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReplaceAtom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReplaceAtom, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReplaceAtom, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ReactionProto::ReplaceAtomDefaultTypeInternal, a1_),
  offsetof(::ReactionProto::ReplaceAtomDefaultTypeInternal, c1_),
  offsetof(::ReactionProto::ReplaceAtomDefaultTypeInternal, a2_),
  offsetof(::ReactionProto::ReplaceAtomDefaultTypeInternal, c2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReplaceAtom, atom1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReplaceAtom, atom2_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::WedgeBond, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::WedgeBond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::WedgeBond, a1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::WedgeBond, a2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::WedgeBond, direction_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ChangeElement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ChangeElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ChangeElement, atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ChangeElement, element_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::FormalCharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::FormalCharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::FormalCharge, atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::FormalCharge, formal_charge_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ChangeFormalCharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ChangeFormalCharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ChangeFormalCharge, atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ChangeFormalCharge, delta_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::PlaceIsotope, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::PlaceIsotope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::PlaceIsotope, atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::PlaceIsotope, isotope_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::IncrementIsotope, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::IncrementIsotope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::IncrementIsotope, atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::IncrementIsotope, delta_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondLength, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondLength, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondLength, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ReactionProto::BondLengthDefaultTypeInternal, a1_),
  offsetof(::ReactionProto::BondLengthDefaultTypeInternal, c1_),
  offsetof(::ReactionProto::BondLengthDefaultTypeInternal, a2_),
  offsetof(::ReactionProto::BondLengthDefaultTypeInternal, c2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondLength, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondLength, first_atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondLength, second_atom_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondAngle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondAngle, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondAngle, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ReactionProto::BondAngleDefaultTypeInternal, a1_),
  offsetof(::ReactionProto::BondAngleDefaultTypeInternal, c1_),
  offsetof(::ReactionProto::BondAngleDefaultTypeInternal, a2_),
  offsetof(::ReactionProto::BondAngleDefaultTypeInternal, c2_),
  offsetof(::ReactionProto::BondAngleDefaultTypeInternal, a3_),
  offsetof(::ReactionProto::BondAngleDefaultTypeInternal, c3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondAngle, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondAngle, atom1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondAngle, atom2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::BondAngle, atom3_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::DihedralAngle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::DihedralAngle, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::DihedralAngle, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ReactionProto::DihedralAngleDefaultTypeInternal, a1_),
  offsetof(::ReactionProto::DihedralAngleDefaultTypeInternal, c1_),
  offsetof(::ReactionProto::DihedralAngleDefaultTypeInternal, a2_),
  offsetof(::ReactionProto::DihedralAngleDefaultTypeInternal, c2_),
  offsetof(::ReactionProto::DihedralAngleDefaultTypeInternal, a3_),
  offsetof(::ReactionProto::DihedralAngleDefaultTypeInternal, c3_),
  offsetof(::ReactionProto::DihedralAngleDefaultTypeInternal, a4_),
  offsetof(::ReactionProto::DihedralAngleDefaultTypeInternal, c4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::DihedralAngle, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::DihedralAngle, atom1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::DihedralAngle, atom2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::DihedralAngle, atom3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::DihedralAngle, atom4_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::RotateFragment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::RotateFragment, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::RotateFragment, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ReactionProto::RotateFragmentDefaultTypeInternal, atom_),
  offsetof(::ReactionProto::RotateFragmentDefaultTypeInternal, cspec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::RotateFragment, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::RotateFragment, the_atom_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ThreeDReplace, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ThreeDReplace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ThreeDReplace, a1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ThreeDReplace, a2_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::NoReaction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::NoReaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::NoReaction, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::NoReaction, scaffold_no_reaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::NoReaction, sidechain_no_reaction_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, make_bond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, break_bond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, remove_atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, remove_fragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, keep_fragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, change_element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, formal_charge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, change_formal_charge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, change_isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, invert_isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, bond_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, bond_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, dihedral_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, reaction_3d_replace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, wedge_bonds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, replace_atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, unfix_implicit_hydrogens_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, inactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, invert_chirality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, remove_chirality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, toggle_kekule_form_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, ignore_multiple_matches_involving_atoms_not_changing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, ignore_multiple_matches_involving_changing_atoms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ReactionSite, noop_reaction_),
  1,
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, make_bond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, break_bond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, remove_atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, remove_fragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, keep_fragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, change_element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, formal_charge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, change_formal_charge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, change_isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, invert_isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, bond_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, bond_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, dihedral_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, reaction_3d_replace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, wedge_bonds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, replace_atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, unfix_implicit_hydrogens_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, inactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, invert_chirality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, remove_chirality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, toggle_kekule_form_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, ignore_multiple_matches_involving_atoms_not_changing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, ignore_multiple_matches_involving_changing_atoms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, noop_reaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::ScaffoldReactionSite, smarts_),
  4,
  2,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  3,
  5,
  6,
  7,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, make_bond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, break_bond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, remove_atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, remove_fragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, keep_fragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, change_element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, formal_charge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, change_formal_charge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, change_isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, invert_isotope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, bond_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, bond_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, dihedral_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, reaction_3d_replace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, wedge_bonds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, replace_atom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, unfix_implicit_hydrogens_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, inactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, invert_chirality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, remove_chirality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, toggle_kekule_form_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, ignore_multiple_matches_involving_atoms_not_changing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, ignore_multiple_matches_involving_changing_atoms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, noop_reaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, smarts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, reagent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, join_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, no_reaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, make_implicit_hydrogens_explicit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::SidechainReactionSite, match_conditions_),
  5,
  2,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  3,
  6,
  7,
  8,
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  9,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, scaffold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, sidechain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, reaction_stereo_center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, append_reagent_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, append_to_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, query_files_in_current_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, reaction_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, find_kekule_forms_for_bad_valence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, make_implicit_hydrogens_explicit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, scaffold_match_conditions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReactionProto::Reaction, noop_reaction_),
  0,
  3,
  ~0u,
  ~0u,
  5,
  1,
  6,
  2,
  7,
  8,
  4,
  9,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::ReactionProto::MatchConditions)},
  { 19, 27, sizeof(::ReactionProto::ScaffoldMatchConditions)},
  { 30, 39, sizeof(::ReactionProto::SidechainMatchConditions)},
  { 43, 50, sizeof(::ReactionProto::PairOfAtoms)},
  { 52, 60, sizeof(::ReactionProto::MatchedAtomInComponent)},
  { 63, 71, sizeof(::ReactionProto::StereoCenterComponent)},
  { 73, 84, sizeof(::ReactionProto::StereoCenter)},
  { 90, 98, sizeof(::ReactionProto::BondToBeMade)},
  { 101, 113, sizeof(::ReactionProto::InterParticleBond)},
  { 118, 129, sizeof(::ReactionProto::ReplaceAtom)},
  { 133, 141, sizeof(::ReactionProto::WedgeBond)},
  { 144, 151, sizeof(::ReactionProto::ChangeElement)},
  { 153, 160, sizeof(::ReactionProto::FormalCharge)},
  { 162, 169, sizeof(::ReactionProto::ChangeFormalCharge)},
  { 171, 178, sizeof(::ReactionProto::PlaceIsotope)},
  { 180, 187, sizeof(::ReactionProto::IncrementIsotope)},
  { 189, 201, sizeof(::ReactionProto::BondLength)},
  { 206, 221, sizeof(::ReactionProto::BondAngle)},
  { 228, 246, sizeof(::ReactionProto::DihedralAngle)},
  { 255, 264, sizeof(::ReactionProto::RotateFragment)},
  { 267, 274, sizeof(::ReactionProto::ThreeDReplace)},
  { 276, 284, sizeof(::ReactionProto::NoReaction)},
  { 287, 319, sizeof(::ReactionProto::ReactionSite)},
  { 346, 380, sizeof(::ReactionProto::ScaffoldReactionSite)},
  { 409, 448, sizeof(::ReactionProto::SidechainReactionSite)},
  { 482, 499, sizeof(::ReactionProto::Reaction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_MatchConditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_ScaffoldMatchConditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_SidechainMatchConditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_PairOfAtoms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_MatchedAtomInComponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_StereoCenterComponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_StereoCenter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_BondToBeMade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_InterParticleBond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_ReplaceAtom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_WedgeBond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_ChangeElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_FormalCharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_ChangeFormalCharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_PlaceIsotope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_IncrementIsotope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_BondLength_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_BondAngle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_DihedralAngle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_RotateFragment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_ThreeDReplace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_NoReaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_ReactionSite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_ScaffoldReactionSite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_SidechainReactionSite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ReactionProto::_Reaction_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "reaction.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016reaction.proto\022\rReactionProto\032\037Molecul"
      "e_Lib/substructure.proto\032%Molecule_Lib/t"
      "oggle_kekule_form.proto\"\232\002\n\017MatchConditi"
      "ons\022\033\n\023ignore_not_reacting\030\001 \001(\010\022\036\n\026find"
      "_unique_embeddings\030\002 \001(\010\022\032\n\022process_hit_"
      "number\030\003 \001(\005\022$\n\034one_embedding_per_start_"
      "atom\030\004 \001(\010\022\'\n\037ignore_symmetry_related_ma"
      "tches\030\005 \001(\010\022\035\n\025multiple_match_string\030\006 \001"
      "(\t\022@\n8suppress_if_more_than_this_many_su"
      "bstructure_search_hits\030\007 \001(\005\"\263\001\n\027Scaffol"
      "dMatchConditions\0228\n\020match_conditions\030\001 \001"
      "(\0132\036.ReactionProto.MatchConditions\022,\n$en"
      "umerate_scaffold_hits_individually\030\002 \001(\010"
      "\0220\n(combinatorial_expansion_of_scaffold_"
      "hits\030\003 \001(\005\"\304\001\n\030SidechainMatchConditions\022"
      "8\n\020match_conditions\030\001 \001(\0132\036.ReactionProt"
      "o.MatchConditions\022%\n\035make_new_reagent_fo"
      "r_each_hit\030\002 \001(\010\022\033\n\023max_matches_to_find\030"
      "\003 \001(\005\022*\n\"strip_reagents_to_largest_fragm"
      "ent\030\004 \001(\010\"%\n\013PairOfAtoms\022\n\n\002a1\030\001 \001(\005\022\n\n\002"
      "a2\030\002 \001(\005\"U\n\026MatchedAtomInComponent\022\021\n\tco"
      "mponent\030\001 \001(\005\022\014\n\004atom\030\002 \001(\005\022\032\n\022component"
      "_and_atom\030\003 \001(\t\"}\n\025StereoCenterComponent"
      "\0225\n\004atom\030\001 \001(\0132%.ReactionProto.MatchedAt"
      "omInComponentH\000\022\033\n\021implicit_hydrogen\030\002 \001"
      "(\010H\000B\020\n\016AtomOrHydrogen\"\265\002\n\014StereoCenter\022"
      "/\n\001a\030\001 \001(\0132$.ReactionProto.StereoCenterC"
      "omponent\0227\n\ttop_front\030\002 \001(\0132$.ReactionPr"
      "oto.StereoCenterComponent\0226\n\010top_back\030\003 "
      "\001(\0132$.ReactionProto.StereoCenterComponen"
      "t\0227\n\tleft_down\030\004 \001(\0132$.ReactionProto.Ste"
      "reoCenterComponent\0228\n\nright_down\030\005 \001(\0132$"
      ".ReactionProto.StereoCenterComponent\022\020\n\010"
      "optional\030\006 \001(\010\"S\n\014BondToBeMade\022\n\n\002a1\030\001 \001"
      "(\005\022\n\n\002a2\030\002 \001(\005\022+\n\005btype\030\003 \001(\0162\034.Substruc"
      "tureSearch.BondType\"\330\001\n\021InterParticleBon"
      "d\022\014\n\002a1\030\001 \001(\rH\000\0223\n\002c1\030\002 \001(\0132%.ReactionPr"
      "oto.MatchedAtomInComponentH\000\022\014\n\002a2\030\003 \001(\r"
      "H\001\0223\n\002c2\030\004 \001(\0132%.ReactionProto.MatchedAt"
      "omInComponentH\001\022+\n\005btype\030\005 \001(\0162\034.Substru"
      "ctureSearch.BondTypeB\007\n\005atom1B\007\n\005atom2\"\245"
      "\001\n\013ReplaceAtom\022\014\n\002a1\030\001 \001(\rH\000\0223\n\002c1\030\002 \001(\013"
      "2%.ReactionProto.MatchedAtomInComponentH"
      "\000\022\014\n\002a2\030\003 \001(\rH\001\0223\n\002c2\030\004 \001(\0132%.ReactionPr"
      "oto.MatchedAtomInComponentH\001B\007\n\005atom1B\007\n"
      "\005atom2\"6\n\tWedgeBond\022\n\n\002a1\030\001 \001(\005\022\n\n\002a2\030\002 "
      "\001(\005\022\021\n\tdirection\030\003 \001(\005\".\n\rChangeElement\022"
      "\014\n\004atom\030\001 \001(\005\022\017\n\007element\030\002 \001(\t\"3\n\014Formal"
      "Charge\022\014\n\004atom\030\001 \001(\005\022\025\n\rformal_charge\030\002 "
      "\001(\005\"1\n\022ChangeFormalCharge\022\014\n\004atom\030\001 \001(\005\022"
      "\r\n\005delta\030\002 \001(\005\"-\n\014PlaceIsotope\022\014\n\004atom\030\001"
      " \001(\005\022\017\n\007isotope\030\002 \001(\005\"/\n\020IncrementIsotop"
      "e\022\014\n\004atom\030\001 \001(\005\022\r\n\005delta\030\002 \001(\005\"\301\001\n\nBondL"
      "ength\022\014\n\002a1\030\001 \001(\rH\000\0223\n\002c1\030\002 \001(\0132%.Reacti"
      "onProto.MatchedAtomInComponentH\000\022\014\n\002a2\030\003"
      " \001(\rH\001\0223\n\002c2\030\004 \001(\0132%.ReactionProto.Match"
      "edAtomInComponentH\001\022\020\n\010distance\030\005 \001(\002B\014\n"
      "\nfirst_atomB\r\n\013second_atom\"\376\001\n\tBondAngle"
      "\022\014\n\002a1\030\001 \001(\rH\000\0223\n\002c1\030\002 \001(\0132%.ReactionPro"
      "to.MatchedAtomInComponentH\000\022\014\n\002a2\030\003 \001(\rH"
      "\001\0223\n\002c2\030\004 \001(\0132%.ReactionProto.MatchedAto"
      "mInComponentH\001\022\014\n\002a3\030\005 \001(\rH\002\0223\n\002c3\030\006 \001(\013"
      "2%.ReactionProto.MatchedAtomInComponentH"
      "\002\022\r\n\005angle\030\007 \001(\002B\007\n\005atom1B\007\n\005atom2B\007\n\005at"
      "om3\"\316\002\n\rDihedralAngle\022\014\n\002a1\030\001 \001(\rH\000\0223\n\002c"
      "1\030\002 \001(\0132%.ReactionProto.MatchedAtomInCom"
      "ponentH\000\022\014\n\002a2\030\003 \001(\rH\001\0223\n\002c2\030\004 \001(\0132%.Rea"
      "ctionProto.MatchedAtomInComponentH\001\022\014\n\002a"
      "3\030\005 \001(\rH\002\0223\n\002c3\030\006 \001(\0132%.ReactionProto.Ma"
      "tchedAtomInComponentH\002\022\014\n\002a4\030\007 \001(\rH\003\0223\n\002"
      "c4\030\010 \001(\0132%.ReactionProto.MatchedAtomInCo"
      "mponentH\003\022\r\n\005angle\030\t \001(\002B\007\n\005atom1B\007\n\005ato"
      "m2B\007\n\005atom3B\007\n\005atom4\"s\n\016RotateFragment\022\016"
      "\n\004atom\030\001 \001(\rH\000\0226\n\005cspec\030\002 \001(\0132%.Reaction"
      "Proto.MatchedAtomInComponentH\000\022\r\n\005angle\030"
      "\003 \001(\002B\n\n\010the_atom\"u\n\rThreeDReplace\0221\n\002a1"
      "\030\001 \003(\0132%.ReactionProto.MatchedAtomInComp"
      "onent\0221\n\002a2\030\002 \003(\0132%.ReactionProto.Matche"
      "dAtomInComponent\"\250\001\n\nNoReaction\022\017\n\007comme"
      "nt\030\001 \001(\t\022C\n\024scaffold_no_reaction\030\002 \001(\0132%"
      ".SubstructureSearch.SubstructureQuery\022D\n"
      "\025sidechain_no_reaction\030\003 \001(\0132%.Substruct"
      "ureSearch.SubstructureQuery\"\317\t\n\014Reaction"
      "Site\0224\n\005query\030\001 \001(\0132%.SubstructureSearch"
      ".SubstructureQuery\022\017\n\007comment\030\002 \001(\t\022.\n\tm"
      "ake_bond\030\003 \003(\0132\033.ReactionProto.BondToBeM"
      "ade\022.\n\nbreak_bond\030\004 \003(\0132\032.ReactionProto."
      "PairOfAtoms\022\023\n\013remove_atom\030\005 \003(\005\022\027\n\017remo"
      "ve_fragment\030\006 \003(\005\022\025\n\rkeep_fragment\030\007 \003(\005"
      "\0224\n\016change_element\030\010 \003(\0132\034.ReactionProto"
      ".ChangeElement\0222\n\rformal_charge\030\t \003(\0132\033."
      "ReactionProto.FormalCharge\022\?\n\024change_for"
      "mal_charge\030\n \003(\0132!.ReactionProto.ChangeF"
      "ormalCharge\022,\n\007isotope\030\013 \003(\0132\033.ReactionP"
      "roto.PlaceIsotope\0227\n\016change_isotope\030\014 \003("
      "\0132\037.ReactionProto.IncrementIsotope\0223\n\016in"
      "vert_isotope\030\r \003(\0132\033.ReactionProto.Place"
      "Isotope\022.\n\013bond_length\030\016 \003(\0132\031.ReactionP"
      "roto.BondLength\022,\n\nbond_angle\030\017 \003(\0132\030.Re"
      "actionProto.BondAngle\0224\n\016dihedral_angle\030"
      "\020 \003(\0132\034.ReactionProto.DihedralAngle\0229\n\023r"
      "eaction_3d_replace\030\021 \003(\0132\034.ReactionProto"
      ".ThreeDReplace\022-\n\013wedge_bonds\030\022 \003(\0132\030.Re"
      "actionProto.WedgeBond\0220\n\014replace_atom\030\023 "
      "\003(\0132\032.ReactionProto.ReplaceAtom\022 \n\030unfix"
      "_implicit_hydrogens\030\024 \003(\005\0227\n\010inactive\030\025 "
      "\003(\0132%.SubstructureSearch.SubstructureQue"
      "ry\022\030\n\020invert_chirality\030\026 \003(\005\022\030\n\020remove_c"
      "hirality\030\027 \003(\005\022>\n\022toggle_kekule_form\030\030 \001"
      "(\0132\".ToggleKekuleForm.ToggleKekuleForm\022<"
      "\n4ignore_multiple_matches_involving_atom"
      "s_not_changing\030\031 \001(\010\0228\n0ignore_multiple_"
      "matches_involving_changing_atoms\030\033 \001(\010\022\025"
      "\n\rnoop_reaction\030\034 \001(\010\"\363\t\n\024ScaffoldReacti"
      "onSite\022\n\n\002id\030\001 \001(\005\0224\n\005query\030\002 \001(\0132%.Subs"
      "tructureSearch.SubstructureQuery\022.\n\tmake"
      "_bond\030\003 \003(\0132\033.ReactionProto.BondToBeMade"
      "\022.\n\nbreak_bond\030\004 \003(\0132\032.ReactionProto.Pai"
      "rOfAtoms\022\023\n\013remove_atom\030\005 \003(\005\022\027\n\017remove_"
      "fragment\030\006 \003(\005\022\025\n\rkeep_fragment\030\007 \003(\005\0224\n"
      "\016change_element\030\010 \003(\0132\034.ReactionProto.Ch"
      "angeElement\0222\n\rformal_charge\030\t \003(\0132\033.Rea"
      "ctionProto.FormalCharge\022\?\n\024change_formal"
      "_charge\030\n \003(\0132!.ReactionProto.ChangeForm"
      "alCharge\022,\n\007isotope\030\013 \003(\0132\033.ReactionProt"
      "o.PlaceIsotope\0227\n\016change_isotope\030\014 \003(\0132\037"
      ".ReactionProto.IncrementIsotope\0223\n\016inver"
      "t_isotope\030\r \003(\0132\033.ReactionProto.PlaceIso"
      "tope\022.\n\013bond_length\030\016 \003(\0132\031.ReactionProt"
      "o.BondLength\022,\n\nbond_angle\030\017 \003(\0132\030.React"
      "ionProto.BondAngle\0224\n\016dihedral_angle\030\020 \003"
      "(\0132\034.ReactionProto.DihedralAngle\0229\n\023reac"
      "tion_3d_replace\030\021 \003(\0132\034.ReactionProto.Th"
      "reeDReplace\022-\n\013wedge_bonds\030\022 \003(\0132\030.React"
      "ionProto.WedgeBond\0220\n\014replace_atom\030\023 \003(\013"
      "2\032.ReactionProto.ReplaceAtom\022 \n\030unfix_im"
      "plicit_hydrogens\030\024 \003(\005\0227\n\010inactive\030\025 \003(\013"
      "2%.SubstructureSearch.SubstructureQuery\022"
      "\030\n\020invert_chirality\030\026 \003(\005\022\030\n\020remove_chir"
      "ality\030\027 \003(\005\022>\n\022toggle_kekule_form\030\030 \001(\0132"
      "\".ToggleKekuleForm.ToggleKekuleForm\022<\n4i"
      "gnore_multiple_matches_involving_atoms_n"
      "ot_changing\030\031 \001(\010\0228\n0ignore_multiple_mat"
      "ches_involving_changing_atoms\030\033 \001(\010\022\025\n\rn"
      "oop_reaction\030\034 \001(\010\022\017\n\007comment\030\035 \001(\t\022\016\n\006s"
      "marts\030\036 \001(\t\"\322\013\n\025SidechainReactionSite\022\n\n"
      "\002id\030\001 \001(\005\0224\n\005query\030\002 \001(\0132%.SubstructureS"
      "earch.SubstructureQuery\022.\n\tmake_bond\030\003 \003"
      "(\0132\033.ReactionProto.BondToBeMade\022.\n\nbreak"
      "_bond\030\004 \003(\0132\032.ReactionProto.PairOfAtoms\022"
      "\023\n\013remove_atom\030\005 \003(\005\022\027\n\017remove_fragment\030"
      "\006 \003(\005\022\025\n\rkeep_fragment\030\007 \003(\005\0224\n\016change_e"
      "lement\030\010 \003(\0132\034.ReactionProto.ChangeEleme"
      "nt\0222\n\rformal_charge\030\t \003(\0132\033.ReactionProt"
      "o.FormalCharge\022\?\n\024change_formal_charge\030\n"
      " \003(\0132!.ReactionProto.ChangeFormalCharge\022"
      ",\n\007isotope\030\013 \003(\0132\033.ReactionProto.PlaceIs"
      "otope\0227\n\016change_isotope\030\014 \003(\0132\037.Reaction"
      "Proto.IncrementIsotope\0223\n\016invert_isotope"
      "\030\r \003(\0132\033.ReactionProto.PlaceIsotope\022.\n\013b"
      "ond_length\030\016 \003(\0132\031.ReactionProto.BondLen"
      "gth\022,\n\nbond_angle\030\017 \003(\0132\030.ReactionProto."
      "BondAngle\0224\n\016dihedral_angle\030\020 \003(\0132\034.Reac"
      "tionProto.DihedralAngle\0229\n\023reaction_3d_r"
      "eplace\030\021 \003(\0132\034.ReactionProto.ThreeDRepla"
      "ce\022-\n\013wedge_bonds\030\022 \003(\0132\030.ReactionProto."
      "WedgeBond\0220\n\014replace_atom\030\023 \003(\0132\032.Reacti"
      "onProto.ReplaceAtom\022 \n\030unfix_implicit_hy"
      "drogens\030\024 \003(\005\0227\n\010inactive\030\025 \003(\0132%.Substr"
      "uctureSearch.SubstructureQuery\022\030\n\020invert"
      "_chirality\030\026 \003(\005\022\030\n\020remove_chirality\030\027 \003"
      "(\005\022>\n\022toggle_kekule_form\030\030 \001(\0132\".ToggleK"
      "ekuleForm.ToggleKekuleForm\022<\n4ignore_mul"
      "tiple_matches_involving_atoms_not_changi"
      "ng\030\031 \001(\010\0228\n0ignore_multiple_matches_invo"
      "lving_changing_atoms\030\033 \001(\010\022\025\n\rnoop_react"
      "ion\030\034 \001(\010\022\017\n\007comment\030\035 \001(\t\022\016\n\006smarts\030\036 \001"
      "(\t\022\017\n\007reagent\030( \003(\t\022.\n\004join\030) \003(\0132 .Reac"
      "tionProto.InterParticleBond\022.\n\013no_reacti"
      "on\030* \003(\0132\031.ReactionProto.NoReaction\022(\n m"
      "ake_implicit_hydrogens_explicit\030+ \001(\010\022A\n"
      "\020match_conditions\030, \001(\0132\'.ReactionProto."
      "SidechainMatchConditions\"\372\003\n\010Reaction\022\017\n"
      "\007comment\030\001 \001(\t\0225\n\010scaffold\030\002 \001(\0132#.React"
      "ionProto.ScaffoldReactionSite\0227\n\tsidecha"
      "in\030\003 \003(\0132$.ReactionProto.SidechainReacti"
      "onSite\022;\n\026reaction_stereo_center\030\004 \003(\0132\033"
      ".ReactionProto.StereoCenter\022\033\n\023append_re"
      "agent_name\030\005 \001(\010\022\026\n\016append_to_name\030\006 \001(\t"
      "\022(\n query_files_in_current_directory\030\010 \001"
      "(\010\022\032\n\022reaction_directory\030\t \001(\t\022)\n!find_k"
      "ekule_forms_for_bad_valence\030\n \001(\010\022(\n mak"
      "e_implicit_hydrogens_explicit\030\013 \001(\010\022I\n\031s"
      "caffold_match_conditions\030\014 \001(\0132&.Reactio"
      "nProto.ScaffoldMatchConditions\022\025\n\rnoop_r"
      "eaction\030\r \001(\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7813);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "reaction.proto", &protobuf_RegisterTypes);
  ::protobuf_Molecule_5fLib_2fsubstructure_2eproto::AddDescriptors();
  ::protobuf_Molecule_5fLib_2ftoggle_5fkekule_5fform_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_reaction_2eproto
namespace ReactionProto {

// ===================================================================

void MatchConditions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchConditions::kIgnoreNotReactingFieldNumber;
const int MatchConditions::kFindUniqueEmbeddingsFieldNumber;
const int MatchConditions::kProcessHitNumberFieldNumber;
const int MatchConditions::kOneEmbeddingPerStartAtomFieldNumber;
const int MatchConditions::kIgnoreSymmetryRelatedMatchesFieldNumber;
const int MatchConditions::kMultipleMatchStringFieldNumber;
const int MatchConditions::kSuppressIfMoreThanThisManySubstructureSearchHitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchConditions::MatchConditions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_MatchConditions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.MatchConditions)
}
MatchConditions::MatchConditions(const MatchConditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  multiple_match_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_multiple_match_string()) {
    multiple_match_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.multiple_match_string_);
  }
  ::memcpy(&process_hit_number_, &from.process_hit_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&suppress_if_more_than_this_many_substructure_search_hits_) -
    reinterpret_cast<char*>(&process_hit_number_)) + sizeof(suppress_if_more_than_this_many_substructure_search_hits_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.MatchConditions)
}

void MatchConditions::SharedCtor() {
  multiple_match_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&process_hit_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suppress_if_more_than_this_many_substructure_search_hits_) -
      reinterpret_cast<char*>(&process_hit_number_)) + sizeof(suppress_if_more_than_this_many_substructure_search_hits_));
}

MatchConditions::~MatchConditions() {
  // @@protoc_insertion_point(destructor:ReactionProto.MatchConditions)
  SharedDtor();
}

void MatchConditions::SharedDtor() {
  multiple_match_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MatchConditions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MatchConditions::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchConditions& MatchConditions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_MatchConditions.base);
  return *internal_default_instance();
}


void MatchConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.MatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    multiple_match_string_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&process_hit_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&suppress_if_more_than_this_many_substructure_search_hits_) -
        reinterpret_cast<char*>(&process_hit_number_)) + sizeof(suppress_if_more_than_this_many_substructure_search_hits_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatchConditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.MatchConditions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool ignore_not_reacting = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ignore_not_reacting();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_not_reacting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool find_unique_embeddings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_find_unique_embeddings();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &find_unique_embeddings_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 process_hit_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_process_hit_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &process_hit_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool one_embedding_per_start_atom = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_one_embedding_per_start_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &one_embedding_per_start_atom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_symmetry_related_matches = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ignore_symmetry_related_matches();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_symmetry_related_matches_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string multiple_match_string = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_multiple_match_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->multiple_match_string().data(), static_cast<int>(this->multiple_match_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.MatchConditions.multiple_match_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 suppress_if_more_than_this_many_substructure_search_hits = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_suppress_if_more_than_this_many_substructure_search_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suppress_if_more_than_this_many_substructure_search_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.MatchConditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.MatchConditions)
  return false;
#undef DO_
}

void MatchConditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.MatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool ignore_not_reacting = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ignore_not_reacting(), output);
  }

  // optional bool find_unique_embeddings = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->find_unique_embeddings(), output);
  }

  // optional int32 process_hit_number = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->process_hit_number(), output);
  }

  // optional bool one_embedding_per_start_atom = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->one_embedding_per_start_atom(), output);
  }

  // optional bool ignore_symmetry_related_matches = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ignore_symmetry_related_matches(), output);
  }

  // optional string multiple_match_string = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->multiple_match_string().data(), static_cast<int>(this->multiple_match_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.MatchConditions.multiple_match_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->multiple_match_string(), output);
  }

  // optional int32 suppress_if_more_than_this_many_substructure_search_hits = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->suppress_if_more_than_this_many_substructure_search_hits(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.MatchConditions)
}

::google::protobuf::uint8* MatchConditions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.MatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool ignore_not_reacting = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ignore_not_reacting(), target);
  }

  // optional bool find_unique_embeddings = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->find_unique_embeddings(), target);
  }

  // optional int32 process_hit_number = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->process_hit_number(), target);
  }

  // optional bool one_embedding_per_start_atom = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->one_embedding_per_start_atom(), target);
  }

  // optional bool ignore_symmetry_related_matches = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ignore_symmetry_related_matches(), target);
  }

  // optional string multiple_match_string = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->multiple_match_string().data(), static_cast<int>(this->multiple_match_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.MatchConditions.multiple_match_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->multiple_match_string(), target);
  }

  // optional int32 suppress_if_more_than_this_many_substructure_search_hits = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->suppress_if_more_than_this_many_substructure_search_hits(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.MatchConditions)
  return target;
}

size_t MatchConditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.MatchConditions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string multiple_match_string = 6;
    if (has_multiple_match_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->multiple_match_string());
    }

    // optional int32 process_hit_number = 3;
    if (has_process_hit_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->process_hit_number());
    }

    // optional bool ignore_not_reacting = 1;
    if (has_ignore_not_reacting()) {
      total_size += 1 + 1;
    }

    // optional bool find_unique_embeddings = 2;
    if (has_find_unique_embeddings()) {
      total_size += 1 + 1;
    }

    // optional bool one_embedding_per_start_atom = 4;
    if (has_one_embedding_per_start_atom()) {
      total_size += 1 + 1;
    }

    // optional bool ignore_symmetry_related_matches = 5;
    if (has_ignore_symmetry_related_matches()) {
      total_size += 1 + 1;
    }

    // optional int32 suppress_if_more_than_this_many_substructure_search_hits = 7;
    if (has_suppress_if_more_than_this_many_substructure_search_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->suppress_if_more_than_this_many_substructure_search_hits());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchConditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.MatchConditions)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchConditions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchConditions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.MatchConditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.MatchConditions)
    MergeFrom(*source);
  }
}

void MatchConditions::MergeFrom(const MatchConditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.MatchConditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_multiple_match_string();
      multiple_match_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.multiple_match_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      process_hit_number_ = from.process_hit_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      ignore_not_reacting_ = from.ignore_not_reacting_;
    }
    if (cached_has_bits & 0x00000008u) {
      find_unique_embeddings_ = from.find_unique_embeddings_;
    }
    if (cached_has_bits & 0x00000010u) {
      one_embedding_per_start_atom_ = from.one_embedding_per_start_atom_;
    }
    if (cached_has_bits & 0x00000020u) {
      ignore_symmetry_related_matches_ = from.ignore_symmetry_related_matches_;
    }
    if (cached_has_bits & 0x00000040u) {
      suppress_if_more_than_this_many_substructure_search_hits_ = from.suppress_if_more_than_this_many_substructure_search_hits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MatchConditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.MatchConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchConditions::CopyFrom(const MatchConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.MatchConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchConditions::IsInitialized() const {
  return true;
}

void MatchConditions::Swap(MatchConditions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchConditions::InternalSwap(MatchConditions* other) {
  using std::swap;
  multiple_match_string_.Swap(&other->multiple_match_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(process_hit_number_, other->process_hit_number_);
  swap(ignore_not_reacting_, other->ignore_not_reacting_);
  swap(find_unique_embeddings_, other->find_unique_embeddings_);
  swap(one_embedding_per_start_atom_, other->one_embedding_per_start_atom_);
  swap(ignore_symmetry_related_matches_, other->ignore_symmetry_related_matches_);
  swap(suppress_if_more_than_this_many_substructure_search_hits_, other->suppress_if_more_than_this_many_substructure_search_hits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MatchConditions::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScaffoldMatchConditions::InitAsDefaultInstance() {
  ::ReactionProto::_ScaffoldMatchConditions_default_instance_._instance.get_mutable()->match_conditions_ = const_cast< ::ReactionProto::MatchConditions*>(
      ::ReactionProto::MatchConditions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScaffoldMatchConditions::kMatchConditionsFieldNumber;
const int ScaffoldMatchConditions::kEnumerateScaffoldHitsIndividuallyFieldNumber;
const int ScaffoldMatchConditions::kCombinatorialExpansionOfScaffoldHitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScaffoldMatchConditions::ScaffoldMatchConditions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_ScaffoldMatchConditions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.ScaffoldMatchConditions)
}
ScaffoldMatchConditions::ScaffoldMatchConditions(const ScaffoldMatchConditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_match_conditions()) {
    match_conditions_ = new ::ReactionProto::MatchConditions(*from.match_conditions_);
  } else {
    match_conditions_ = NULL;
  }
  ::memcpy(&enumerate_scaffold_hits_individually_, &from.enumerate_scaffold_hits_individually_,
    static_cast<size_t>(reinterpret_cast<char*>(&combinatorial_expansion_of_scaffold_hits_) -
    reinterpret_cast<char*>(&enumerate_scaffold_hits_individually_)) + sizeof(combinatorial_expansion_of_scaffold_hits_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.ScaffoldMatchConditions)
}

void ScaffoldMatchConditions::SharedCtor() {
  ::memset(&match_conditions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&combinatorial_expansion_of_scaffold_hits_) -
      reinterpret_cast<char*>(&match_conditions_)) + sizeof(combinatorial_expansion_of_scaffold_hits_));
}

ScaffoldMatchConditions::~ScaffoldMatchConditions() {
  // @@protoc_insertion_point(destructor:ReactionProto.ScaffoldMatchConditions)
  SharedDtor();
}

void ScaffoldMatchConditions::SharedDtor() {
  if (this != internal_default_instance()) delete match_conditions_;
}

void ScaffoldMatchConditions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScaffoldMatchConditions::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScaffoldMatchConditions& ScaffoldMatchConditions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_ScaffoldMatchConditions.base);
  return *internal_default_instance();
}


void ScaffoldMatchConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.ScaffoldMatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(match_conditions_ != NULL);
    match_conditions_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&enumerate_scaffold_hits_individually_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&combinatorial_expansion_of_scaffold_hits_) -
        reinterpret_cast<char*>(&enumerate_scaffold_hits_individually_)) + sizeof(combinatorial_expansion_of_scaffold_hits_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScaffoldMatchConditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.ScaffoldMatchConditions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ReactionProto.MatchConditions match_conditions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enumerate_scaffold_hits_individually = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_enumerate_scaffold_hits_individually();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enumerate_scaffold_hits_individually_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 combinatorial_expansion_of_scaffold_hits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_combinatorial_expansion_of_scaffold_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &combinatorial_expansion_of_scaffold_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.ScaffoldMatchConditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.ScaffoldMatchConditions)
  return false;
#undef DO_
}

void ScaffoldMatchConditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.ScaffoldMatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ReactionProto.MatchConditions match_conditions = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_match_conditions(), output);
  }

  // optional bool enumerate_scaffold_hits_individually = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enumerate_scaffold_hits_individually(), output);
  }

  // optional int32 combinatorial_expansion_of_scaffold_hits = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->combinatorial_expansion_of_scaffold_hits(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.ScaffoldMatchConditions)
}

::google::protobuf::uint8* ScaffoldMatchConditions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.ScaffoldMatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ReactionProto.MatchConditions match_conditions = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_match_conditions(), deterministic, target);
  }

  // optional bool enumerate_scaffold_hits_individually = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enumerate_scaffold_hits_individually(), target);
  }

  // optional int32 combinatorial_expansion_of_scaffold_hits = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->combinatorial_expansion_of_scaffold_hits(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.ScaffoldMatchConditions)
  return target;
}

size_t ScaffoldMatchConditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.ScaffoldMatchConditions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .ReactionProto.MatchConditions match_conditions = 1;
    if (has_match_conditions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *match_conditions_);
    }

    // optional bool enumerate_scaffold_hits_individually = 2;
    if (has_enumerate_scaffold_hits_individually()) {
      total_size += 1 + 1;
    }

    // optional int32 combinatorial_expansion_of_scaffold_hits = 3;
    if (has_combinatorial_expansion_of_scaffold_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->combinatorial_expansion_of_scaffold_hits());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScaffoldMatchConditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.ScaffoldMatchConditions)
  GOOGLE_DCHECK_NE(&from, this);
  const ScaffoldMatchConditions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScaffoldMatchConditions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.ScaffoldMatchConditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.ScaffoldMatchConditions)
    MergeFrom(*source);
  }
}

void ScaffoldMatchConditions::MergeFrom(const ScaffoldMatchConditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.ScaffoldMatchConditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_match_conditions()->::ReactionProto::MatchConditions::MergeFrom(from.match_conditions());
    }
    if (cached_has_bits & 0x00000002u) {
      enumerate_scaffold_hits_individually_ = from.enumerate_scaffold_hits_individually_;
    }
    if (cached_has_bits & 0x00000004u) {
      combinatorial_expansion_of_scaffold_hits_ = from.combinatorial_expansion_of_scaffold_hits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScaffoldMatchConditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.ScaffoldMatchConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScaffoldMatchConditions::CopyFrom(const ScaffoldMatchConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.ScaffoldMatchConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScaffoldMatchConditions::IsInitialized() const {
  return true;
}

void ScaffoldMatchConditions::Swap(ScaffoldMatchConditions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScaffoldMatchConditions::InternalSwap(ScaffoldMatchConditions* other) {
  using std::swap;
  swap(match_conditions_, other->match_conditions_);
  swap(enumerate_scaffold_hits_individually_, other->enumerate_scaffold_hits_individually_);
  swap(combinatorial_expansion_of_scaffold_hits_, other->combinatorial_expansion_of_scaffold_hits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScaffoldMatchConditions::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SidechainMatchConditions::InitAsDefaultInstance() {
  ::ReactionProto::_SidechainMatchConditions_default_instance_._instance.get_mutable()->match_conditions_ = const_cast< ::ReactionProto::MatchConditions*>(
      ::ReactionProto::MatchConditions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SidechainMatchConditions::kMatchConditionsFieldNumber;
const int SidechainMatchConditions::kMakeNewReagentForEachHitFieldNumber;
const int SidechainMatchConditions::kMaxMatchesToFindFieldNumber;
const int SidechainMatchConditions::kStripReagentsToLargestFragmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SidechainMatchConditions::SidechainMatchConditions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_SidechainMatchConditions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.SidechainMatchConditions)
}
SidechainMatchConditions::SidechainMatchConditions(const SidechainMatchConditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_match_conditions()) {
    match_conditions_ = new ::ReactionProto::MatchConditions(*from.match_conditions_);
  } else {
    match_conditions_ = NULL;
  }
  ::memcpy(&max_matches_to_find_, &from.max_matches_to_find_,
    static_cast<size_t>(reinterpret_cast<char*>(&strip_reagents_to_largest_fragment_) -
    reinterpret_cast<char*>(&max_matches_to_find_)) + sizeof(strip_reagents_to_largest_fragment_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.SidechainMatchConditions)
}

void SidechainMatchConditions::SharedCtor() {
  ::memset(&match_conditions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&strip_reagents_to_largest_fragment_) -
      reinterpret_cast<char*>(&match_conditions_)) + sizeof(strip_reagents_to_largest_fragment_));
}

SidechainMatchConditions::~SidechainMatchConditions() {
  // @@protoc_insertion_point(destructor:ReactionProto.SidechainMatchConditions)
  SharedDtor();
}

void SidechainMatchConditions::SharedDtor() {
  if (this != internal_default_instance()) delete match_conditions_;
}

void SidechainMatchConditions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SidechainMatchConditions::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SidechainMatchConditions& SidechainMatchConditions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_SidechainMatchConditions.base);
  return *internal_default_instance();
}


void SidechainMatchConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.SidechainMatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(match_conditions_ != NULL);
    match_conditions_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&max_matches_to_find_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&strip_reagents_to_largest_fragment_) -
        reinterpret_cast<char*>(&max_matches_to_find_)) + sizeof(strip_reagents_to_largest_fragment_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SidechainMatchConditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.SidechainMatchConditions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ReactionProto.MatchConditions match_conditions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool make_new_reagent_for_each_hit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_make_new_reagent_for_each_hit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &make_new_reagent_for_each_hit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_matches_to_find = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_max_matches_to_find();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_matches_to_find_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool strip_reagents_to_largest_fragment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_strip_reagents_to_largest_fragment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &strip_reagents_to_largest_fragment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.SidechainMatchConditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.SidechainMatchConditions)
  return false;
#undef DO_
}

void SidechainMatchConditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.SidechainMatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ReactionProto.MatchConditions match_conditions = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_match_conditions(), output);
  }

  // optional bool make_new_reagent_for_each_hit = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->make_new_reagent_for_each_hit(), output);
  }

  // optional int32 max_matches_to_find = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_matches_to_find(), output);
  }

  // optional bool strip_reagents_to_largest_fragment = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->strip_reagents_to_largest_fragment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.SidechainMatchConditions)
}

::google::protobuf::uint8* SidechainMatchConditions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.SidechainMatchConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ReactionProto.MatchConditions match_conditions = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_match_conditions(), deterministic, target);
  }

  // optional bool make_new_reagent_for_each_hit = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->make_new_reagent_for_each_hit(), target);
  }

  // optional int32 max_matches_to_find = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_matches_to_find(), target);
  }

  // optional bool strip_reagents_to_largest_fragment = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->strip_reagents_to_largest_fragment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.SidechainMatchConditions)
  return target;
}

size_t SidechainMatchConditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.SidechainMatchConditions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .ReactionProto.MatchConditions match_conditions = 1;
    if (has_match_conditions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *match_conditions_);
    }

    // optional int32 max_matches_to_find = 3;
    if (has_max_matches_to_find()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_matches_to_find());
    }

    // optional bool make_new_reagent_for_each_hit = 2;
    if (has_make_new_reagent_for_each_hit()) {
      total_size += 1 + 1;
    }

    // optional bool strip_reagents_to_largest_fragment = 4;
    if (has_strip_reagents_to_largest_fragment()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SidechainMatchConditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.SidechainMatchConditions)
  GOOGLE_DCHECK_NE(&from, this);
  const SidechainMatchConditions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SidechainMatchConditions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.SidechainMatchConditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.SidechainMatchConditions)
    MergeFrom(*source);
  }
}

void SidechainMatchConditions::MergeFrom(const SidechainMatchConditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.SidechainMatchConditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_match_conditions()->::ReactionProto::MatchConditions::MergeFrom(from.match_conditions());
    }
    if (cached_has_bits & 0x00000002u) {
      max_matches_to_find_ = from.max_matches_to_find_;
    }
    if (cached_has_bits & 0x00000004u) {
      make_new_reagent_for_each_hit_ = from.make_new_reagent_for_each_hit_;
    }
    if (cached_has_bits & 0x00000008u) {
      strip_reagents_to_largest_fragment_ = from.strip_reagents_to_largest_fragment_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SidechainMatchConditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.SidechainMatchConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SidechainMatchConditions::CopyFrom(const SidechainMatchConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.SidechainMatchConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SidechainMatchConditions::IsInitialized() const {
  return true;
}

void SidechainMatchConditions::Swap(SidechainMatchConditions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SidechainMatchConditions::InternalSwap(SidechainMatchConditions* other) {
  using std::swap;
  swap(match_conditions_, other->match_conditions_);
  swap(max_matches_to_find_, other->max_matches_to_find_);
  swap(make_new_reagent_for_each_hit_, other->make_new_reagent_for_each_hit_);
  swap(strip_reagents_to_largest_fragment_, other->strip_reagents_to_largest_fragment_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SidechainMatchConditions::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PairOfAtoms::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PairOfAtoms::kA1FieldNumber;
const int PairOfAtoms::kA2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PairOfAtoms::PairOfAtoms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_PairOfAtoms.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.PairOfAtoms)
}
PairOfAtoms::PairOfAtoms(const PairOfAtoms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a1_, &from.a1_,
    static_cast<size_t>(reinterpret_cast<char*>(&a2_) -
    reinterpret_cast<char*>(&a1_)) + sizeof(a2_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.PairOfAtoms)
}

void PairOfAtoms::SharedCtor() {
  ::memset(&a1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a2_) -
      reinterpret_cast<char*>(&a1_)) + sizeof(a2_));
}

PairOfAtoms::~PairOfAtoms() {
  // @@protoc_insertion_point(destructor:ReactionProto.PairOfAtoms)
  SharedDtor();
}

void PairOfAtoms::SharedDtor() {
}

void PairOfAtoms::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PairOfAtoms::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PairOfAtoms& PairOfAtoms::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_PairOfAtoms.base);
  return *internal_default_instance();
}


void PairOfAtoms::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.PairOfAtoms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&a1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&a2_) -
        reinterpret_cast<char*>(&a1_)) + sizeof(a2_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PairOfAtoms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.PairOfAtoms)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_a1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 a2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_a2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.PairOfAtoms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.PairOfAtoms)
  return false;
#undef DO_
}

void PairOfAtoms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.PairOfAtoms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a1(), output);
  }

  // optional int32 a2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->a2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.PairOfAtoms)
}

::google::protobuf::uint8* PairOfAtoms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.PairOfAtoms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a1(), target);
  }

  // optional int32 a2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->a2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.PairOfAtoms)
  return target;
}

size_t PairOfAtoms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.PairOfAtoms)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 a1 = 1;
    if (has_a1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a1());
    }

    // optional int32 a2 = 2;
    if (has_a2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a2());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PairOfAtoms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.PairOfAtoms)
  GOOGLE_DCHECK_NE(&from, this);
  const PairOfAtoms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PairOfAtoms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.PairOfAtoms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.PairOfAtoms)
    MergeFrom(*source);
  }
}

void PairOfAtoms::MergeFrom(const PairOfAtoms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.PairOfAtoms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      a1_ = from.a1_;
    }
    if (cached_has_bits & 0x00000002u) {
      a2_ = from.a2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PairOfAtoms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.PairOfAtoms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PairOfAtoms::CopyFrom(const PairOfAtoms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.PairOfAtoms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PairOfAtoms::IsInitialized() const {
  return true;
}

void PairOfAtoms::Swap(PairOfAtoms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PairOfAtoms::InternalSwap(PairOfAtoms* other) {
  using std::swap;
  swap(a1_, other->a1_);
  swap(a2_, other->a2_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PairOfAtoms::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchedAtomInComponent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchedAtomInComponent::kComponentFieldNumber;
const int MatchedAtomInComponent::kAtomFieldNumber;
const int MatchedAtomInComponent::kComponentAndAtomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchedAtomInComponent::MatchedAtomInComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.MatchedAtomInComponent)
}
MatchedAtomInComponent::MatchedAtomInComponent(const MatchedAtomInComponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  component_and_atom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_component_and_atom()) {
    component_and_atom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_and_atom_);
  }
  ::memcpy(&component_, &from.component_,
    static_cast<size_t>(reinterpret_cast<char*>(&atom_) -
    reinterpret_cast<char*>(&component_)) + sizeof(atom_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.MatchedAtomInComponent)
}

void MatchedAtomInComponent::SharedCtor() {
  component_and_atom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&component_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&atom_) -
      reinterpret_cast<char*>(&component_)) + sizeof(atom_));
}

MatchedAtomInComponent::~MatchedAtomInComponent() {
  // @@protoc_insertion_point(destructor:ReactionProto.MatchedAtomInComponent)
  SharedDtor();
}

void MatchedAtomInComponent::SharedDtor() {
  component_and_atom_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MatchedAtomInComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MatchedAtomInComponent::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchedAtomInComponent& MatchedAtomInComponent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_MatchedAtomInComponent.base);
  return *internal_default_instance();
}


void MatchedAtomInComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.MatchedAtomInComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    component_and_atom_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&component_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&atom_) -
        reinterpret_cast<char*>(&component_)) + sizeof(atom_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatchedAtomInComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.MatchedAtomInComponent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 component = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_component();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &component_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 atom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string component_and_atom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component_and_atom()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->component_and_atom().data(), static_cast<int>(this->component_and_atom().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.MatchedAtomInComponent.component_and_atom");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.MatchedAtomInComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.MatchedAtomInComponent)
  return false;
#undef DO_
}

void MatchedAtomInComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.MatchedAtomInComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 component = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->component(), output);
  }

  // optional int32 atom = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->atom(), output);
  }

  // optional string component_and_atom = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_and_atom().data(), static_cast<int>(this->component_and_atom().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.MatchedAtomInComponent.component_and_atom");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->component_and_atom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.MatchedAtomInComponent)
}

::google::protobuf::uint8* MatchedAtomInComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.MatchedAtomInComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 component = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->component(), target);
  }

  // optional int32 atom = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->atom(), target);
  }

  // optional string component_and_atom = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_and_atom().data(), static_cast<int>(this->component_and_atom().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.MatchedAtomInComponent.component_and_atom");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->component_and_atom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.MatchedAtomInComponent)
  return target;
}

size_t MatchedAtomInComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.MatchedAtomInComponent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string component_and_atom = 3;
    if (has_component_and_atom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->component_and_atom());
    }

    // optional int32 component = 1;
    if (has_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->component());
    }

    // optional int32 atom = 2;
    if (has_atom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->atom());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchedAtomInComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.MatchedAtomInComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchedAtomInComponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchedAtomInComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.MatchedAtomInComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.MatchedAtomInComponent)
    MergeFrom(*source);
  }
}

void MatchedAtomInComponent::MergeFrom(const MatchedAtomInComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.MatchedAtomInComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_component_and_atom();
      component_and_atom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_and_atom_);
    }
    if (cached_has_bits & 0x00000002u) {
      component_ = from.component_;
    }
    if (cached_has_bits & 0x00000004u) {
      atom_ = from.atom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MatchedAtomInComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.MatchedAtomInComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchedAtomInComponent::CopyFrom(const MatchedAtomInComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.MatchedAtomInComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchedAtomInComponent::IsInitialized() const {
  return true;
}

void MatchedAtomInComponent::Swap(MatchedAtomInComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchedAtomInComponent::InternalSwap(MatchedAtomInComponent* other) {
  using std::swap;
  component_and_atom_.Swap(&other->component_and_atom_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(component_, other->component_);
  swap(atom_, other->atom_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MatchedAtomInComponent::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StereoCenterComponent::InitAsDefaultInstance() {
  ::ReactionProto::_StereoCenterComponent_default_instance_.atom_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_StereoCenterComponent_default_instance_.implicit_hydrogen_ = false;
}
void StereoCenterComponent::set_allocated_atom(::ReactionProto::MatchedAtomInComponent* atom) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_AtomOrHydrogen();
  if (atom) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      atom = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, atom, submessage_arena);
    }
    set_has_atom();
    AtomOrHydrogen_.atom_ = atom;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.StereoCenterComponent.atom)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StereoCenterComponent::kAtomFieldNumber;
const int StereoCenterComponent::kImplicitHydrogenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StereoCenterComponent::StereoCenterComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_StereoCenterComponent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.StereoCenterComponent)
}
StereoCenterComponent::StereoCenterComponent(const StereoCenterComponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_AtomOrHydrogen();
  switch (from.AtomOrHydrogen_case()) {
    case kAtom: {
      mutable_atom()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.atom());
      break;
    }
    case kImplicitHydrogen: {
      set_implicit_hydrogen(from.implicit_hydrogen());
      break;
    }
    case ATOMORHYDROGEN_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ReactionProto.StereoCenterComponent)
}

void StereoCenterComponent::SharedCtor() {
  clear_has_AtomOrHydrogen();
}

StereoCenterComponent::~StereoCenterComponent() {
  // @@protoc_insertion_point(destructor:ReactionProto.StereoCenterComponent)
  SharedDtor();
}

void StereoCenterComponent::SharedDtor() {
  if (has_AtomOrHydrogen()) {
    clear_AtomOrHydrogen();
  }
}

void StereoCenterComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StereoCenterComponent::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StereoCenterComponent& StereoCenterComponent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_StereoCenterComponent.base);
  return *internal_default_instance();
}


void StereoCenterComponent::clear_AtomOrHydrogen() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.StereoCenterComponent)
  switch (AtomOrHydrogen_case()) {
    case kAtom: {
      delete AtomOrHydrogen_.atom_;
      break;
    }
    case kImplicitHydrogen: {
      // No need to clear
      break;
    }
    case ATOMORHYDROGEN_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATOMORHYDROGEN_NOT_SET;
}


void StereoCenterComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.StereoCenterComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_AtomOrHydrogen();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StereoCenterComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.StereoCenterComponent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ReactionProto.MatchedAtomInComponent atom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_atom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool implicit_hydrogen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_AtomOrHydrogen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &AtomOrHydrogen_.implicit_hydrogen_)));
          set_has_implicit_hydrogen();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.StereoCenterComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.StereoCenterComponent)
  return false;
#undef DO_
}

void StereoCenterComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.StereoCenterComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (AtomOrHydrogen_case()) {
    case kAtom:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_atom(), output);
      break;
    case kImplicitHydrogen:
      ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->implicit_hydrogen(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.StereoCenterComponent)
}

::google::protobuf::uint8* StereoCenterComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.StereoCenterComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (AtomOrHydrogen_case()) {
    case kAtom:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_atom(), deterministic, target);
      break;
    case kImplicitHydrogen:
      target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->implicit_hydrogen(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.StereoCenterComponent)
  return target;
}

size_t StereoCenterComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.StereoCenterComponent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (AtomOrHydrogen_case()) {
    // optional .ReactionProto.MatchedAtomInComponent atom = 1;
    case kAtom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *AtomOrHydrogen_.atom_);
      break;
    }
    // optional bool implicit_hydrogen = 2;
    case kImplicitHydrogen: {
      total_size += 1 + 1;
      break;
    }
    case ATOMORHYDROGEN_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StereoCenterComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.StereoCenterComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const StereoCenterComponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StereoCenterComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.StereoCenterComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.StereoCenterComponent)
    MergeFrom(*source);
  }
}

void StereoCenterComponent::MergeFrom(const StereoCenterComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.StereoCenterComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.AtomOrHydrogen_case()) {
    case kAtom: {
      mutable_atom()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.atom());
      break;
    }
    case kImplicitHydrogen: {
      set_implicit_hydrogen(from.implicit_hydrogen());
      break;
    }
    case ATOMORHYDROGEN_NOT_SET: {
      break;
    }
  }
}

void StereoCenterComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.StereoCenterComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StereoCenterComponent::CopyFrom(const StereoCenterComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.StereoCenterComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StereoCenterComponent::IsInitialized() const {
  return true;
}

void StereoCenterComponent::Swap(StereoCenterComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StereoCenterComponent::InternalSwap(StereoCenterComponent* other) {
  using std::swap;
  swap(AtomOrHydrogen_, other->AtomOrHydrogen_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StereoCenterComponent::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StereoCenter::InitAsDefaultInstance() {
  ::ReactionProto::_StereoCenter_default_instance_._instance.get_mutable()->a_ = const_cast< ::ReactionProto::StereoCenterComponent*>(
      ::ReactionProto::StereoCenterComponent::internal_default_instance());
  ::ReactionProto::_StereoCenter_default_instance_._instance.get_mutable()->top_front_ = const_cast< ::ReactionProto::StereoCenterComponent*>(
      ::ReactionProto::StereoCenterComponent::internal_default_instance());
  ::ReactionProto::_StereoCenter_default_instance_._instance.get_mutable()->top_back_ = const_cast< ::ReactionProto::StereoCenterComponent*>(
      ::ReactionProto::StereoCenterComponent::internal_default_instance());
  ::ReactionProto::_StereoCenter_default_instance_._instance.get_mutable()->left_down_ = const_cast< ::ReactionProto::StereoCenterComponent*>(
      ::ReactionProto::StereoCenterComponent::internal_default_instance());
  ::ReactionProto::_StereoCenter_default_instance_._instance.get_mutable()->right_down_ = const_cast< ::ReactionProto::StereoCenterComponent*>(
      ::ReactionProto::StereoCenterComponent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StereoCenter::kAFieldNumber;
const int StereoCenter::kTopFrontFieldNumber;
const int StereoCenter::kTopBackFieldNumber;
const int StereoCenter::kLeftDownFieldNumber;
const int StereoCenter::kRightDownFieldNumber;
const int StereoCenter::kOptionalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StereoCenter::StereoCenter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_StereoCenter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.StereoCenter)
}
StereoCenter::StereoCenter(const StereoCenter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_a()) {
    a_ = new ::ReactionProto::StereoCenterComponent(*from.a_);
  } else {
    a_ = NULL;
  }
  if (from.has_top_front()) {
    top_front_ = new ::ReactionProto::StereoCenterComponent(*from.top_front_);
  } else {
    top_front_ = NULL;
  }
  if (from.has_top_back()) {
    top_back_ = new ::ReactionProto::StereoCenterComponent(*from.top_back_);
  } else {
    top_back_ = NULL;
  }
  if (from.has_left_down()) {
    left_down_ = new ::ReactionProto::StereoCenterComponent(*from.left_down_);
  } else {
    left_down_ = NULL;
  }
  if (from.has_right_down()) {
    right_down_ = new ::ReactionProto::StereoCenterComponent(*from.right_down_);
  } else {
    right_down_ = NULL;
  }
  optional_ = from.optional_;
  // @@protoc_insertion_point(copy_constructor:ReactionProto.StereoCenter)
}

void StereoCenter::SharedCtor() {
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optional_) -
      reinterpret_cast<char*>(&a_)) + sizeof(optional_));
}

StereoCenter::~StereoCenter() {
  // @@protoc_insertion_point(destructor:ReactionProto.StereoCenter)
  SharedDtor();
}

void StereoCenter::SharedDtor() {
  if (this != internal_default_instance()) delete a_;
  if (this != internal_default_instance()) delete top_front_;
  if (this != internal_default_instance()) delete top_back_;
  if (this != internal_default_instance()) delete left_down_;
  if (this != internal_default_instance()) delete right_down_;
}

void StereoCenter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StereoCenter::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StereoCenter& StereoCenter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_StereoCenter.base);
  return *internal_default_instance();
}


void StereoCenter::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.StereoCenter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(a_ != NULL);
      a_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(top_front_ != NULL);
      top_front_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(top_back_ != NULL);
      top_back_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(left_down_ != NULL);
      left_down_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(right_down_ != NULL);
      right_down_->Clear();
    }
  }
  optional_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StereoCenter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.StereoCenter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ReactionProto.StereoCenterComponent a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.StereoCenterComponent top_front = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_front()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.StereoCenterComponent top_back = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_back()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.StereoCenterComponent left_down = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left_down()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.StereoCenterComponent right_down = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right_down()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool optional = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_optional();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &optional_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.StereoCenter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.StereoCenter)
  return false;
#undef DO_
}

void StereoCenter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.StereoCenter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ReactionProto.StereoCenterComponent a = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_a(), output);
  }

  // optional .ReactionProto.StereoCenterComponent top_front = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_top_front(), output);
  }

  // optional .ReactionProto.StereoCenterComponent top_back = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_top_back(), output);
  }

  // optional .ReactionProto.StereoCenterComponent left_down = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_left_down(), output);
  }

  // optional .ReactionProto.StereoCenterComponent right_down = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_right_down(), output);
  }

  // optional bool optional = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->optional(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.StereoCenter)
}

::google::protobuf::uint8* StereoCenter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.StereoCenter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ReactionProto.StereoCenterComponent a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_a(), deterministic, target);
  }

  // optional .ReactionProto.StereoCenterComponent top_front = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_top_front(), deterministic, target);
  }

  // optional .ReactionProto.StereoCenterComponent top_back = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_top_back(), deterministic, target);
  }

  // optional .ReactionProto.StereoCenterComponent left_down = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_left_down(), deterministic, target);
  }

  // optional .ReactionProto.StereoCenterComponent right_down = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_right_down(), deterministic, target);
  }

  // optional bool optional = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->optional(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.StereoCenter)
  return target;
}

size_t StereoCenter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.StereoCenter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .ReactionProto.StereoCenterComponent a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *a_);
    }

    // optional .ReactionProto.StereoCenterComponent top_front = 2;
    if (has_top_front()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *top_front_);
    }

    // optional .ReactionProto.StereoCenterComponent top_back = 3;
    if (has_top_back()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *top_back_);
    }

    // optional .ReactionProto.StereoCenterComponent left_down = 4;
    if (has_left_down()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *left_down_);
    }

    // optional .ReactionProto.StereoCenterComponent right_down = 5;
    if (has_right_down()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *right_down_);
    }

    // optional bool optional = 6;
    if (has_optional()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StereoCenter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.StereoCenter)
  GOOGLE_DCHECK_NE(&from, this);
  const StereoCenter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StereoCenter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.StereoCenter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.StereoCenter)
    MergeFrom(*source);
  }
}

void StereoCenter::MergeFrom(const StereoCenter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.StereoCenter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_a()->::ReactionProto::StereoCenterComponent::MergeFrom(from.a());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_top_front()->::ReactionProto::StereoCenterComponent::MergeFrom(from.top_front());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_top_back()->::ReactionProto::StereoCenterComponent::MergeFrom(from.top_back());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_left_down()->::ReactionProto::StereoCenterComponent::MergeFrom(from.left_down());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_right_down()->::ReactionProto::StereoCenterComponent::MergeFrom(from.right_down());
    }
    if (cached_has_bits & 0x00000020u) {
      optional_ = from.optional_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StereoCenter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.StereoCenter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StereoCenter::CopyFrom(const StereoCenter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.StereoCenter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StereoCenter::IsInitialized() const {
  return true;
}

void StereoCenter::Swap(StereoCenter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StereoCenter::InternalSwap(StereoCenter* other) {
  using std::swap;
  swap(a_, other->a_);
  swap(top_front_, other->top_front_);
  swap(top_back_, other->top_back_);
  swap(left_down_, other->left_down_);
  swap(right_down_, other->right_down_);
  swap(optional_, other->optional_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StereoCenter::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BondToBeMade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BondToBeMade::kA1FieldNumber;
const int BondToBeMade::kA2FieldNumber;
const int BondToBeMade::kBtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BondToBeMade::BondToBeMade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_BondToBeMade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.BondToBeMade)
}
BondToBeMade::BondToBeMade(const BondToBeMade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a1_, &from.a1_,
    static_cast<size_t>(reinterpret_cast<char*>(&btype_) -
    reinterpret_cast<char*>(&a1_)) + sizeof(btype_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.BondToBeMade)
}

void BondToBeMade::SharedCtor() {
  ::memset(&a1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a2_) -
      reinterpret_cast<char*>(&a1_)) + sizeof(a2_));
  btype_ = 3;
}

BondToBeMade::~BondToBeMade() {
  // @@protoc_insertion_point(destructor:ReactionProto.BondToBeMade)
  SharedDtor();
}

void BondToBeMade::SharedDtor() {
}

void BondToBeMade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BondToBeMade::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BondToBeMade& BondToBeMade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_BondToBeMade.base);
  return *internal_default_instance();
}


void BondToBeMade::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.BondToBeMade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&a1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&a2_) -
        reinterpret_cast<char*>(&a1_)) + sizeof(a2_));
    btype_ = 3;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BondToBeMade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.BondToBeMade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_a1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 a2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_a2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SubstructureSearch.BondType btype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SubstructureSearch::BondType_IsValid(value)) {
            set_btype(static_cast< ::SubstructureSearch::BondType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.BondToBeMade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.BondToBeMade)
  return false;
#undef DO_
}

void BondToBeMade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.BondToBeMade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a1(), output);
  }

  // optional int32 a2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->a2(), output);
  }

  // optional .SubstructureSearch.BondType btype = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->btype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.BondToBeMade)
}

::google::protobuf::uint8* BondToBeMade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.BondToBeMade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a1(), target);
  }

  // optional int32 a2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->a2(), target);
  }

  // optional .SubstructureSearch.BondType btype = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->btype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.BondToBeMade)
  return target;
}

size_t BondToBeMade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.BondToBeMade)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 a1 = 1;
    if (has_a1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a1());
    }

    // optional int32 a2 = 2;
    if (has_a2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a2());
    }

    // optional .SubstructureSearch.BondType btype = 3;
    if (has_btype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->btype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BondToBeMade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.BondToBeMade)
  GOOGLE_DCHECK_NE(&from, this);
  const BondToBeMade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BondToBeMade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.BondToBeMade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.BondToBeMade)
    MergeFrom(*source);
  }
}

void BondToBeMade::MergeFrom(const BondToBeMade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.BondToBeMade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      a1_ = from.a1_;
    }
    if (cached_has_bits & 0x00000002u) {
      a2_ = from.a2_;
    }
    if (cached_has_bits & 0x00000004u) {
      btype_ = from.btype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BondToBeMade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.BondToBeMade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BondToBeMade::CopyFrom(const BondToBeMade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.BondToBeMade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BondToBeMade::IsInitialized() const {
  return true;
}

void BondToBeMade::Swap(BondToBeMade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BondToBeMade::InternalSwap(BondToBeMade* other) {
  using std::swap;
  swap(a1_, other->a1_);
  swap(a2_, other->a2_);
  swap(btype_, other->btype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BondToBeMade::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InterParticleBond::InitAsDefaultInstance() {
  ::ReactionProto::_InterParticleBond_default_instance_.a1_ = 0u;
  ::ReactionProto::_InterParticleBond_default_instance_.c1_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_InterParticleBond_default_instance_.a2_ = 0u;
  ::ReactionProto::_InterParticleBond_default_instance_.c2_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
}
void InterParticleBond::set_allocated_c1(::ReactionProto::MatchedAtomInComponent* c1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom1();
  if (c1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c1, submessage_arena);
    }
    set_has_c1();
    atom1_.c1_ = c1;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.InterParticleBond.c1)
}
void InterParticleBond::set_allocated_c2(::ReactionProto::MatchedAtomInComponent* c2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom2();
  if (c2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2, submessage_arena);
    }
    set_has_c2();
    atom2_.c2_ = c2;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.InterParticleBond.c2)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterParticleBond::kA1FieldNumber;
const int InterParticleBond::kC1FieldNumber;
const int InterParticleBond::kA2FieldNumber;
const int InterParticleBond::kC2FieldNumber;
const int InterParticleBond::kBtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterParticleBond::InterParticleBond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_InterParticleBond.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.InterParticleBond)
}
InterParticleBond::InterParticleBond(const InterParticleBond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  btype_ = from.btype_;
  clear_has_atom1();
  switch (from.atom1_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  clear_has_atom2();
  switch (from.atom2_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ReactionProto.InterParticleBond)
}

void InterParticleBond::SharedCtor() {
  btype_ = 3;
  clear_has_atom1();
  clear_has_atom2();
}

InterParticleBond::~InterParticleBond() {
  // @@protoc_insertion_point(destructor:ReactionProto.InterParticleBond)
  SharedDtor();
}

void InterParticleBond::SharedDtor() {
  if (has_atom1()) {
    clear_atom1();
  }
  if (has_atom2()) {
    clear_atom2();
  }
}

void InterParticleBond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InterParticleBond::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InterParticleBond& InterParticleBond::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_InterParticleBond.base);
  return *internal_default_instance();
}


void InterParticleBond::clear_atom1() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.InterParticleBond)
  switch (atom1_case()) {
    case kA1: {
      // No need to clear
      break;
    }
    case kC1: {
      delete atom1_.c1_;
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATOM1_NOT_SET;
}

void InterParticleBond::clear_atom2() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.InterParticleBond)
  switch (atom2_case()) {
    case kA2: {
      // No need to clear
      break;
    }
    case kC2: {
      delete atom2_.c2_;
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = ATOM2_NOT_SET;
}


void InterParticleBond::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.InterParticleBond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  btype_ = 3;
  clear_atom1();
  clear_atom2();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InterParticleBond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.InterParticleBond)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_atom1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom1_.a1_)));
          set_has_a1();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 a2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_atom2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom2_.a2_)));
          set_has_a2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SubstructureSearch.BondType btype = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SubstructureSearch::BondType_IsValid(value)) {
            set_btype(static_cast< ::SubstructureSearch::BondType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.InterParticleBond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.InterParticleBond)
  return false;
#undef DO_
}

void InterParticleBond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.InterParticleBond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (atom1_case()) {
    case kA1:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->a1(), output);
      break;
    case kC1:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_c1(), output);
      break;
    default: ;
  }
  switch (atom2_case()) {
    case kA2:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->a2(), output);
      break;
    case kC2:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_c2(), output);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional .SubstructureSearch.BondType btype = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->btype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.InterParticleBond)
}

::google::protobuf::uint8* InterParticleBond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.InterParticleBond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (atom1_case()) {
    case kA1:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->a1(), target);
      break;
    case kC1:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_c1(), deterministic, target);
      break;
    default: ;
  }
  switch (atom2_case()) {
    case kA2:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->a2(), target);
      break;
    case kC2:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_c2(), deterministic, target);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional .SubstructureSearch.BondType btype = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->btype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.InterParticleBond)
  return target;
}

size_t InterParticleBond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.InterParticleBond)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .SubstructureSearch.BondType btype = 5;
  if (has_btype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->btype());
  }

  switch (atom1_case()) {
    // optional uint32 a1 = 1;
    case kA1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a1());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
    case kC1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom1_.c1_);
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  switch (atom2_case()) {
    // optional uint32 a2 = 3;
    case kA2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a2());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
    case kC2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom2_.c2_);
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterParticleBond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.InterParticleBond)
  GOOGLE_DCHECK_NE(&from, this);
  const InterParticleBond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterParticleBond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.InterParticleBond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.InterParticleBond)
    MergeFrom(*source);
  }
}

void InterParticleBond::MergeFrom(const InterParticleBond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.InterParticleBond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_btype()) {
    set_btype(from.btype());
  }
  switch (from.atom1_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  switch (from.atom2_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
}

void InterParticleBond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.InterParticleBond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterParticleBond::CopyFrom(const InterParticleBond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.InterParticleBond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterParticleBond::IsInitialized() const {
  return true;
}

void InterParticleBond::Swap(InterParticleBond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterParticleBond::InternalSwap(InterParticleBond* other) {
  using std::swap;
  swap(btype_, other->btype_);
  swap(atom1_, other->atom1_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(atom2_, other->atom2_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InterParticleBond::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReplaceAtom::InitAsDefaultInstance() {
  ::ReactionProto::_ReplaceAtom_default_instance_.a1_ = 0u;
  ::ReactionProto::_ReplaceAtom_default_instance_.c1_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_ReplaceAtom_default_instance_.a2_ = 0u;
  ::ReactionProto::_ReplaceAtom_default_instance_.c2_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
}
void ReplaceAtom::set_allocated_c1(::ReactionProto::MatchedAtomInComponent* c1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom1();
  if (c1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c1, submessage_arena);
    }
    set_has_c1();
    atom1_.c1_ = c1;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.ReplaceAtom.c1)
}
void ReplaceAtom::set_allocated_c2(::ReactionProto::MatchedAtomInComponent* c2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom2();
  if (c2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2, submessage_arena);
    }
    set_has_c2();
    atom2_.c2_ = c2;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.ReplaceAtom.c2)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplaceAtom::kA1FieldNumber;
const int ReplaceAtom::kC1FieldNumber;
const int ReplaceAtom::kA2FieldNumber;
const int ReplaceAtom::kC2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplaceAtom::ReplaceAtom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_ReplaceAtom.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.ReplaceAtom)
}
ReplaceAtom::ReplaceAtom(const ReplaceAtom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_atom1();
  switch (from.atom1_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  clear_has_atom2();
  switch (from.atom2_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ReactionProto.ReplaceAtom)
}

void ReplaceAtom::SharedCtor() {
  clear_has_atom1();
  clear_has_atom2();
}

ReplaceAtom::~ReplaceAtom() {
  // @@protoc_insertion_point(destructor:ReactionProto.ReplaceAtom)
  SharedDtor();
}

void ReplaceAtom::SharedDtor() {
  if (has_atom1()) {
    clear_atom1();
  }
  if (has_atom2()) {
    clear_atom2();
  }
}

void ReplaceAtom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReplaceAtom::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplaceAtom& ReplaceAtom::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_ReplaceAtom.base);
  return *internal_default_instance();
}


void ReplaceAtom::clear_atom1() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.ReplaceAtom)
  switch (atom1_case()) {
    case kA1: {
      // No need to clear
      break;
    }
    case kC1: {
      delete atom1_.c1_;
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATOM1_NOT_SET;
}

void ReplaceAtom::clear_atom2() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.ReplaceAtom)
  switch (atom2_case()) {
    case kA2: {
      // No need to clear
      break;
    }
    case kC2: {
      delete atom2_.c2_;
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = ATOM2_NOT_SET;
}


void ReplaceAtom::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.ReplaceAtom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_atom1();
  clear_atom2();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReplaceAtom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.ReplaceAtom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_atom1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom1_.a1_)));
          set_has_a1();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 a2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_atom2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom2_.a2_)));
          set_has_a2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.ReplaceAtom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.ReplaceAtom)
  return false;
#undef DO_
}

void ReplaceAtom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.ReplaceAtom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (atom1_case()) {
    case kA1:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->a1(), output);
      break;
    case kC1:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_c1(), output);
      break;
    default: ;
  }
  switch (atom2_case()) {
    case kA2:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->a2(), output);
      break;
    case kC2:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_c2(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.ReplaceAtom)
}

::google::protobuf::uint8* ReplaceAtom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.ReplaceAtom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (atom1_case()) {
    case kA1:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->a1(), target);
      break;
    case kC1:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_c1(), deterministic, target);
      break;
    default: ;
  }
  switch (atom2_case()) {
    case kA2:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->a2(), target);
      break;
    case kC2:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_c2(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.ReplaceAtom)
  return target;
}

size_t ReplaceAtom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.ReplaceAtom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (atom1_case()) {
    // optional uint32 a1 = 1;
    case kA1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a1());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
    case kC1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom1_.c1_);
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  switch (atom2_case()) {
    // optional uint32 a2 = 3;
    case kA2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a2());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
    case kC2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom2_.c2_);
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceAtom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.ReplaceAtom)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceAtom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplaceAtom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.ReplaceAtom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.ReplaceAtom)
    MergeFrom(*source);
  }
}

void ReplaceAtom::MergeFrom(const ReplaceAtom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.ReplaceAtom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.atom1_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  switch (from.atom2_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
}

void ReplaceAtom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.ReplaceAtom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceAtom::CopyFrom(const ReplaceAtom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.ReplaceAtom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceAtom::IsInitialized() const {
  return true;
}

void ReplaceAtom::Swap(ReplaceAtom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplaceAtom::InternalSwap(ReplaceAtom* other) {
  using std::swap;
  swap(atom1_, other->atom1_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(atom2_, other->atom2_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReplaceAtom::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WedgeBond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WedgeBond::kA1FieldNumber;
const int WedgeBond::kA2FieldNumber;
const int WedgeBond::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WedgeBond::WedgeBond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_WedgeBond.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.WedgeBond)
}
WedgeBond::WedgeBond(const WedgeBond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a1_, &from.a1_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&a1_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.WedgeBond)
}

void WedgeBond::SharedCtor() {
  ::memset(&a1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&a1_)) + sizeof(direction_));
}

WedgeBond::~WedgeBond() {
  // @@protoc_insertion_point(destructor:ReactionProto.WedgeBond)
  SharedDtor();
}

void WedgeBond::SharedDtor() {
}

void WedgeBond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WedgeBond::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WedgeBond& WedgeBond::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_WedgeBond.base);
  return *internal_default_instance();
}


void WedgeBond::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.WedgeBond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&a1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&direction_) -
        reinterpret_cast<char*>(&a1_)) + sizeof(direction_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WedgeBond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.WedgeBond)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_a1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 a2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_a2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_direction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.WedgeBond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.WedgeBond)
  return false;
#undef DO_
}

void WedgeBond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.WedgeBond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a1(), output);
  }

  // optional int32 a2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->a2(), output);
  }

  // optional int32 direction = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->direction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.WedgeBond)
}

::google::protobuf::uint8* WedgeBond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.WedgeBond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a1(), target);
  }

  // optional int32 a2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->a2(), target);
  }

  // optional int32 direction = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->direction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.WedgeBond)
  return target;
}

size_t WedgeBond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.WedgeBond)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 a1 = 1;
    if (has_a1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a1());
    }

    // optional int32 a2 = 2;
    if (has_a2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a2());
    }

    // optional int32 direction = 3;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->direction());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WedgeBond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.WedgeBond)
  GOOGLE_DCHECK_NE(&from, this);
  const WedgeBond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WedgeBond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.WedgeBond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.WedgeBond)
    MergeFrom(*source);
  }
}

void WedgeBond::MergeFrom(const WedgeBond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.WedgeBond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      a1_ = from.a1_;
    }
    if (cached_has_bits & 0x00000002u) {
      a2_ = from.a2_;
    }
    if (cached_has_bits & 0x00000004u) {
      direction_ = from.direction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WedgeBond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.WedgeBond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WedgeBond::CopyFrom(const WedgeBond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.WedgeBond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WedgeBond::IsInitialized() const {
  return true;
}

void WedgeBond::Swap(WedgeBond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WedgeBond::InternalSwap(WedgeBond* other) {
  using std::swap;
  swap(a1_, other->a1_);
  swap(a2_, other->a2_);
  swap(direction_, other->direction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WedgeBond::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeElement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeElement::kAtomFieldNumber;
const int ChangeElement::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeElement::ChangeElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_ChangeElement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.ChangeElement)
}
ChangeElement::ChangeElement(const ChangeElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  element_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_element()) {
    element_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_);
  }
  atom_ = from.atom_;
  // @@protoc_insertion_point(copy_constructor:ReactionProto.ChangeElement)
}

void ChangeElement::SharedCtor() {
  element_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  atom_ = 0;
}

ChangeElement::~ChangeElement() {
  // @@protoc_insertion_point(destructor:ReactionProto.ChangeElement)
  SharedDtor();
}

void ChangeElement::SharedDtor() {
  element_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeElement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeElement::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeElement& ChangeElement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_ChangeElement.base);
  return *internal_default_instance();
}


void ChangeElement::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.ChangeElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    element_.ClearNonDefaultToEmptyNoArena();
  }
  atom_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.ChangeElement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 atom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string element = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_element()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->element().data(), static_cast<int>(this->element().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.ChangeElement.element");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.ChangeElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.ChangeElement)
  return false;
#undef DO_
}

void ChangeElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.ChangeElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->atom(), output);
  }

  // optional string element = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->element().data(), static_cast<int>(this->element().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.ChangeElement.element");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->element(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.ChangeElement)
}

::google::protobuf::uint8* ChangeElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.ChangeElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->atom(), target);
  }

  // optional string element = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->element().data(), static_cast<int>(this->element().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.ChangeElement.element");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->element(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.ChangeElement)
  return target;
}

size_t ChangeElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.ChangeElement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string element = 2;
    if (has_element()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->element());
    }

    // optional int32 atom = 1;
    if (has_atom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->atom());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.ChangeElement)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.ChangeElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.ChangeElement)
    MergeFrom(*source);
  }
}

void ChangeElement::MergeFrom(const ChangeElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.ChangeElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_element();
      element_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_);
    }
    if (cached_has_bits & 0x00000002u) {
      atom_ = from.atom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.ChangeElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeElement::CopyFrom(const ChangeElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.ChangeElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeElement::IsInitialized() const {
  return true;
}

void ChangeElement::Swap(ChangeElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeElement::InternalSwap(ChangeElement* other) {
  using std::swap;
  element_.Swap(&other->element_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(atom_, other->atom_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeElement::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FormalCharge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FormalCharge::kAtomFieldNumber;
const int FormalCharge::kFormalChargeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FormalCharge::FormalCharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_FormalCharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.FormalCharge)
}
FormalCharge::FormalCharge(const FormalCharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&atom_, &from.atom_,
    static_cast<size_t>(reinterpret_cast<char*>(&formal_charge_) -
    reinterpret_cast<char*>(&atom_)) + sizeof(formal_charge_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.FormalCharge)
}

void FormalCharge::SharedCtor() {
  ::memset(&atom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&formal_charge_) -
      reinterpret_cast<char*>(&atom_)) + sizeof(formal_charge_));
}

FormalCharge::~FormalCharge() {
  // @@protoc_insertion_point(destructor:ReactionProto.FormalCharge)
  SharedDtor();
}

void FormalCharge::SharedDtor() {
}

void FormalCharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FormalCharge::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FormalCharge& FormalCharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_FormalCharge.base);
  return *internal_default_instance();
}


void FormalCharge::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.FormalCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&atom_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&formal_charge_) -
        reinterpret_cast<char*>(&atom_)) + sizeof(formal_charge_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FormalCharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.FormalCharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 atom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 formal_charge = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_formal_charge();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &formal_charge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.FormalCharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.FormalCharge)
  return false;
#undef DO_
}

void FormalCharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.FormalCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->atom(), output);
  }

  // optional int32 formal_charge = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->formal_charge(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.FormalCharge)
}

::google::protobuf::uint8* FormalCharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.FormalCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->atom(), target);
  }

  // optional int32 formal_charge = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->formal_charge(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.FormalCharge)
  return target;
}

size_t FormalCharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.FormalCharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 atom = 1;
    if (has_atom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->atom());
    }

    // optional int32 formal_charge = 2;
    if (has_formal_charge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->formal_charge());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FormalCharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.FormalCharge)
  GOOGLE_DCHECK_NE(&from, this);
  const FormalCharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FormalCharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.FormalCharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.FormalCharge)
    MergeFrom(*source);
  }
}

void FormalCharge::MergeFrom(const FormalCharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.FormalCharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      atom_ = from.atom_;
    }
    if (cached_has_bits & 0x00000002u) {
      formal_charge_ = from.formal_charge_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FormalCharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.FormalCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FormalCharge::CopyFrom(const FormalCharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.FormalCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FormalCharge::IsInitialized() const {
  return true;
}

void FormalCharge::Swap(FormalCharge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FormalCharge::InternalSwap(FormalCharge* other) {
  using std::swap;
  swap(atom_, other->atom_);
  swap(formal_charge_, other->formal_charge_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FormalCharge::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeFormalCharge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeFormalCharge::kAtomFieldNumber;
const int ChangeFormalCharge::kDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeFormalCharge::ChangeFormalCharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_ChangeFormalCharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.ChangeFormalCharge)
}
ChangeFormalCharge::ChangeFormalCharge(const ChangeFormalCharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&atom_, &from.atom_,
    static_cast<size_t>(reinterpret_cast<char*>(&delta_) -
    reinterpret_cast<char*>(&atom_)) + sizeof(delta_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.ChangeFormalCharge)
}

void ChangeFormalCharge::SharedCtor() {
  ::memset(&atom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delta_) -
      reinterpret_cast<char*>(&atom_)) + sizeof(delta_));
}

ChangeFormalCharge::~ChangeFormalCharge() {
  // @@protoc_insertion_point(destructor:ReactionProto.ChangeFormalCharge)
  SharedDtor();
}

void ChangeFormalCharge::SharedDtor() {
}

void ChangeFormalCharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeFormalCharge::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeFormalCharge& ChangeFormalCharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_ChangeFormalCharge.base);
  return *internal_default_instance();
}


void ChangeFormalCharge::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.ChangeFormalCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&atom_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delta_) -
        reinterpret_cast<char*>(&atom_)) + sizeof(delta_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeFormalCharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.ChangeFormalCharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 atom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 delta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.ChangeFormalCharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.ChangeFormalCharge)
  return false;
#undef DO_
}

void ChangeFormalCharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.ChangeFormalCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->atom(), output);
  }

  // optional int32 delta = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.ChangeFormalCharge)
}

::google::protobuf::uint8* ChangeFormalCharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.ChangeFormalCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->atom(), target);
  }

  // optional int32 delta = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.ChangeFormalCharge)
  return target;
}

size_t ChangeFormalCharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.ChangeFormalCharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 atom = 1;
    if (has_atom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->atom());
    }

    // optional int32 delta = 2;
    if (has_delta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeFormalCharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.ChangeFormalCharge)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeFormalCharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeFormalCharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.ChangeFormalCharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.ChangeFormalCharge)
    MergeFrom(*source);
  }
}

void ChangeFormalCharge::MergeFrom(const ChangeFormalCharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.ChangeFormalCharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      atom_ = from.atom_;
    }
    if (cached_has_bits & 0x00000002u) {
      delta_ = from.delta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeFormalCharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.ChangeFormalCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeFormalCharge::CopyFrom(const ChangeFormalCharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.ChangeFormalCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeFormalCharge::IsInitialized() const {
  return true;
}

void ChangeFormalCharge::Swap(ChangeFormalCharge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeFormalCharge::InternalSwap(ChangeFormalCharge* other) {
  using std::swap;
  swap(atom_, other->atom_);
  swap(delta_, other->delta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeFormalCharge::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaceIsotope::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaceIsotope::kAtomFieldNumber;
const int PlaceIsotope::kIsotopeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaceIsotope::PlaceIsotope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_PlaceIsotope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.PlaceIsotope)
}
PlaceIsotope::PlaceIsotope(const PlaceIsotope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&atom_, &from.atom_,
    static_cast<size_t>(reinterpret_cast<char*>(&isotope_) -
    reinterpret_cast<char*>(&atom_)) + sizeof(isotope_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.PlaceIsotope)
}

void PlaceIsotope::SharedCtor() {
  ::memset(&atom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isotope_) -
      reinterpret_cast<char*>(&atom_)) + sizeof(isotope_));
}

PlaceIsotope::~PlaceIsotope() {
  // @@protoc_insertion_point(destructor:ReactionProto.PlaceIsotope)
  SharedDtor();
}

void PlaceIsotope::SharedDtor() {
}

void PlaceIsotope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlaceIsotope::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaceIsotope& PlaceIsotope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_PlaceIsotope.base);
  return *internal_default_instance();
}


void PlaceIsotope::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.PlaceIsotope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&atom_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isotope_) -
        reinterpret_cast<char*>(&atom_)) + sizeof(isotope_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlaceIsotope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.PlaceIsotope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 atom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isotope = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_isotope();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isotope_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.PlaceIsotope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.PlaceIsotope)
  return false;
#undef DO_
}

void PlaceIsotope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.PlaceIsotope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->atom(), output);
  }

  // optional int32 isotope = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->isotope(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.PlaceIsotope)
}

::google::protobuf::uint8* PlaceIsotope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.PlaceIsotope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->atom(), target);
  }

  // optional int32 isotope = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->isotope(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.PlaceIsotope)
  return target;
}

size_t PlaceIsotope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.PlaceIsotope)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 atom = 1;
    if (has_atom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->atom());
    }

    // optional int32 isotope = 2;
    if (has_isotope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isotope());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaceIsotope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.PlaceIsotope)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaceIsotope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaceIsotope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.PlaceIsotope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.PlaceIsotope)
    MergeFrom(*source);
  }
}

void PlaceIsotope::MergeFrom(const PlaceIsotope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.PlaceIsotope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      atom_ = from.atom_;
    }
    if (cached_has_bits & 0x00000002u) {
      isotope_ = from.isotope_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlaceIsotope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.PlaceIsotope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaceIsotope::CopyFrom(const PlaceIsotope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.PlaceIsotope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceIsotope::IsInitialized() const {
  return true;
}

void PlaceIsotope::Swap(PlaceIsotope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaceIsotope::InternalSwap(PlaceIsotope* other) {
  using std::swap;
  swap(atom_, other->atom_);
  swap(isotope_, other->isotope_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlaceIsotope::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IncrementIsotope::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncrementIsotope::kAtomFieldNumber;
const int IncrementIsotope::kDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementIsotope::IncrementIsotope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_IncrementIsotope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.IncrementIsotope)
}
IncrementIsotope::IncrementIsotope(const IncrementIsotope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&atom_, &from.atom_,
    static_cast<size_t>(reinterpret_cast<char*>(&delta_) -
    reinterpret_cast<char*>(&atom_)) + sizeof(delta_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.IncrementIsotope)
}

void IncrementIsotope::SharedCtor() {
  ::memset(&atom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delta_) -
      reinterpret_cast<char*>(&atom_)) + sizeof(delta_));
}

IncrementIsotope::~IncrementIsotope() {
  // @@protoc_insertion_point(destructor:ReactionProto.IncrementIsotope)
  SharedDtor();
}

void IncrementIsotope::SharedDtor() {
}

void IncrementIsotope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IncrementIsotope::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementIsotope& IncrementIsotope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_IncrementIsotope.base);
  return *internal_default_instance();
}


void IncrementIsotope::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.IncrementIsotope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&atom_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delta_) -
        reinterpret_cast<char*>(&atom_)) + sizeof(delta_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IncrementIsotope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.IncrementIsotope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 atom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 delta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.IncrementIsotope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.IncrementIsotope)
  return false;
#undef DO_
}

void IncrementIsotope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.IncrementIsotope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->atom(), output);
  }

  // optional int32 delta = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.IncrementIsotope)
}

::google::protobuf::uint8* IncrementIsotope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.IncrementIsotope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 atom = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->atom(), target);
  }

  // optional int32 delta = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.IncrementIsotope)
  return target;
}

size_t IncrementIsotope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.IncrementIsotope)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 atom = 1;
    if (has_atom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->atom());
    }

    // optional int32 delta = 2;
    if (has_delta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncrementIsotope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.IncrementIsotope)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementIsotope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementIsotope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.IncrementIsotope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.IncrementIsotope)
    MergeFrom(*source);
  }
}

void IncrementIsotope::MergeFrom(const IncrementIsotope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.IncrementIsotope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      atom_ = from.atom_;
    }
    if (cached_has_bits & 0x00000002u) {
      delta_ = from.delta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IncrementIsotope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.IncrementIsotope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementIsotope::CopyFrom(const IncrementIsotope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.IncrementIsotope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementIsotope::IsInitialized() const {
  return true;
}

void IncrementIsotope::Swap(IncrementIsotope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementIsotope::InternalSwap(IncrementIsotope* other) {
  using std::swap;
  swap(atom_, other->atom_);
  swap(delta_, other->delta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IncrementIsotope::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BondLength::InitAsDefaultInstance() {
  ::ReactionProto::_BondLength_default_instance_.a1_ = 0u;
  ::ReactionProto::_BondLength_default_instance_.c1_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_BondLength_default_instance_.a2_ = 0u;
  ::ReactionProto::_BondLength_default_instance_.c2_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
}
void BondLength::set_allocated_c1(::ReactionProto::MatchedAtomInComponent* c1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_first_atom();
  if (c1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c1, submessage_arena);
    }
    set_has_c1();
    first_atom_.c1_ = c1;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.BondLength.c1)
}
void BondLength::set_allocated_c2(::ReactionProto::MatchedAtomInComponent* c2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_second_atom();
  if (c2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2, submessage_arena);
    }
    set_has_c2();
    second_atom_.c2_ = c2;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.BondLength.c2)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BondLength::kA1FieldNumber;
const int BondLength::kC1FieldNumber;
const int BondLength::kA2FieldNumber;
const int BondLength::kC2FieldNumber;
const int BondLength::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BondLength::BondLength()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_BondLength.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.BondLength)
}
BondLength::BondLength(const BondLength& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  distance_ = from.distance_;
  clear_has_first_atom();
  switch (from.first_atom_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case FIRST_ATOM_NOT_SET: {
      break;
    }
  }
  clear_has_second_atom();
  switch (from.second_atom_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case SECOND_ATOM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ReactionProto.BondLength)
}

void BondLength::SharedCtor() {
  distance_ = 0;
  clear_has_first_atom();
  clear_has_second_atom();
}

BondLength::~BondLength() {
  // @@protoc_insertion_point(destructor:ReactionProto.BondLength)
  SharedDtor();
}

void BondLength::SharedDtor() {
  if (has_first_atom()) {
    clear_first_atom();
  }
  if (has_second_atom()) {
    clear_second_atom();
  }
}

void BondLength::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BondLength::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BondLength& BondLength::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_BondLength.base);
  return *internal_default_instance();
}


void BondLength::clear_first_atom() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.BondLength)
  switch (first_atom_case()) {
    case kA1: {
      // No need to clear
      break;
    }
    case kC1: {
      delete first_atom_.c1_;
      break;
    }
    case FIRST_ATOM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FIRST_ATOM_NOT_SET;
}

void BondLength::clear_second_atom() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.BondLength)
  switch (second_atom_case()) {
    case kA2: {
      // No need to clear
      break;
    }
    case kC2: {
      delete second_atom_.c2_;
      break;
    }
    case SECOND_ATOM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = SECOND_ATOM_NOT_SET;
}


void BondLength::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.BondLength)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  distance_ = 0;
  clear_first_atom();
  clear_second_atom();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BondLength::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.BondLength)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_first_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_atom_.a1_)));
          set_has_a1();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 a2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_second_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &second_atom_.a2_)));
          set_has_a2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float distance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.BondLength)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.BondLength)
  return false;
#undef DO_
}

void BondLength::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.BondLength)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (first_atom_case()) {
    case kA1:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->a1(), output);
      break;
    case kC1:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_c1(), output);
      break;
    default: ;
  }
  switch (second_atom_case()) {
    case kA2:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->a2(), output);
      break;
    case kC2:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_c2(), output);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional float distance = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.BondLength)
}

::google::protobuf::uint8* BondLength::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.BondLength)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (first_atom_case()) {
    case kA1:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->a1(), target);
      break;
    case kC1:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_c1(), deterministic, target);
      break;
    default: ;
  }
  switch (second_atom_case()) {
    case kA2:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->a2(), target);
      break;
    case kC2:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_c2(), deterministic, target);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional float distance = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.BondLength)
  return target;
}

size_t BondLength::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.BondLength)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional float distance = 5;
  if (has_distance()) {
    total_size += 1 + 4;
  }

  switch (first_atom_case()) {
    // optional uint32 a1 = 1;
    case kA1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a1());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
    case kC1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *first_atom_.c1_);
      break;
    }
    case FIRST_ATOM_NOT_SET: {
      break;
    }
  }
  switch (second_atom_case()) {
    // optional uint32 a2 = 3;
    case kA2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a2());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
    case kC2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *second_atom_.c2_);
      break;
    }
    case SECOND_ATOM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BondLength::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.BondLength)
  GOOGLE_DCHECK_NE(&from, this);
  const BondLength* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BondLength>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.BondLength)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.BondLength)
    MergeFrom(*source);
  }
}

void BondLength::MergeFrom(const BondLength& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.BondLength)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_distance()) {
    set_distance(from.distance());
  }
  switch (from.first_atom_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case FIRST_ATOM_NOT_SET: {
      break;
    }
  }
  switch (from.second_atom_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case SECOND_ATOM_NOT_SET: {
      break;
    }
  }
}

void BondLength::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.BondLength)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BondLength::CopyFrom(const BondLength& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.BondLength)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BondLength::IsInitialized() const {
  return true;
}

void BondLength::Swap(BondLength* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BondLength::InternalSwap(BondLength* other) {
  using std::swap;
  swap(distance_, other->distance_);
  swap(first_atom_, other->first_atom_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(second_atom_, other->second_atom_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BondLength::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BondAngle::InitAsDefaultInstance() {
  ::ReactionProto::_BondAngle_default_instance_.a1_ = 0u;
  ::ReactionProto::_BondAngle_default_instance_.c1_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_BondAngle_default_instance_.a2_ = 0u;
  ::ReactionProto::_BondAngle_default_instance_.c2_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_BondAngle_default_instance_.a3_ = 0u;
  ::ReactionProto::_BondAngle_default_instance_.c3_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
}
void BondAngle::set_allocated_c1(::ReactionProto::MatchedAtomInComponent* c1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom1();
  if (c1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c1, submessage_arena);
    }
    set_has_c1();
    atom1_.c1_ = c1;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.BondAngle.c1)
}
void BondAngle::set_allocated_c2(::ReactionProto::MatchedAtomInComponent* c2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom2();
  if (c2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2, submessage_arena);
    }
    set_has_c2();
    atom2_.c2_ = c2;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.BondAngle.c2)
}
void BondAngle::set_allocated_c3(::ReactionProto::MatchedAtomInComponent* c3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom3();
  if (c3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c3, submessage_arena);
    }
    set_has_c3();
    atom3_.c3_ = c3;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.BondAngle.c3)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BondAngle::kA1FieldNumber;
const int BondAngle::kC1FieldNumber;
const int BondAngle::kA2FieldNumber;
const int BondAngle::kC2FieldNumber;
const int BondAngle::kA3FieldNumber;
const int BondAngle::kC3FieldNumber;
const int BondAngle::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BondAngle::BondAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_BondAngle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.BondAngle)
}
BondAngle::BondAngle(const BondAngle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  angle_ = from.angle_;
  clear_has_atom1();
  switch (from.atom1_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  clear_has_atom2();
  switch (from.atom2_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  clear_has_atom3();
  switch (from.atom3_case()) {
    case kA3: {
      set_a3(from.a3());
      break;
    }
    case kC3: {
      mutable_c3()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c3());
      break;
    }
    case ATOM3_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ReactionProto.BondAngle)
}

void BondAngle::SharedCtor() {
  angle_ = 0;
  clear_has_atom1();
  clear_has_atom2();
  clear_has_atom3();
}

BondAngle::~BondAngle() {
  // @@protoc_insertion_point(destructor:ReactionProto.BondAngle)
  SharedDtor();
}

void BondAngle::SharedDtor() {
  if (has_atom1()) {
    clear_atom1();
  }
  if (has_atom2()) {
    clear_atom2();
  }
  if (has_atom3()) {
    clear_atom3();
  }
}

void BondAngle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BondAngle::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BondAngle& BondAngle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_BondAngle.base);
  return *internal_default_instance();
}


void BondAngle::clear_atom1() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.BondAngle)
  switch (atom1_case()) {
    case kA1: {
      // No need to clear
      break;
    }
    case kC1: {
      delete atom1_.c1_;
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATOM1_NOT_SET;
}

void BondAngle::clear_atom2() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.BondAngle)
  switch (atom2_case()) {
    case kA2: {
      // No need to clear
      break;
    }
    case kC2: {
      delete atom2_.c2_;
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = ATOM2_NOT_SET;
}

void BondAngle::clear_atom3() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.BondAngle)
  switch (atom3_case()) {
    case kA3: {
      // No need to clear
      break;
    }
    case kC3: {
      delete atom3_.c3_;
      break;
    }
    case ATOM3_NOT_SET: {
      break;
    }
  }
  _oneof_case_[2] = ATOM3_NOT_SET;
}


void BondAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.BondAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  angle_ = 0;
  clear_atom1();
  clear_atom2();
  clear_atom3();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BondAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.BondAngle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_atom1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom1_.a1_)));
          set_has_a1();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 a2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_atom2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom2_.a2_)));
          set_has_a2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 a3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_atom3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom3_.a3_)));
          set_has_a3();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float angle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.BondAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.BondAngle)
  return false;
#undef DO_
}

void BondAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.BondAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (atom1_case()) {
    case kA1:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->a1(), output);
      break;
    case kC1:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_c1(), output);
      break;
    default: ;
  }
  switch (atom2_case()) {
    case kA2:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->a2(), output);
      break;
    case kC2:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_c2(), output);
      break;
    default: ;
  }
  switch (atom3_case()) {
    case kA3:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->a3(), output);
      break;
    case kC3:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_c3(), output);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional float angle = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.BondAngle)
}

::google::protobuf::uint8* BondAngle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.BondAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (atom1_case()) {
    case kA1:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->a1(), target);
      break;
    case kC1:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_c1(), deterministic, target);
      break;
    default: ;
  }
  switch (atom2_case()) {
    case kA2:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->a2(), target);
      break;
    case kC2:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_c2(), deterministic, target);
      break;
    default: ;
  }
  switch (atom3_case()) {
    case kA3:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->a3(), target);
      break;
    case kC3:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_c3(), deterministic, target);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional float angle = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.BondAngle)
  return target;
}

size_t BondAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.BondAngle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional float angle = 7;
  if (has_angle()) {
    total_size += 1 + 4;
  }

  switch (atom1_case()) {
    // optional uint32 a1 = 1;
    case kA1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a1());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
    case kC1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom1_.c1_);
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  switch (atom2_case()) {
    // optional uint32 a2 = 3;
    case kA2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a2());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
    case kC2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom2_.c2_);
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  switch (atom3_case()) {
    // optional uint32 a3 = 5;
    case kA3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a3());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c3 = 6;
    case kC3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom3_.c3_);
      break;
    }
    case ATOM3_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BondAngle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.BondAngle)
  GOOGLE_DCHECK_NE(&from, this);
  const BondAngle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BondAngle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.BondAngle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.BondAngle)
    MergeFrom(*source);
  }
}

void BondAngle::MergeFrom(const BondAngle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.BondAngle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_angle()) {
    set_angle(from.angle());
  }
  switch (from.atom1_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  switch (from.atom2_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  switch (from.atom3_case()) {
    case kA3: {
      set_a3(from.a3());
      break;
    }
    case kC3: {
      mutable_c3()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c3());
      break;
    }
    case ATOM3_NOT_SET: {
      break;
    }
  }
}

void BondAngle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.BondAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BondAngle::CopyFrom(const BondAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.BondAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BondAngle::IsInitialized() const {
  return true;
}

void BondAngle::Swap(BondAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BondAngle::InternalSwap(BondAngle* other) {
  using std::swap;
  swap(angle_, other->angle_);
  swap(atom1_, other->atom1_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(atom2_, other->atom2_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(atom3_, other->atom3_);
  swap(_oneof_case_[2], other->_oneof_case_[2]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BondAngle::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DihedralAngle::InitAsDefaultInstance() {
  ::ReactionProto::_DihedralAngle_default_instance_.a1_ = 0u;
  ::ReactionProto::_DihedralAngle_default_instance_.c1_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_DihedralAngle_default_instance_.a2_ = 0u;
  ::ReactionProto::_DihedralAngle_default_instance_.c2_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_DihedralAngle_default_instance_.a3_ = 0u;
  ::ReactionProto::_DihedralAngle_default_instance_.c3_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
  ::ReactionProto::_DihedralAngle_default_instance_.a4_ = 0u;
  ::ReactionProto::_DihedralAngle_default_instance_.c4_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
}
void DihedralAngle::set_allocated_c1(::ReactionProto::MatchedAtomInComponent* c1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom1();
  if (c1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c1, submessage_arena);
    }
    set_has_c1();
    atom1_.c1_ = c1;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.DihedralAngle.c1)
}
void DihedralAngle::set_allocated_c2(::ReactionProto::MatchedAtomInComponent* c2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom2();
  if (c2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2, submessage_arena);
    }
    set_has_c2();
    atom2_.c2_ = c2;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.DihedralAngle.c2)
}
void DihedralAngle::set_allocated_c3(::ReactionProto::MatchedAtomInComponent* c3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom3();
  if (c3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c3, submessage_arena);
    }
    set_has_c3();
    atom3_.c3_ = c3;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.DihedralAngle.c3)
}
void DihedralAngle::set_allocated_c4(::ReactionProto::MatchedAtomInComponent* c4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_atom4();
  if (c4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c4, submessage_arena);
    }
    set_has_c4();
    atom4_.c4_ = c4;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.DihedralAngle.c4)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DihedralAngle::kA1FieldNumber;
const int DihedralAngle::kC1FieldNumber;
const int DihedralAngle::kA2FieldNumber;
const int DihedralAngle::kC2FieldNumber;
const int DihedralAngle::kA3FieldNumber;
const int DihedralAngle::kC3FieldNumber;
const int DihedralAngle::kA4FieldNumber;
const int DihedralAngle::kC4FieldNumber;
const int DihedralAngle::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DihedralAngle::DihedralAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_DihedralAngle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.DihedralAngle)
}
DihedralAngle::DihedralAngle(const DihedralAngle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  angle_ = from.angle_;
  clear_has_atom1();
  switch (from.atom1_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  clear_has_atom2();
  switch (from.atom2_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  clear_has_atom3();
  switch (from.atom3_case()) {
    case kA3: {
      set_a3(from.a3());
      break;
    }
    case kC3: {
      mutable_c3()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c3());
      break;
    }
    case ATOM3_NOT_SET: {
      break;
    }
  }
  clear_has_atom4();
  switch (from.atom4_case()) {
    case kA4: {
      set_a4(from.a4());
      break;
    }
    case kC4: {
      mutable_c4()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c4());
      break;
    }
    case ATOM4_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ReactionProto.DihedralAngle)
}

void DihedralAngle::SharedCtor() {
  angle_ = 0;
  clear_has_atom1();
  clear_has_atom2();
  clear_has_atom3();
  clear_has_atom4();
}

DihedralAngle::~DihedralAngle() {
  // @@protoc_insertion_point(destructor:ReactionProto.DihedralAngle)
  SharedDtor();
}

void DihedralAngle::SharedDtor() {
  if (has_atom1()) {
    clear_atom1();
  }
  if (has_atom2()) {
    clear_atom2();
  }
  if (has_atom3()) {
    clear_atom3();
  }
  if (has_atom4()) {
    clear_atom4();
  }
}

void DihedralAngle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DihedralAngle::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DihedralAngle& DihedralAngle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_DihedralAngle.base);
  return *internal_default_instance();
}


void DihedralAngle::clear_atom1() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.DihedralAngle)
  switch (atom1_case()) {
    case kA1: {
      // No need to clear
      break;
    }
    case kC1: {
      delete atom1_.c1_;
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATOM1_NOT_SET;
}

void DihedralAngle::clear_atom2() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.DihedralAngle)
  switch (atom2_case()) {
    case kA2: {
      // No need to clear
      break;
    }
    case kC2: {
      delete atom2_.c2_;
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = ATOM2_NOT_SET;
}

void DihedralAngle::clear_atom3() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.DihedralAngle)
  switch (atom3_case()) {
    case kA3: {
      // No need to clear
      break;
    }
    case kC3: {
      delete atom3_.c3_;
      break;
    }
    case ATOM3_NOT_SET: {
      break;
    }
  }
  _oneof_case_[2] = ATOM3_NOT_SET;
}

void DihedralAngle::clear_atom4() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.DihedralAngle)
  switch (atom4_case()) {
    case kA4: {
      // No need to clear
      break;
    }
    case kC4: {
      delete atom4_.c4_;
      break;
    }
    case ATOM4_NOT_SET: {
      break;
    }
  }
  _oneof_case_[3] = ATOM4_NOT_SET;
}


void DihedralAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.DihedralAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  angle_ = 0;
  clear_atom1();
  clear_atom2();
  clear_atom3();
  clear_atom4();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DihedralAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.DihedralAngle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_atom1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom1_.a1_)));
          set_has_a1();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 a2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_atom2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom2_.a2_)));
          set_has_a2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 a3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_atom3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom3_.a3_)));
          set_has_a3();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 a4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_atom4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atom4_.a4_)));
          set_has_a4();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent c4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float angle = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.DihedralAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.DihedralAngle)
  return false;
#undef DO_
}

void DihedralAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.DihedralAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (atom1_case()) {
    case kA1:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->a1(), output);
      break;
    case kC1:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_c1(), output);
      break;
    default: ;
  }
  switch (atom2_case()) {
    case kA2:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->a2(), output);
      break;
    case kC2:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_c2(), output);
      break;
    default: ;
  }
  switch (atom3_case()) {
    case kA3:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->a3(), output);
      break;
    case kC3:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_c3(), output);
      break;
    default: ;
  }
  switch (atom4_case()) {
    case kA4:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->a4(), output);
      break;
    case kC4:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_c4(), output);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional float angle = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.DihedralAngle)
}

::google::protobuf::uint8* DihedralAngle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.DihedralAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (atom1_case()) {
    case kA1:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->a1(), target);
      break;
    case kC1:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_c1(), deterministic, target);
      break;
    default: ;
  }
  switch (atom2_case()) {
    case kA2:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->a2(), target);
      break;
    case kC2:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_c2(), deterministic, target);
      break;
    default: ;
  }
  switch (atom3_case()) {
    case kA3:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->a3(), target);
      break;
    case kC3:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_c3(), deterministic, target);
      break;
    default: ;
  }
  switch (atom4_case()) {
    case kA4:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->a4(), target);
      break;
    case kC4:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          8, this->_internal_c4(), deterministic, target);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional float angle = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.DihedralAngle)
  return target;
}

size_t DihedralAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.DihedralAngle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional float angle = 9;
  if (has_angle()) {
    total_size += 1 + 4;
  }

  switch (atom1_case()) {
    // optional uint32 a1 = 1;
    case kA1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a1());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c1 = 2;
    case kC1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom1_.c1_);
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  switch (atom2_case()) {
    // optional uint32 a2 = 3;
    case kA2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a2());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c2 = 4;
    case kC2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom2_.c2_);
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  switch (atom3_case()) {
    // optional uint32 a3 = 5;
    case kA3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a3());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c3 = 6;
    case kC3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom3_.c3_);
      break;
    }
    case ATOM3_NOT_SET: {
      break;
    }
  }
  switch (atom4_case()) {
    // optional uint32 a4 = 7;
    case kA4: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a4());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent c4 = 8;
    case kC4: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *atom4_.c4_);
      break;
    }
    case ATOM4_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DihedralAngle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.DihedralAngle)
  GOOGLE_DCHECK_NE(&from, this);
  const DihedralAngle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DihedralAngle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.DihedralAngle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.DihedralAngle)
    MergeFrom(*source);
  }
}

void DihedralAngle::MergeFrom(const DihedralAngle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.DihedralAngle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_angle()) {
    set_angle(from.angle());
  }
  switch (from.atom1_case()) {
    case kA1: {
      set_a1(from.a1());
      break;
    }
    case kC1: {
      mutable_c1()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c1());
      break;
    }
    case ATOM1_NOT_SET: {
      break;
    }
  }
  switch (from.atom2_case()) {
    case kA2: {
      set_a2(from.a2());
      break;
    }
    case kC2: {
      mutable_c2()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c2());
      break;
    }
    case ATOM2_NOT_SET: {
      break;
    }
  }
  switch (from.atom3_case()) {
    case kA3: {
      set_a3(from.a3());
      break;
    }
    case kC3: {
      mutable_c3()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c3());
      break;
    }
    case ATOM3_NOT_SET: {
      break;
    }
  }
  switch (from.atom4_case()) {
    case kA4: {
      set_a4(from.a4());
      break;
    }
    case kC4: {
      mutable_c4()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.c4());
      break;
    }
    case ATOM4_NOT_SET: {
      break;
    }
  }
}

void DihedralAngle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.DihedralAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DihedralAngle::CopyFrom(const DihedralAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.DihedralAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DihedralAngle::IsInitialized() const {
  return true;
}

void DihedralAngle::Swap(DihedralAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DihedralAngle::InternalSwap(DihedralAngle* other) {
  using std::swap;
  swap(angle_, other->angle_);
  swap(atom1_, other->atom1_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(atom2_, other->atom2_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(atom3_, other->atom3_);
  swap(_oneof_case_[2], other->_oneof_case_[2]);
  swap(atom4_, other->atom4_);
  swap(_oneof_case_[3], other->_oneof_case_[3]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DihedralAngle::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RotateFragment::InitAsDefaultInstance() {
  ::ReactionProto::_RotateFragment_default_instance_.atom_ = 0u;
  ::ReactionProto::_RotateFragment_default_instance_.cspec_ = const_cast< ::ReactionProto::MatchedAtomInComponent*>(
      ::ReactionProto::MatchedAtomInComponent::internal_default_instance());
}
void RotateFragment::set_allocated_cspec(::ReactionProto::MatchedAtomInComponent* cspec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_the_atom();
  if (cspec) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cspec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cspec, submessage_arena);
    }
    set_has_cspec();
    the_atom_.cspec_ = cspec;
  }
  // @@protoc_insertion_point(field_set_allocated:ReactionProto.RotateFragment.cspec)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RotateFragment::kAtomFieldNumber;
const int RotateFragment::kCspecFieldNumber;
const int RotateFragment::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RotateFragment::RotateFragment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_RotateFragment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.RotateFragment)
}
RotateFragment::RotateFragment(const RotateFragment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  angle_ = from.angle_;
  clear_has_the_atom();
  switch (from.the_atom_case()) {
    case kAtom: {
      set_atom(from.atom());
      break;
    }
    case kCspec: {
      mutable_cspec()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.cspec());
      break;
    }
    case THE_ATOM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ReactionProto.RotateFragment)
}

void RotateFragment::SharedCtor() {
  angle_ = 0;
  clear_has_the_atom();
}

RotateFragment::~RotateFragment() {
  // @@protoc_insertion_point(destructor:ReactionProto.RotateFragment)
  SharedDtor();
}

void RotateFragment::SharedDtor() {
  if (has_the_atom()) {
    clear_the_atom();
  }
}

void RotateFragment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RotateFragment::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RotateFragment& RotateFragment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_RotateFragment.base);
  return *internal_default_instance();
}


void RotateFragment::clear_the_atom() {
// @@protoc_insertion_point(one_of_clear_start:ReactionProto.RotateFragment)
  switch (the_atom_case()) {
    case kAtom: {
      // No need to clear
      break;
    }
    case kCspec: {
      delete the_atom_.cspec_;
      break;
    }
    case THE_ATOM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = THE_ATOM_NOT_SET;
}


void RotateFragment::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.RotateFragment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  angle_ = 0;
  clear_the_atom();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RotateFragment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.RotateFragment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 atom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_the_atom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &the_atom_.atom_)));
          set_has_atom();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.MatchedAtomInComponent cspec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cspec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.RotateFragment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.RotateFragment)
  return false;
#undef DO_
}

void RotateFragment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.RotateFragment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (the_atom_case()) {
    case kAtom:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->atom(), output);
      break;
    case kCspec:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_cspec(), output);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional float angle = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.RotateFragment)
}

::google::protobuf::uint8* RotateFragment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.RotateFragment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (the_atom_case()) {
    case kAtom:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->atom(), target);
      break;
    case kCspec:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_cspec(), deterministic, target);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional float angle = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.RotateFragment)
  return target;
}

size_t RotateFragment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.RotateFragment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional float angle = 3;
  if (has_angle()) {
    total_size += 1 + 4;
  }

  switch (the_atom_case()) {
    // optional uint32 atom = 1;
    case kAtom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->atom());
      break;
    }
    // optional .ReactionProto.MatchedAtomInComponent cspec = 2;
    case kCspec: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *the_atom_.cspec_);
      break;
    }
    case THE_ATOM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RotateFragment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.RotateFragment)
  GOOGLE_DCHECK_NE(&from, this);
  const RotateFragment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RotateFragment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.RotateFragment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.RotateFragment)
    MergeFrom(*source);
  }
}

void RotateFragment::MergeFrom(const RotateFragment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.RotateFragment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_angle()) {
    set_angle(from.angle());
  }
  switch (from.the_atom_case()) {
    case kAtom: {
      set_atom(from.atom());
      break;
    }
    case kCspec: {
      mutable_cspec()->::ReactionProto::MatchedAtomInComponent::MergeFrom(from.cspec());
      break;
    }
    case THE_ATOM_NOT_SET: {
      break;
    }
  }
}

void RotateFragment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.RotateFragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RotateFragment::CopyFrom(const RotateFragment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.RotateFragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RotateFragment::IsInitialized() const {
  return true;
}

void RotateFragment::Swap(RotateFragment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RotateFragment::InternalSwap(RotateFragment* other) {
  using std::swap;
  swap(angle_, other->angle_);
  swap(the_atom_, other->the_atom_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RotateFragment::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThreeDReplace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThreeDReplace::kA1FieldNumber;
const int ThreeDReplace::kA2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThreeDReplace::ThreeDReplace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_ThreeDReplace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.ThreeDReplace)
}
ThreeDReplace::ThreeDReplace(const ThreeDReplace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      a1_(from.a1_),
      a2_(from.a2_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ReactionProto.ThreeDReplace)
}

void ThreeDReplace::SharedCtor() {
}

ThreeDReplace::~ThreeDReplace() {
  // @@protoc_insertion_point(destructor:ReactionProto.ThreeDReplace)
  SharedDtor();
}

void ThreeDReplace::SharedDtor() {
}

void ThreeDReplace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ThreeDReplace::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThreeDReplace& ThreeDReplace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_ThreeDReplace.base);
  return *internal_default_instance();
}


void ThreeDReplace::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.ThreeDReplace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  a1_.Clear();
  a2_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ThreeDReplace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.ThreeDReplace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ReactionProto.MatchedAtomInComponent a1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_a1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.MatchedAtomInComponent a2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_a2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.ThreeDReplace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.ThreeDReplace)
  return false;
#undef DO_
}

void ThreeDReplace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.ThreeDReplace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ReactionProto.MatchedAtomInComponent a1 = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->a1_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->a1(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.MatchedAtomInComponent a2 = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->a2_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->a2(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.ThreeDReplace)
}

::google::protobuf::uint8* ThreeDReplace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.ThreeDReplace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ReactionProto.MatchedAtomInComponent a1 = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->a1_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->a1(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.MatchedAtomInComponent a2 = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->a2_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->a2(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.ThreeDReplace)
  return target;
}

size_t ThreeDReplace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.ThreeDReplace)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ReactionProto.MatchedAtomInComponent a1 = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->a1_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->a1(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.MatchedAtomInComponent a2 = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->a2_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->a2(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ThreeDReplace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.ThreeDReplace)
  GOOGLE_DCHECK_NE(&from, this);
  const ThreeDReplace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThreeDReplace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.ThreeDReplace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.ThreeDReplace)
    MergeFrom(*source);
  }
}

void ThreeDReplace::MergeFrom(const ThreeDReplace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.ThreeDReplace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  a1_.MergeFrom(from.a1_);
  a2_.MergeFrom(from.a2_);
}

void ThreeDReplace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.ThreeDReplace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThreeDReplace::CopyFrom(const ThreeDReplace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.ThreeDReplace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThreeDReplace::IsInitialized() const {
  return true;
}

void ThreeDReplace::Swap(ThreeDReplace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThreeDReplace::InternalSwap(ThreeDReplace* other) {
  using std::swap;
  CastToBase(&a1_)->InternalSwap(CastToBase(&other->a1_));
  CastToBase(&a2_)->InternalSwap(CastToBase(&other->a2_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ThreeDReplace::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NoReaction::InitAsDefaultInstance() {
  ::ReactionProto::_NoReaction_default_instance_._instance.get_mutable()->scaffold_no_reaction_ = const_cast< ::SubstructureSearch::SubstructureQuery*>(
      ::SubstructureSearch::SubstructureQuery::internal_default_instance());
  ::ReactionProto::_NoReaction_default_instance_._instance.get_mutable()->sidechain_no_reaction_ = const_cast< ::SubstructureSearch::SubstructureQuery*>(
      ::SubstructureSearch::SubstructureQuery::internal_default_instance());
}
void NoReaction::clear_scaffold_no_reaction() {
  if (scaffold_no_reaction_ != NULL) scaffold_no_reaction_->Clear();
  clear_has_scaffold_no_reaction();
}
void NoReaction::clear_sidechain_no_reaction() {
  if (sidechain_no_reaction_ != NULL) sidechain_no_reaction_->Clear();
  clear_has_sidechain_no_reaction();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NoReaction::kCommentFieldNumber;
const int NoReaction::kScaffoldNoReactionFieldNumber;
const int NoReaction::kSidechainNoReactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NoReaction::NoReaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_NoReaction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.NoReaction)
}
NoReaction::NoReaction(const NoReaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_scaffold_no_reaction()) {
    scaffold_no_reaction_ = new ::SubstructureSearch::SubstructureQuery(*from.scaffold_no_reaction_);
  } else {
    scaffold_no_reaction_ = NULL;
  }
  if (from.has_sidechain_no_reaction()) {
    sidechain_no_reaction_ = new ::SubstructureSearch::SubstructureQuery(*from.sidechain_no_reaction_);
  } else {
    sidechain_no_reaction_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ReactionProto.NoReaction)
}

void NoReaction::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scaffold_no_reaction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sidechain_no_reaction_) -
      reinterpret_cast<char*>(&scaffold_no_reaction_)) + sizeof(sidechain_no_reaction_));
}

NoReaction::~NoReaction() {
  // @@protoc_insertion_point(destructor:ReactionProto.NoReaction)
  SharedDtor();
}

void NoReaction::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scaffold_no_reaction_;
  if (this != internal_default_instance()) delete sidechain_no_reaction_;
}

void NoReaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NoReaction::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NoReaction& NoReaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_NoReaction.base);
  return *internal_default_instance();
}


void NoReaction::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.NoReaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(scaffold_no_reaction_ != NULL);
      scaffold_no_reaction_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(sidechain_no_reaction_ != NULL);
      sidechain_no_reaction_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NoReaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.NoReaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string comment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.NoReaction.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SubstructureSearch.SubstructureQuery scaffold_no_reaction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scaffold_no_reaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SubstructureSearch.SubstructureQuery sidechain_no_reaction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sidechain_no_reaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.NoReaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.NoReaction)
  return false;
#undef DO_
}

void NoReaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.NoReaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comment = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.NoReaction.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->comment(), output);
  }

  // optional .SubstructureSearch.SubstructureQuery scaffold_no_reaction = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_scaffold_no_reaction(), output);
  }

  // optional .SubstructureSearch.SubstructureQuery sidechain_no_reaction = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_sidechain_no_reaction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.NoReaction)
}

::google::protobuf::uint8* NoReaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.NoReaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comment = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.NoReaction.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->comment(), target);
  }

  // optional .SubstructureSearch.SubstructureQuery scaffold_no_reaction = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_scaffold_no_reaction(), deterministic, target);
  }

  // optional .SubstructureSearch.SubstructureQuery sidechain_no_reaction = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_sidechain_no_reaction(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.NoReaction)
  return target;
}

size_t NoReaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.NoReaction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string comment = 1;
    if (has_comment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }

    // optional .SubstructureSearch.SubstructureQuery scaffold_no_reaction = 2;
    if (has_scaffold_no_reaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scaffold_no_reaction_);
    }

    // optional .SubstructureSearch.SubstructureQuery sidechain_no_reaction = 3;
    if (has_sidechain_no_reaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sidechain_no_reaction_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NoReaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.NoReaction)
  GOOGLE_DCHECK_NE(&from, this);
  const NoReaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NoReaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.NoReaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.NoReaction)
    MergeFrom(*source);
  }
}

void NoReaction::MergeFrom(const NoReaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.NoReaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_scaffold_no_reaction()->::SubstructureSearch::SubstructureQuery::MergeFrom(from.scaffold_no_reaction());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_sidechain_no_reaction()->::SubstructureSearch::SubstructureQuery::MergeFrom(from.sidechain_no_reaction());
    }
  }
}

void NoReaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.NoReaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NoReaction::CopyFrom(const NoReaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.NoReaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoReaction::IsInitialized() const {
  return true;
}

void NoReaction::Swap(NoReaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NoReaction::InternalSwap(NoReaction* other) {
  using std::swap;
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scaffold_no_reaction_, other->scaffold_no_reaction_);
  swap(sidechain_no_reaction_, other->sidechain_no_reaction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NoReaction::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReactionSite::InitAsDefaultInstance() {
  ::ReactionProto::_ReactionSite_default_instance_._instance.get_mutable()->query_ = const_cast< ::SubstructureSearch::SubstructureQuery*>(
      ::SubstructureSearch::SubstructureQuery::internal_default_instance());
  ::ReactionProto::_ReactionSite_default_instance_._instance.get_mutable()->toggle_kekule_form_ = const_cast< ::ToggleKekuleForm::ToggleKekuleForm*>(
      ::ToggleKekuleForm::ToggleKekuleForm::internal_default_instance());
}
void ReactionSite::clear_query() {
  if (query_ != NULL) query_->Clear();
  clear_has_query();
}
void ReactionSite::clear_inactive() {
  inactive_.Clear();
}
void ReactionSite::clear_toggle_kekule_form() {
  if (toggle_kekule_form_ != NULL) toggle_kekule_form_->Clear();
  clear_has_toggle_kekule_form();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReactionSite::kQueryFieldNumber;
const int ReactionSite::kCommentFieldNumber;
const int ReactionSite::kMakeBondFieldNumber;
const int ReactionSite::kBreakBondFieldNumber;
const int ReactionSite::kRemoveAtomFieldNumber;
const int ReactionSite::kRemoveFragmentFieldNumber;
const int ReactionSite::kKeepFragmentFieldNumber;
const int ReactionSite::kChangeElementFieldNumber;
const int ReactionSite::kFormalChargeFieldNumber;
const int ReactionSite::kChangeFormalChargeFieldNumber;
const int ReactionSite::kIsotopeFieldNumber;
const int ReactionSite::kChangeIsotopeFieldNumber;
const int ReactionSite::kInvertIsotopeFieldNumber;
const int ReactionSite::kBondLengthFieldNumber;
const int ReactionSite::kBondAngleFieldNumber;
const int ReactionSite::kDihedralAngleFieldNumber;
const int ReactionSite::kReaction3DReplaceFieldNumber;
const int ReactionSite::kWedgeBondsFieldNumber;
const int ReactionSite::kReplaceAtomFieldNumber;
const int ReactionSite::kUnfixImplicitHydrogensFieldNumber;
const int ReactionSite::kInactiveFieldNumber;
const int ReactionSite::kInvertChiralityFieldNumber;
const int ReactionSite::kRemoveChiralityFieldNumber;
const int ReactionSite::kToggleKekuleFormFieldNumber;
const int ReactionSite::kIgnoreMultipleMatchesInvolvingAtomsNotChangingFieldNumber;
const int ReactionSite::kIgnoreMultipleMatchesInvolvingChangingAtomsFieldNumber;
const int ReactionSite::kNoopReactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReactionSite::ReactionSite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_ReactionSite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.ReactionSite)
}
ReactionSite::ReactionSite(const ReactionSite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      make_bond_(from.make_bond_),
      break_bond_(from.break_bond_),
      remove_atom_(from.remove_atom_),
      remove_fragment_(from.remove_fragment_),
      keep_fragment_(from.keep_fragment_),
      change_element_(from.change_element_),
      formal_charge_(from.formal_charge_),
      change_formal_charge_(from.change_formal_charge_),
      isotope_(from.isotope_),
      change_isotope_(from.change_isotope_),
      invert_isotope_(from.invert_isotope_),
      bond_length_(from.bond_length_),
      bond_angle_(from.bond_angle_),
      dihedral_angle_(from.dihedral_angle_),
      reaction_3d_replace_(from.reaction_3d_replace_),
      wedge_bonds_(from.wedge_bonds_),
      replace_atom_(from.replace_atom_),
      unfix_implicit_hydrogens_(from.unfix_implicit_hydrogens_),
      inactive_(from.inactive_),
      invert_chirality_(from.invert_chirality_),
      remove_chirality_(from.remove_chirality_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_query()) {
    query_ = new ::SubstructureSearch::SubstructureQuery(*from.query_);
  } else {
    query_ = NULL;
  }
  if (from.has_toggle_kekule_form()) {
    toggle_kekule_form_ = new ::ToggleKekuleForm::ToggleKekuleForm(*from.toggle_kekule_form_);
  } else {
    toggle_kekule_form_ = NULL;
  }
  ::memcpy(&ignore_multiple_matches_involving_atoms_not_changing_, &from.ignore_multiple_matches_involving_atoms_not_changing_,
    static_cast<size_t>(reinterpret_cast<char*>(&noop_reaction_) -
    reinterpret_cast<char*>(&ignore_multiple_matches_involving_atoms_not_changing_)) + sizeof(noop_reaction_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.ReactionSite)
}

void ReactionSite::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noop_reaction_) -
      reinterpret_cast<char*>(&query_)) + sizeof(noop_reaction_));
}

ReactionSite::~ReactionSite() {
  // @@protoc_insertion_point(destructor:ReactionProto.ReactionSite)
  SharedDtor();
}

void ReactionSite::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_;
  if (this != internal_default_instance()) delete toggle_kekule_form_;
}

void ReactionSite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReactionSite::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReactionSite& ReactionSite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_ReactionSite.base);
  return *internal_default_instance();
}


void ReactionSite::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.ReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  make_bond_.Clear();
  break_bond_.Clear();
  remove_atom_.Clear();
  remove_fragment_.Clear();
  keep_fragment_.Clear();
  change_element_.Clear();
  formal_charge_.Clear();
  change_formal_charge_.Clear();
  isotope_.Clear();
  change_isotope_.Clear();
  invert_isotope_.Clear();
  bond_length_.Clear();
  bond_angle_.Clear();
  dihedral_angle_.Clear();
  reaction_3d_replace_.Clear();
  wedge_bonds_.Clear();
  replace_atom_.Clear();
  unfix_implicit_hydrogens_.Clear();
  inactive_.Clear();
  invert_chirality_.Clear();
  remove_chirality_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(query_ != NULL);
      query_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(toggle_kekule_form_ != NULL);
      toggle_kekule_form_->Clear();
    }
  }
  ::memset(&ignore_multiple_matches_involving_atoms_not_changing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noop_reaction_) -
      reinterpret_cast<char*>(&ignore_multiple_matches_involving_atoms_not_changing_)) + sizeof(noop_reaction_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReactionSite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.ReactionSite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SubstructureSearch.SubstructureQuery query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string comment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.ReactionSite.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondToBeMade make_bond = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_make_bond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PairOfAtoms break_bond = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_break_bond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_atom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_remove_atom())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_atom())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_fragment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_remove_fragment())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_fragment())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 keep_fragment = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56u, input, this->mutable_keep_fragment())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_keep_fragment())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ChangeElement change_element = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.FormalCharge formal_charge = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_formal_charge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_formal_charge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PlaceIsotope isotope = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_invert_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondLength bond_length = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bond_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondAngle bond_angle = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bond_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dihedral_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reaction_3d_replace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_wedge_bonds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replace_atom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 unfix_implicit_hydrogens = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 160u, input, this->mutable_unfix_implicit_hydrogens())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unfix_implicit_hydrogens())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inactive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 invert_chirality = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 176u, input, this->mutable_invert_chirality())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_invert_chirality())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_chirality = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 184u, input, this->mutable_remove_chirality())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_chirality())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_toggle_kekule_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_ignore_multiple_matches_involving_atoms_not_changing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_multiple_matches_involving_atoms_not_changing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_ignore_multiple_matches_involving_changing_atoms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_multiple_matches_involving_changing_atoms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool noop_reaction = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_noop_reaction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noop_reaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.ReactionSite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.ReactionSite)
  return false;
#undef DO_
}

void ReactionSite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.ReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .SubstructureSearch.SubstructureQuery query = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_query(), output);
  }

  // optional string comment = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.ReactionSite.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->comment(), output);
  }

  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->make_bond_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->make_bond(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->break_bond_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->break_bond(static_cast<int>(i)),
      output);
  }

  // repeated int32 remove_atom = 5;
  for (int i = 0, n = this->remove_atom_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->remove_atom(i), output);
  }

  // repeated int32 remove_fragment = 6;
  for (int i = 0, n = this->remove_fragment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->remove_fragment(i), output);
  }

  // repeated int32 keep_fragment = 7;
  for (int i = 0, n = this->keep_fragment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->keep_fragment(i), output);
  }

  // repeated .ReactionProto.ChangeElement change_element = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->change_element(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->formal_charge_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->formal_charge(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_formal_charge_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->change_formal_charge(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->change_isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invert_isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->invert_isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_length_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->bond_length(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_angle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->bond_angle(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dihedral_angle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->dihedral_angle(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_3d_replace_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->reaction_3d_replace(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wedge_bonds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->wedge_bonds(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_atom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->replace_atom(static_cast<int>(i)),
      output);
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  for (int i = 0, n = this->unfix_implicit_hydrogens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      20, this->unfix_implicit_hydrogens(i), output);
  }

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inactive_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->inactive(static_cast<int>(i)),
      output);
  }

  // repeated int32 invert_chirality = 22;
  for (int i = 0, n = this->invert_chirality_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      22, this->invert_chirality(i), output);
  }

  // repeated int32 remove_chirality = 23;
  for (int i = 0, n = this->remove_chirality_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      23, this->remove_chirality(i), output);
  }

  // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_toggle_kekule_form(), output);
  }

  // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->ignore_multiple_matches_involving_atoms_not_changing(), output);
  }

  // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->ignore_multiple_matches_involving_changing_atoms(), output);
  }

  // optional bool noop_reaction = 28;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->noop_reaction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.ReactionSite)
}

::google::protobuf::uint8* ReactionSite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.ReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .SubstructureSearch.SubstructureQuery query = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_query(), deterministic, target);
  }

  // optional string comment = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.ReactionSite.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->comment(), target);
  }

  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->make_bond_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->make_bond(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->break_bond_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->break_bond(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 remove_atom = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->remove_atom_, target);

  // repeated int32 remove_fragment = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->remove_fragment_, target);

  // repeated int32 keep_fragment = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(7, this->keep_fragment_, target);

  // repeated .ReactionProto.ChangeElement change_element = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->change_element(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->formal_charge_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->formal_charge(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_formal_charge_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->change_formal_charge(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->change_isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invert_isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->invert_isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_length_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->bond_length(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_angle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->bond_angle(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dihedral_angle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->dihedral_angle(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_3d_replace_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->reaction_3d_replace(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wedge_bonds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->wedge_bonds(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_atom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->replace_atom(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(20, this->unfix_implicit_hydrogens_, target);

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inactive_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->inactive(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 invert_chirality = 22;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(22, this->invert_chirality_, target);

  // repeated int32 remove_chirality = 23;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(23, this->remove_chirality_, target);

  // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_toggle_kekule_form(), deterministic, target);
  }

  // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->ignore_multiple_matches_involving_atoms_not_changing(), target);
  }

  // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->ignore_multiple_matches_involving_changing_atoms(), target);
  }

  // optional bool noop_reaction = 28;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->noop_reaction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.ReactionSite)
  return target;
}

size_t ReactionSite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.ReactionSite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->make_bond_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->make_bond(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->break_bond_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->break_bond(static_cast<int>(i)));
    }
  }

  // repeated int32 remove_atom = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_atom_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->remove_atom_size());
    total_size += data_size;
  }

  // repeated int32 remove_fragment = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_fragment_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->remove_fragment_size());
    total_size += data_size;
  }

  // repeated int32 keep_fragment = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->keep_fragment_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->keep_fragment_size());
    total_size += data_size;
  }

  // repeated .ReactionProto.ChangeElement change_element = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->change_element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_element(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->formal_charge_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->formal_charge(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->change_formal_charge_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_formal_charge(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->change_isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->invert_isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->invert_isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->bond_length_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bond_length(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->bond_angle_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bond_angle(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->dihedral_angle_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dihedral_angle(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->reaction_3d_replace_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reaction_3d_replace(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->wedge_bonds_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->wedge_bonds(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->replace_atom_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replace_atom(static_cast<int>(i)));
    }
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->unfix_implicit_hydrogens_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unfix_implicit_hydrogens_size());
    total_size += data_size;
  }

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->inactive_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inactive(static_cast<int>(i)));
    }
  }

  // repeated int32 invert_chirality = 22;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->invert_chirality_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->invert_chirality_size());
    total_size += data_size;
  }

  // repeated int32 remove_chirality = 23;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_chirality_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->remove_chirality_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string comment = 2;
    if (has_comment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }

    // optional .SubstructureSearch.SubstructureQuery query = 1;
    if (has_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *query_);
    }

    // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
    if (has_toggle_kekule_form()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *toggle_kekule_form_);
    }

    // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
    if (has_ignore_multiple_matches_involving_atoms_not_changing()) {
      total_size += 2 + 1;
    }

    // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
    if (has_ignore_multiple_matches_involving_changing_atoms()) {
      total_size += 2 + 1;
    }

    // optional bool noop_reaction = 28;
    if (has_noop_reaction()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReactionSite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.ReactionSite)
  GOOGLE_DCHECK_NE(&from, this);
  const ReactionSite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReactionSite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.ReactionSite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.ReactionSite)
    MergeFrom(*source);
  }
}

void ReactionSite::MergeFrom(const ReactionSite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.ReactionSite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  make_bond_.MergeFrom(from.make_bond_);
  break_bond_.MergeFrom(from.break_bond_);
  remove_atom_.MergeFrom(from.remove_atom_);
  remove_fragment_.MergeFrom(from.remove_fragment_);
  keep_fragment_.MergeFrom(from.keep_fragment_);
  change_element_.MergeFrom(from.change_element_);
  formal_charge_.MergeFrom(from.formal_charge_);
  change_formal_charge_.MergeFrom(from.change_formal_charge_);
  isotope_.MergeFrom(from.isotope_);
  change_isotope_.MergeFrom(from.change_isotope_);
  invert_isotope_.MergeFrom(from.invert_isotope_);
  bond_length_.MergeFrom(from.bond_length_);
  bond_angle_.MergeFrom(from.bond_angle_);
  dihedral_angle_.MergeFrom(from.dihedral_angle_);
  reaction_3d_replace_.MergeFrom(from.reaction_3d_replace_);
  wedge_bonds_.MergeFrom(from.wedge_bonds_);
  replace_atom_.MergeFrom(from.replace_atom_);
  unfix_implicit_hydrogens_.MergeFrom(from.unfix_implicit_hydrogens_);
  inactive_.MergeFrom(from.inactive_);
  invert_chirality_.MergeFrom(from.invert_chirality_);
  remove_chirality_.MergeFrom(from.remove_chirality_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_query()->::SubstructureSearch::SubstructureQuery::MergeFrom(from.query());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_toggle_kekule_form()->::ToggleKekuleForm::ToggleKekuleForm::MergeFrom(from.toggle_kekule_form());
    }
    if (cached_has_bits & 0x00000008u) {
      ignore_multiple_matches_involving_atoms_not_changing_ = from.ignore_multiple_matches_involving_atoms_not_changing_;
    }
    if (cached_has_bits & 0x00000010u) {
      ignore_multiple_matches_involving_changing_atoms_ = from.ignore_multiple_matches_involving_changing_atoms_;
    }
    if (cached_has_bits & 0x00000020u) {
      noop_reaction_ = from.noop_reaction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReactionSite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.ReactionSite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReactionSite::CopyFrom(const ReactionSite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.ReactionSite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReactionSite::IsInitialized() const {
  return true;
}

void ReactionSite::Swap(ReactionSite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReactionSite::InternalSwap(ReactionSite* other) {
  using std::swap;
  CastToBase(&make_bond_)->InternalSwap(CastToBase(&other->make_bond_));
  CastToBase(&break_bond_)->InternalSwap(CastToBase(&other->break_bond_));
  remove_atom_.InternalSwap(&other->remove_atom_);
  remove_fragment_.InternalSwap(&other->remove_fragment_);
  keep_fragment_.InternalSwap(&other->keep_fragment_);
  CastToBase(&change_element_)->InternalSwap(CastToBase(&other->change_element_));
  CastToBase(&formal_charge_)->InternalSwap(CastToBase(&other->formal_charge_));
  CastToBase(&change_formal_charge_)->InternalSwap(CastToBase(&other->change_formal_charge_));
  CastToBase(&isotope_)->InternalSwap(CastToBase(&other->isotope_));
  CastToBase(&change_isotope_)->InternalSwap(CastToBase(&other->change_isotope_));
  CastToBase(&invert_isotope_)->InternalSwap(CastToBase(&other->invert_isotope_));
  CastToBase(&bond_length_)->InternalSwap(CastToBase(&other->bond_length_));
  CastToBase(&bond_angle_)->InternalSwap(CastToBase(&other->bond_angle_));
  CastToBase(&dihedral_angle_)->InternalSwap(CastToBase(&other->dihedral_angle_));
  CastToBase(&reaction_3d_replace_)->InternalSwap(CastToBase(&other->reaction_3d_replace_));
  CastToBase(&wedge_bonds_)->InternalSwap(CastToBase(&other->wedge_bonds_));
  CastToBase(&replace_atom_)->InternalSwap(CastToBase(&other->replace_atom_));
  unfix_implicit_hydrogens_.InternalSwap(&other->unfix_implicit_hydrogens_);
  CastToBase(&inactive_)->InternalSwap(CastToBase(&other->inactive_));
  invert_chirality_.InternalSwap(&other->invert_chirality_);
  remove_chirality_.InternalSwap(&other->remove_chirality_);
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_, other->query_);
  swap(toggle_kekule_form_, other->toggle_kekule_form_);
  swap(ignore_multiple_matches_involving_atoms_not_changing_, other->ignore_multiple_matches_involving_atoms_not_changing_);
  swap(ignore_multiple_matches_involving_changing_atoms_, other->ignore_multiple_matches_involving_changing_atoms_);
  swap(noop_reaction_, other->noop_reaction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReactionSite::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScaffoldReactionSite::InitAsDefaultInstance() {
  ::ReactionProto::_ScaffoldReactionSite_default_instance_._instance.get_mutable()->query_ = const_cast< ::SubstructureSearch::SubstructureQuery*>(
      ::SubstructureSearch::SubstructureQuery::internal_default_instance());
  ::ReactionProto::_ScaffoldReactionSite_default_instance_._instance.get_mutable()->toggle_kekule_form_ = const_cast< ::ToggleKekuleForm::ToggleKekuleForm*>(
      ::ToggleKekuleForm::ToggleKekuleForm::internal_default_instance());
}
void ScaffoldReactionSite::clear_query() {
  if (query_ != NULL) query_->Clear();
  clear_has_query();
}
void ScaffoldReactionSite::clear_inactive() {
  inactive_.Clear();
}
void ScaffoldReactionSite::clear_toggle_kekule_form() {
  if (toggle_kekule_form_ != NULL) toggle_kekule_form_->Clear();
  clear_has_toggle_kekule_form();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScaffoldReactionSite::kIdFieldNumber;
const int ScaffoldReactionSite::kQueryFieldNumber;
const int ScaffoldReactionSite::kMakeBondFieldNumber;
const int ScaffoldReactionSite::kBreakBondFieldNumber;
const int ScaffoldReactionSite::kRemoveAtomFieldNumber;
const int ScaffoldReactionSite::kRemoveFragmentFieldNumber;
const int ScaffoldReactionSite::kKeepFragmentFieldNumber;
const int ScaffoldReactionSite::kChangeElementFieldNumber;
const int ScaffoldReactionSite::kFormalChargeFieldNumber;
const int ScaffoldReactionSite::kChangeFormalChargeFieldNumber;
const int ScaffoldReactionSite::kIsotopeFieldNumber;
const int ScaffoldReactionSite::kChangeIsotopeFieldNumber;
const int ScaffoldReactionSite::kInvertIsotopeFieldNumber;
const int ScaffoldReactionSite::kBondLengthFieldNumber;
const int ScaffoldReactionSite::kBondAngleFieldNumber;
const int ScaffoldReactionSite::kDihedralAngleFieldNumber;
const int ScaffoldReactionSite::kReaction3DReplaceFieldNumber;
const int ScaffoldReactionSite::kWedgeBondsFieldNumber;
const int ScaffoldReactionSite::kReplaceAtomFieldNumber;
const int ScaffoldReactionSite::kUnfixImplicitHydrogensFieldNumber;
const int ScaffoldReactionSite::kInactiveFieldNumber;
const int ScaffoldReactionSite::kInvertChiralityFieldNumber;
const int ScaffoldReactionSite::kRemoveChiralityFieldNumber;
const int ScaffoldReactionSite::kToggleKekuleFormFieldNumber;
const int ScaffoldReactionSite::kIgnoreMultipleMatchesInvolvingAtomsNotChangingFieldNumber;
const int ScaffoldReactionSite::kIgnoreMultipleMatchesInvolvingChangingAtomsFieldNumber;
const int ScaffoldReactionSite::kNoopReactionFieldNumber;
const int ScaffoldReactionSite::kCommentFieldNumber;
const int ScaffoldReactionSite::kSmartsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScaffoldReactionSite::ScaffoldReactionSite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_ScaffoldReactionSite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.ScaffoldReactionSite)
}
ScaffoldReactionSite::ScaffoldReactionSite(const ScaffoldReactionSite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      make_bond_(from.make_bond_),
      break_bond_(from.break_bond_),
      remove_atom_(from.remove_atom_),
      remove_fragment_(from.remove_fragment_),
      keep_fragment_(from.keep_fragment_),
      change_element_(from.change_element_),
      formal_charge_(from.formal_charge_),
      change_formal_charge_(from.change_formal_charge_),
      isotope_(from.isotope_),
      change_isotope_(from.change_isotope_),
      invert_isotope_(from.invert_isotope_),
      bond_length_(from.bond_length_),
      bond_angle_(from.bond_angle_),
      dihedral_angle_(from.dihedral_angle_),
      reaction_3d_replace_(from.reaction_3d_replace_),
      wedge_bonds_(from.wedge_bonds_),
      replace_atom_(from.replace_atom_),
      unfix_implicit_hydrogens_(from.unfix_implicit_hydrogens_),
      inactive_(from.inactive_),
      invert_chirality_(from.invert_chirality_),
      remove_chirality_(from.remove_chirality_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  smarts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_smarts()) {
    smarts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smarts_);
  }
  if (from.has_query()) {
    query_ = new ::SubstructureSearch::SubstructureQuery(*from.query_);
  } else {
    query_ = NULL;
  }
  if (from.has_toggle_kekule_form()) {
    toggle_kekule_form_ = new ::ToggleKekuleForm::ToggleKekuleForm(*from.toggle_kekule_form_);
  } else {
    toggle_kekule_form_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&noop_reaction_) -
    reinterpret_cast<char*>(&id_)) + sizeof(noop_reaction_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.ScaffoldReactionSite)
}

void ScaffoldReactionSite::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smarts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noop_reaction_) -
      reinterpret_cast<char*>(&query_)) + sizeof(noop_reaction_));
}

ScaffoldReactionSite::~ScaffoldReactionSite() {
  // @@protoc_insertion_point(destructor:ReactionProto.ScaffoldReactionSite)
  SharedDtor();
}

void ScaffoldReactionSite::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smarts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_;
  if (this != internal_default_instance()) delete toggle_kekule_form_;
}

void ScaffoldReactionSite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScaffoldReactionSite::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScaffoldReactionSite& ScaffoldReactionSite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_ScaffoldReactionSite.base);
  return *internal_default_instance();
}


void ScaffoldReactionSite::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.ScaffoldReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  make_bond_.Clear();
  break_bond_.Clear();
  remove_atom_.Clear();
  remove_fragment_.Clear();
  keep_fragment_.Clear();
  change_element_.Clear();
  formal_charge_.Clear();
  change_formal_charge_.Clear();
  isotope_.Clear();
  change_isotope_.Clear();
  invert_isotope_.Clear();
  bond_length_.Clear();
  bond_angle_.Clear();
  dihedral_angle_.Clear();
  reaction_3d_replace_.Clear();
  wedge_bonds_.Clear();
  replace_atom_.Clear();
  unfix_implicit_hydrogens_.Clear();
  inactive_.Clear();
  invert_chirality_.Clear();
  remove_chirality_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      smarts_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(query_ != NULL);
      query_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(toggle_kekule_form_ != NULL);
      toggle_kekule_form_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&noop_reaction_) -
        reinterpret_cast<char*>(&id_)) + sizeof(noop_reaction_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScaffoldReactionSite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.ScaffoldReactionSite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SubstructureSearch.SubstructureQuery query = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondToBeMade make_bond = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_make_bond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PairOfAtoms break_bond = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_break_bond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_atom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_remove_atom())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_atom())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_fragment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_remove_fragment())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_fragment())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 keep_fragment = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56u, input, this->mutable_keep_fragment())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_keep_fragment())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ChangeElement change_element = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.FormalCharge formal_charge = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_formal_charge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_formal_charge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PlaceIsotope isotope = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_invert_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondLength bond_length = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bond_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondAngle bond_angle = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bond_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dihedral_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reaction_3d_replace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_wedge_bonds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replace_atom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 unfix_implicit_hydrogens = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 160u, input, this->mutable_unfix_implicit_hydrogens())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unfix_implicit_hydrogens())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inactive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 invert_chirality = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 176u, input, this->mutable_invert_chirality())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_invert_chirality())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_chirality = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 184u, input, this->mutable_remove_chirality())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_chirality())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_toggle_kekule_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_ignore_multiple_matches_involving_atoms_not_changing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_multiple_matches_involving_atoms_not_changing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_ignore_multiple_matches_involving_changing_atoms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_multiple_matches_involving_changing_atoms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool noop_reaction = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_noop_reaction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noop_reaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string comment = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.ScaffoldReactionSite.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string smarts = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarts()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarts().data(), static_cast<int>(this->smarts().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.ScaffoldReactionSite.smarts");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.ScaffoldReactionSite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.ScaffoldReactionSite)
  return false;
#undef DO_
}

void ScaffoldReactionSite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.ScaffoldReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .SubstructureSearch.SubstructureQuery query = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_query(), output);
  }

  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->make_bond_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->make_bond(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->break_bond_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->break_bond(static_cast<int>(i)),
      output);
  }

  // repeated int32 remove_atom = 5;
  for (int i = 0, n = this->remove_atom_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->remove_atom(i), output);
  }

  // repeated int32 remove_fragment = 6;
  for (int i = 0, n = this->remove_fragment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->remove_fragment(i), output);
  }

  // repeated int32 keep_fragment = 7;
  for (int i = 0, n = this->keep_fragment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->keep_fragment(i), output);
  }

  // repeated .ReactionProto.ChangeElement change_element = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->change_element(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->formal_charge_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->formal_charge(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_formal_charge_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->change_formal_charge(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->change_isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invert_isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->invert_isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_length_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->bond_length(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_angle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->bond_angle(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dihedral_angle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->dihedral_angle(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_3d_replace_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->reaction_3d_replace(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wedge_bonds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->wedge_bonds(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_atom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->replace_atom(static_cast<int>(i)),
      output);
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  for (int i = 0, n = this->unfix_implicit_hydrogens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      20, this->unfix_implicit_hydrogens(i), output);
  }

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inactive_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->inactive(static_cast<int>(i)),
      output);
  }

  // repeated int32 invert_chirality = 22;
  for (int i = 0, n = this->invert_chirality_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      22, this->invert_chirality(i), output);
  }

  // repeated int32 remove_chirality = 23;
  for (int i = 0, n = this->remove_chirality_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      23, this->remove_chirality(i), output);
  }

  // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_toggle_kekule_form(), output);
  }

  // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->ignore_multiple_matches_involving_atoms_not_changing(), output);
  }

  // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->ignore_multiple_matches_involving_changing_atoms(), output);
  }

  // optional bool noop_reaction = 28;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->noop_reaction(), output);
  }

  // optional string comment = 29;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.ScaffoldReactionSite.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->comment(), output);
  }

  // optional string smarts = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarts().data(), static_cast<int>(this->smarts().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.ScaffoldReactionSite.smarts");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->smarts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.ScaffoldReactionSite)
}

::google::protobuf::uint8* ScaffoldReactionSite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.ScaffoldReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .SubstructureSearch.SubstructureQuery query = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_query(), deterministic, target);
  }

  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->make_bond_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->make_bond(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->break_bond_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->break_bond(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 remove_atom = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->remove_atom_, target);

  // repeated int32 remove_fragment = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->remove_fragment_, target);

  // repeated int32 keep_fragment = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(7, this->keep_fragment_, target);

  // repeated .ReactionProto.ChangeElement change_element = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->change_element(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->formal_charge_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->formal_charge(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_formal_charge_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->change_formal_charge(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->change_isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invert_isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->invert_isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_length_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->bond_length(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_angle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->bond_angle(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dihedral_angle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->dihedral_angle(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_3d_replace_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->reaction_3d_replace(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wedge_bonds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->wedge_bonds(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_atom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->replace_atom(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(20, this->unfix_implicit_hydrogens_, target);

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inactive_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->inactive(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 invert_chirality = 22;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(22, this->invert_chirality_, target);

  // repeated int32 remove_chirality = 23;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(23, this->remove_chirality_, target);

  // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_toggle_kekule_form(), deterministic, target);
  }

  // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->ignore_multiple_matches_involving_atoms_not_changing(), target);
  }

  // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->ignore_multiple_matches_involving_changing_atoms(), target);
  }

  // optional bool noop_reaction = 28;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->noop_reaction(), target);
  }

  // optional string comment = 29;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.ScaffoldReactionSite.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->comment(), target);
  }

  // optional string smarts = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarts().data(), static_cast<int>(this->smarts().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.ScaffoldReactionSite.smarts");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->smarts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.ScaffoldReactionSite)
  return target;
}

size_t ScaffoldReactionSite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.ScaffoldReactionSite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->make_bond_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->make_bond(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->break_bond_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->break_bond(static_cast<int>(i)));
    }
  }

  // repeated int32 remove_atom = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_atom_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->remove_atom_size());
    total_size += data_size;
  }

  // repeated int32 remove_fragment = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_fragment_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->remove_fragment_size());
    total_size += data_size;
  }

  // repeated int32 keep_fragment = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->keep_fragment_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->keep_fragment_size());
    total_size += data_size;
  }

  // repeated .ReactionProto.ChangeElement change_element = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->change_element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_element(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->formal_charge_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->formal_charge(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->change_formal_charge_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_formal_charge(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->change_isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->invert_isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->invert_isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->bond_length_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bond_length(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->bond_angle_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bond_angle(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->dihedral_angle_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dihedral_angle(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->reaction_3d_replace_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reaction_3d_replace(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->wedge_bonds_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->wedge_bonds(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->replace_atom_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replace_atom(static_cast<int>(i)));
    }
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->unfix_implicit_hydrogens_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unfix_implicit_hydrogens_size());
    total_size += data_size;
  }

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->inactive_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inactive(static_cast<int>(i)));
    }
  }

  // repeated int32 invert_chirality = 22;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->invert_chirality_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->invert_chirality_size());
    total_size += data_size;
  }

  // repeated int32 remove_chirality = 23;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_chirality_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->remove_chirality_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string comment = 29;
    if (has_comment()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }

    // optional string smarts = 30;
    if (has_smarts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarts());
    }

    // optional .SubstructureSearch.SubstructureQuery query = 2;
    if (has_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *query_);
    }

    // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
    if (has_toggle_kekule_form()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *toggle_kekule_form_);
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
    if (has_ignore_multiple_matches_involving_atoms_not_changing()) {
      total_size += 2 + 1;
    }

    // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
    if (has_ignore_multiple_matches_involving_changing_atoms()) {
      total_size += 2 + 1;
    }

    // optional bool noop_reaction = 28;
    if (has_noop_reaction()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScaffoldReactionSite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.ScaffoldReactionSite)
  GOOGLE_DCHECK_NE(&from, this);
  const ScaffoldReactionSite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScaffoldReactionSite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.ScaffoldReactionSite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.ScaffoldReactionSite)
    MergeFrom(*source);
  }
}

void ScaffoldReactionSite::MergeFrom(const ScaffoldReactionSite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.ScaffoldReactionSite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  make_bond_.MergeFrom(from.make_bond_);
  break_bond_.MergeFrom(from.break_bond_);
  remove_atom_.MergeFrom(from.remove_atom_);
  remove_fragment_.MergeFrom(from.remove_fragment_);
  keep_fragment_.MergeFrom(from.keep_fragment_);
  change_element_.MergeFrom(from.change_element_);
  formal_charge_.MergeFrom(from.formal_charge_);
  change_formal_charge_.MergeFrom(from.change_formal_charge_);
  isotope_.MergeFrom(from.isotope_);
  change_isotope_.MergeFrom(from.change_isotope_);
  invert_isotope_.MergeFrom(from.invert_isotope_);
  bond_length_.MergeFrom(from.bond_length_);
  bond_angle_.MergeFrom(from.bond_angle_);
  dihedral_angle_.MergeFrom(from.dihedral_angle_);
  reaction_3d_replace_.MergeFrom(from.reaction_3d_replace_);
  wedge_bonds_.MergeFrom(from.wedge_bonds_);
  replace_atom_.MergeFrom(from.replace_atom_);
  unfix_implicit_hydrogens_.MergeFrom(from.unfix_implicit_hydrogens_);
  inactive_.MergeFrom(from.inactive_);
  invert_chirality_.MergeFrom(from.invert_chirality_);
  remove_chirality_.MergeFrom(from.remove_chirality_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_smarts();
      smarts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smarts_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_query()->::SubstructureSearch::SubstructureQuery::MergeFrom(from.query());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_toggle_kekule_form()->::ToggleKekuleForm::ToggleKekuleForm::MergeFrom(from.toggle_kekule_form());
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000020u) {
      ignore_multiple_matches_involving_atoms_not_changing_ = from.ignore_multiple_matches_involving_atoms_not_changing_;
    }
    if (cached_has_bits & 0x00000040u) {
      ignore_multiple_matches_involving_changing_atoms_ = from.ignore_multiple_matches_involving_changing_atoms_;
    }
    if (cached_has_bits & 0x00000080u) {
      noop_reaction_ = from.noop_reaction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScaffoldReactionSite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.ScaffoldReactionSite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScaffoldReactionSite::CopyFrom(const ScaffoldReactionSite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.ScaffoldReactionSite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScaffoldReactionSite::IsInitialized() const {
  return true;
}

void ScaffoldReactionSite::Swap(ScaffoldReactionSite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScaffoldReactionSite::InternalSwap(ScaffoldReactionSite* other) {
  using std::swap;
  CastToBase(&make_bond_)->InternalSwap(CastToBase(&other->make_bond_));
  CastToBase(&break_bond_)->InternalSwap(CastToBase(&other->break_bond_));
  remove_atom_.InternalSwap(&other->remove_atom_);
  remove_fragment_.InternalSwap(&other->remove_fragment_);
  keep_fragment_.InternalSwap(&other->keep_fragment_);
  CastToBase(&change_element_)->InternalSwap(CastToBase(&other->change_element_));
  CastToBase(&formal_charge_)->InternalSwap(CastToBase(&other->formal_charge_));
  CastToBase(&change_formal_charge_)->InternalSwap(CastToBase(&other->change_formal_charge_));
  CastToBase(&isotope_)->InternalSwap(CastToBase(&other->isotope_));
  CastToBase(&change_isotope_)->InternalSwap(CastToBase(&other->change_isotope_));
  CastToBase(&invert_isotope_)->InternalSwap(CastToBase(&other->invert_isotope_));
  CastToBase(&bond_length_)->InternalSwap(CastToBase(&other->bond_length_));
  CastToBase(&bond_angle_)->InternalSwap(CastToBase(&other->bond_angle_));
  CastToBase(&dihedral_angle_)->InternalSwap(CastToBase(&other->dihedral_angle_));
  CastToBase(&reaction_3d_replace_)->InternalSwap(CastToBase(&other->reaction_3d_replace_));
  CastToBase(&wedge_bonds_)->InternalSwap(CastToBase(&other->wedge_bonds_));
  CastToBase(&replace_atom_)->InternalSwap(CastToBase(&other->replace_atom_));
  unfix_implicit_hydrogens_.InternalSwap(&other->unfix_implicit_hydrogens_);
  CastToBase(&inactive_)->InternalSwap(CastToBase(&other->inactive_));
  invert_chirality_.InternalSwap(&other->invert_chirality_);
  remove_chirality_.InternalSwap(&other->remove_chirality_);
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smarts_.Swap(&other->smarts_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_, other->query_);
  swap(toggle_kekule_form_, other->toggle_kekule_form_);
  swap(id_, other->id_);
  swap(ignore_multiple_matches_involving_atoms_not_changing_, other->ignore_multiple_matches_involving_atoms_not_changing_);
  swap(ignore_multiple_matches_involving_changing_atoms_, other->ignore_multiple_matches_involving_changing_atoms_);
  swap(noop_reaction_, other->noop_reaction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScaffoldReactionSite::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SidechainReactionSite::InitAsDefaultInstance() {
  ::ReactionProto::_SidechainReactionSite_default_instance_._instance.get_mutable()->query_ = const_cast< ::SubstructureSearch::SubstructureQuery*>(
      ::SubstructureSearch::SubstructureQuery::internal_default_instance());
  ::ReactionProto::_SidechainReactionSite_default_instance_._instance.get_mutable()->toggle_kekule_form_ = const_cast< ::ToggleKekuleForm::ToggleKekuleForm*>(
      ::ToggleKekuleForm::ToggleKekuleForm::internal_default_instance());
  ::ReactionProto::_SidechainReactionSite_default_instance_._instance.get_mutable()->match_conditions_ = const_cast< ::ReactionProto::SidechainMatchConditions*>(
      ::ReactionProto::SidechainMatchConditions::internal_default_instance());
}
void SidechainReactionSite::clear_query() {
  if (query_ != NULL) query_->Clear();
  clear_has_query();
}
void SidechainReactionSite::clear_inactive() {
  inactive_.Clear();
}
void SidechainReactionSite::clear_toggle_kekule_form() {
  if (toggle_kekule_form_ != NULL) toggle_kekule_form_->Clear();
  clear_has_toggle_kekule_form();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SidechainReactionSite::kIdFieldNumber;
const int SidechainReactionSite::kQueryFieldNumber;
const int SidechainReactionSite::kMakeBondFieldNumber;
const int SidechainReactionSite::kBreakBondFieldNumber;
const int SidechainReactionSite::kRemoveAtomFieldNumber;
const int SidechainReactionSite::kRemoveFragmentFieldNumber;
const int SidechainReactionSite::kKeepFragmentFieldNumber;
const int SidechainReactionSite::kChangeElementFieldNumber;
const int SidechainReactionSite::kFormalChargeFieldNumber;
const int SidechainReactionSite::kChangeFormalChargeFieldNumber;
const int SidechainReactionSite::kIsotopeFieldNumber;
const int SidechainReactionSite::kChangeIsotopeFieldNumber;
const int SidechainReactionSite::kInvertIsotopeFieldNumber;
const int SidechainReactionSite::kBondLengthFieldNumber;
const int SidechainReactionSite::kBondAngleFieldNumber;
const int SidechainReactionSite::kDihedralAngleFieldNumber;
const int SidechainReactionSite::kReaction3DReplaceFieldNumber;
const int SidechainReactionSite::kWedgeBondsFieldNumber;
const int SidechainReactionSite::kReplaceAtomFieldNumber;
const int SidechainReactionSite::kUnfixImplicitHydrogensFieldNumber;
const int SidechainReactionSite::kInactiveFieldNumber;
const int SidechainReactionSite::kInvertChiralityFieldNumber;
const int SidechainReactionSite::kRemoveChiralityFieldNumber;
const int SidechainReactionSite::kToggleKekuleFormFieldNumber;
const int SidechainReactionSite::kIgnoreMultipleMatchesInvolvingAtomsNotChangingFieldNumber;
const int SidechainReactionSite::kIgnoreMultipleMatchesInvolvingChangingAtomsFieldNumber;
const int SidechainReactionSite::kNoopReactionFieldNumber;
const int SidechainReactionSite::kCommentFieldNumber;
const int SidechainReactionSite::kSmartsFieldNumber;
const int SidechainReactionSite::kReagentFieldNumber;
const int SidechainReactionSite::kJoinFieldNumber;
const int SidechainReactionSite::kNoReactionFieldNumber;
const int SidechainReactionSite::kMakeImplicitHydrogensExplicitFieldNumber;
const int SidechainReactionSite::kMatchConditionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SidechainReactionSite::SidechainReactionSite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_SidechainReactionSite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.SidechainReactionSite)
}
SidechainReactionSite::SidechainReactionSite(const SidechainReactionSite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      make_bond_(from.make_bond_),
      break_bond_(from.break_bond_),
      remove_atom_(from.remove_atom_),
      remove_fragment_(from.remove_fragment_),
      keep_fragment_(from.keep_fragment_),
      change_element_(from.change_element_),
      formal_charge_(from.formal_charge_),
      change_formal_charge_(from.change_formal_charge_),
      isotope_(from.isotope_),
      change_isotope_(from.change_isotope_),
      invert_isotope_(from.invert_isotope_),
      bond_length_(from.bond_length_),
      bond_angle_(from.bond_angle_),
      dihedral_angle_(from.dihedral_angle_),
      reaction_3d_replace_(from.reaction_3d_replace_),
      wedge_bonds_(from.wedge_bonds_),
      replace_atom_(from.replace_atom_),
      unfix_implicit_hydrogens_(from.unfix_implicit_hydrogens_),
      inactive_(from.inactive_),
      invert_chirality_(from.invert_chirality_),
      remove_chirality_(from.remove_chirality_),
      reagent_(from.reagent_),
      join_(from.join_),
      no_reaction_(from.no_reaction_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  smarts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_smarts()) {
    smarts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smarts_);
  }
  if (from.has_query()) {
    query_ = new ::SubstructureSearch::SubstructureQuery(*from.query_);
  } else {
    query_ = NULL;
  }
  if (from.has_toggle_kekule_form()) {
    toggle_kekule_form_ = new ::ToggleKekuleForm::ToggleKekuleForm(*from.toggle_kekule_form_);
  } else {
    toggle_kekule_form_ = NULL;
  }
  if (from.has_match_conditions()) {
    match_conditions_ = new ::ReactionProto::SidechainMatchConditions(*from.match_conditions_);
  } else {
    match_conditions_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&make_implicit_hydrogens_explicit_) -
    reinterpret_cast<char*>(&id_)) + sizeof(make_implicit_hydrogens_explicit_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.SidechainReactionSite)
}

void SidechainReactionSite::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smarts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&make_implicit_hydrogens_explicit_) -
      reinterpret_cast<char*>(&query_)) + sizeof(make_implicit_hydrogens_explicit_));
}

SidechainReactionSite::~SidechainReactionSite() {
  // @@protoc_insertion_point(destructor:ReactionProto.SidechainReactionSite)
  SharedDtor();
}

void SidechainReactionSite::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smarts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete query_;
  if (this != internal_default_instance()) delete toggle_kekule_form_;
  if (this != internal_default_instance()) delete match_conditions_;
}

void SidechainReactionSite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SidechainReactionSite::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SidechainReactionSite& SidechainReactionSite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_SidechainReactionSite.base);
  return *internal_default_instance();
}


void SidechainReactionSite::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.SidechainReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  make_bond_.Clear();
  break_bond_.Clear();
  remove_atom_.Clear();
  remove_fragment_.Clear();
  keep_fragment_.Clear();
  change_element_.Clear();
  formal_charge_.Clear();
  change_formal_charge_.Clear();
  isotope_.Clear();
  change_isotope_.Clear();
  invert_isotope_.Clear();
  bond_length_.Clear();
  bond_angle_.Clear();
  dihedral_angle_.Clear();
  reaction_3d_replace_.Clear();
  wedge_bonds_.Clear();
  replace_atom_.Clear();
  unfix_implicit_hydrogens_.Clear();
  inactive_.Clear();
  invert_chirality_.Clear();
  remove_chirality_.Clear();
  reagent_.Clear();
  join_.Clear();
  no_reaction_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      smarts_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(query_ != NULL);
      query_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(toggle_kekule_form_ != NULL);
      toggle_kekule_form_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(match_conditions_ != NULL);
      match_conditions_->Clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ignore_multiple_matches_involving_changing_atoms_) -
        reinterpret_cast<char*>(&id_)) + sizeof(ignore_multiple_matches_involving_changing_atoms_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&noop_reaction_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&make_implicit_hydrogens_explicit_) -
        reinterpret_cast<char*>(&noop_reaction_)) + sizeof(make_implicit_hydrogens_explicit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SidechainReactionSite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.SidechainReactionSite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SubstructureSearch.SubstructureQuery query = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondToBeMade make_bond = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_make_bond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PairOfAtoms break_bond = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_break_bond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_atom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_remove_atom())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_atom())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_fragment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_remove_fragment())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_fragment())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 keep_fragment = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56u, input, this->mutable_keep_fragment())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_keep_fragment())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ChangeElement change_element = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.FormalCharge formal_charge = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_formal_charge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_formal_charge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PlaceIsotope isotope = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_change_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_invert_isotope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondLength bond_length = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bond_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.BondAngle bond_angle = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bond_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dihedral_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reaction_3d_replace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_wedge_bonds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replace_atom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 unfix_implicit_hydrogens = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 160u, input, this->mutable_unfix_implicit_hydrogens())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unfix_implicit_hydrogens())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inactive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 invert_chirality = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 176u, input, this->mutable_invert_chirality())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_invert_chirality())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_chirality = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 184u, input, this->mutable_remove_chirality())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_chirality())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_toggle_kekule_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_ignore_multiple_matches_involving_atoms_not_changing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_multiple_matches_involving_atoms_not_changing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_ignore_multiple_matches_involving_changing_atoms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_multiple_matches_involving_changing_atoms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool noop_reaction = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_noop_reaction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noop_reaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string comment = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.SidechainReactionSite.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string smarts = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarts()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarts().data(), static_cast<int>(this->smarts().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.SidechainReactionSite.smarts");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string reagent = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_reagent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reagent(this->reagent_size() - 1).data(),
            static_cast<int>(this->reagent(this->reagent_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.SidechainReactionSite.reagent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.InterParticleBond join = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_join()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.NoReaction no_reaction = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_no_reaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool make_implicit_hydrogens_explicit = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          set_has_make_implicit_hydrogens_explicit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &make_implicit_hydrogens_explicit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.SidechainMatchConditions match_conditions = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.SidechainReactionSite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.SidechainReactionSite)
  return false;
#undef DO_
}

void SidechainReactionSite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.SidechainReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .SubstructureSearch.SubstructureQuery query = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_query(), output);
  }

  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->make_bond_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->make_bond(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->break_bond_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->break_bond(static_cast<int>(i)),
      output);
  }

  // repeated int32 remove_atom = 5;
  for (int i = 0, n = this->remove_atom_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->remove_atom(i), output);
  }

  // repeated int32 remove_fragment = 6;
  for (int i = 0, n = this->remove_fragment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->remove_fragment(i), output);
  }

  // repeated int32 keep_fragment = 7;
  for (int i = 0, n = this->keep_fragment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->keep_fragment(i), output);
  }

  // repeated .ReactionProto.ChangeElement change_element = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->change_element(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->formal_charge_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->formal_charge(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_formal_charge_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->change_formal_charge(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->change_isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invert_isotope_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->invert_isotope(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_length_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->bond_length(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_angle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->bond_angle(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dihedral_angle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->dihedral_angle(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_3d_replace_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->reaction_3d_replace(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wedge_bonds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->wedge_bonds(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_atom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->replace_atom(static_cast<int>(i)),
      output);
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  for (int i = 0, n = this->unfix_implicit_hydrogens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      20, this->unfix_implicit_hydrogens(i), output);
  }

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inactive_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->inactive(static_cast<int>(i)),
      output);
  }

  // repeated int32 invert_chirality = 22;
  for (int i = 0, n = this->invert_chirality_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      22, this->invert_chirality(i), output);
  }

  // repeated int32 remove_chirality = 23;
  for (int i = 0, n = this->remove_chirality_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      23, this->remove_chirality(i), output);
  }

  // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_toggle_kekule_form(), output);
  }

  // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->ignore_multiple_matches_involving_atoms_not_changing(), output);
  }

  // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->ignore_multiple_matches_involving_changing_atoms(), output);
  }

  // optional bool noop_reaction = 28;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->noop_reaction(), output);
  }

  // optional string comment = 29;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.SidechainReactionSite.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->comment(), output);
  }

  // optional string smarts = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarts().data(), static_cast<int>(this->smarts().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.SidechainReactionSite.smarts");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->smarts(), output);
  }

  // repeated string reagent = 40;
  for (int i = 0, n = this->reagent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reagent(i).data(), static_cast<int>(this->reagent(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.SidechainReactionSite.reagent");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      40, this->reagent(i), output);
  }

  // repeated .ReactionProto.InterParticleBond join = 41;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->join_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41,
      this->join(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.NoReaction no_reaction = 42;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->no_reaction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42,
      this->no_reaction(static_cast<int>(i)),
      output);
  }

  // optional bool make_implicit_hydrogens_explicit = 43;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(43, this->make_implicit_hydrogens_explicit(), output);
  }

  // optional .ReactionProto.SidechainMatchConditions match_conditions = 44;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->_internal_match_conditions(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.SidechainReactionSite)
}

::google::protobuf::uint8* SidechainReactionSite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.SidechainReactionSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .SubstructureSearch.SubstructureQuery query = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_query(), deterministic, target);
  }

  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->make_bond_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->make_bond(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->break_bond_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->break_bond(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 remove_atom = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->remove_atom_, target);

  // repeated int32 remove_fragment = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->remove_fragment_, target);

  // repeated int32 keep_fragment = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(7, this->keep_fragment_, target);

  // repeated .ReactionProto.ChangeElement change_element = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->change_element(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->formal_charge_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->formal_charge(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_formal_charge_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->change_formal_charge(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->change_isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->change_isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invert_isotope_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->invert_isotope(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_length_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->bond_length(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bond_angle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->bond_angle(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dihedral_angle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->dihedral_angle(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_3d_replace_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->reaction_3d_replace(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wedge_bonds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->wedge_bonds(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_atom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->replace_atom(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(20, this->unfix_implicit_hydrogens_, target);

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inactive_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->inactive(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 invert_chirality = 22;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(22, this->invert_chirality_, target);

  // repeated int32 remove_chirality = 23;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(23, this->remove_chirality_, target);

  // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_toggle_kekule_form(), deterministic, target);
  }

  // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->ignore_multiple_matches_involving_atoms_not_changing(), target);
  }

  // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->ignore_multiple_matches_involving_changing_atoms(), target);
  }

  // optional bool noop_reaction = 28;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->noop_reaction(), target);
  }

  // optional string comment = 29;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.SidechainReactionSite.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->comment(), target);
  }

  // optional string smarts = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarts().data(), static_cast<int>(this->smarts().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.SidechainReactionSite.smarts");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->smarts(), target);
  }

  // repeated string reagent = 40;
  for (int i = 0, n = this->reagent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reagent(i).data(), static_cast<int>(this->reagent(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.SidechainReactionSite.reagent");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(40, this->reagent(i), target);
  }

  // repeated .ReactionProto.InterParticleBond join = 41;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->join_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, this->join(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.NoReaction no_reaction = 42;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->no_reaction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42, this->no_reaction(static_cast<int>(i)), deterministic, target);
  }

  // optional bool make_implicit_hydrogens_explicit = 43;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(43, this->make_implicit_hydrogens_explicit(), target);
  }

  // optional .ReactionProto.SidechainMatchConditions match_conditions = 44;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44, this->_internal_match_conditions(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.SidechainReactionSite)
  return target;
}

size_t SidechainReactionSite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.SidechainReactionSite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ReactionProto.BondToBeMade make_bond = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->make_bond_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->make_bond(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PairOfAtoms break_bond = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->break_bond_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->break_bond(static_cast<int>(i)));
    }
  }

  // repeated int32 remove_atom = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_atom_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->remove_atom_size());
    total_size += data_size;
  }

  // repeated int32 remove_fragment = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_fragment_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->remove_fragment_size());
    total_size += data_size;
  }

  // repeated int32 keep_fragment = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->keep_fragment_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->keep_fragment_size());
    total_size += data_size;
  }

  // repeated .ReactionProto.ChangeElement change_element = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->change_element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_element(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.FormalCharge formal_charge = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->formal_charge_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->formal_charge(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ChangeFormalCharge change_formal_charge = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->change_formal_charge_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_formal_charge(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PlaceIsotope isotope = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.IncrementIsotope change_isotope = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->change_isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->change_isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.PlaceIsotope invert_isotope = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->invert_isotope_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->invert_isotope(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.BondLength bond_length = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->bond_length_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bond_length(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.BondAngle bond_angle = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->bond_angle_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bond_angle(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.DihedralAngle dihedral_angle = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->dihedral_angle_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dihedral_angle(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ThreeDReplace reaction_3d_replace = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->reaction_3d_replace_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reaction_3d_replace(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.WedgeBond wedge_bonds = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->wedge_bonds_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->wedge_bonds(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.ReplaceAtom replace_atom = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->replace_atom_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replace_atom(static_cast<int>(i)));
    }
  }

  // repeated int32 unfix_implicit_hydrogens = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->unfix_implicit_hydrogens_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unfix_implicit_hydrogens_size());
    total_size += data_size;
  }

  // repeated .SubstructureSearch.SubstructureQuery inactive = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->inactive_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inactive(static_cast<int>(i)));
    }
  }

  // repeated int32 invert_chirality = 22;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->invert_chirality_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->invert_chirality_size());
    total_size += data_size;
  }

  // repeated int32 remove_chirality = 23;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_chirality_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->remove_chirality_size());
    total_size += data_size;
  }

  // repeated string reagent = 40;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->reagent_size());
  for (int i = 0, n = this->reagent_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->reagent(i));
  }

  // repeated .ReactionProto.InterParticleBond join = 41;
  {
    unsigned int count = static_cast<unsigned int>(this->join_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->join(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.NoReaction no_reaction = 42;
  {
    unsigned int count = static_cast<unsigned int>(this->no_reaction_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->no_reaction(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string comment = 29;
    if (has_comment()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }

    // optional string smarts = 30;
    if (has_smarts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarts());
    }

    // optional .SubstructureSearch.SubstructureQuery query = 2;
    if (has_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *query_);
    }

    // optional .ToggleKekuleForm.ToggleKekuleForm toggle_kekule_form = 24;
    if (has_toggle_kekule_form()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *toggle_kekule_form_);
    }

    // optional .ReactionProto.SidechainMatchConditions match_conditions = 44;
    if (has_match_conditions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *match_conditions_);
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional bool ignore_multiple_matches_involving_atoms_not_changing = 25;
    if (has_ignore_multiple_matches_involving_atoms_not_changing()) {
      total_size += 2 + 1;
    }

    // optional bool ignore_multiple_matches_involving_changing_atoms = 27;
    if (has_ignore_multiple_matches_involving_changing_atoms()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool noop_reaction = 28;
    if (has_noop_reaction()) {
      total_size += 2 + 1;
    }

    // optional bool make_implicit_hydrogens_explicit = 43;
    if (has_make_implicit_hydrogens_explicit()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SidechainReactionSite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.SidechainReactionSite)
  GOOGLE_DCHECK_NE(&from, this);
  const SidechainReactionSite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SidechainReactionSite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.SidechainReactionSite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.SidechainReactionSite)
    MergeFrom(*source);
  }
}

void SidechainReactionSite::MergeFrom(const SidechainReactionSite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.SidechainReactionSite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  make_bond_.MergeFrom(from.make_bond_);
  break_bond_.MergeFrom(from.break_bond_);
  remove_atom_.MergeFrom(from.remove_atom_);
  remove_fragment_.MergeFrom(from.remove_fragment_);
  keep_fragment_.MergeFrom(from.keep_fragment_);
  change_element_.MergeFrom(from.change_element_);
  formal_charge_.MergeFrom(from.formal_charge_);
  change_formal_charge_.MergeFrom(from.change_formal_charge_);
  isotope_.MergeFrom(from.isotope_);
  change_isotope_.MergeFrom(from.change_isotope_);
  invert_isotope_.MergeFrom(from.invert_isotope_);
  bond_length_.MergeFrom(from.bond_length_);
  bond_angle_.MergeFrom(from.bond_angle_);
  dihedral_angle_.MergeFrom(from.dihedral_angle_);
  reaction_3d_replace_.MergeFrom(from.reaction_3d_replace_);
  wedge_bonds_.MergeFrom(from.wedge_bonds_);
  replace_atom_.MergeFrom(from.replace_atom_);
  unfix_implicit_hydrogens_.MergeFrom(from.unfix_implicit_hydrogens_);
  inactive_.MergeFrom(from.inactive_);
  invert_chirality_.MergeFrom(from.invert_chirality_);
  remove_chirality_.MergeFrom(from.remove_chirality_);
  reagent_.MergeFrom(from.reagent_);
  join_.MergeFrom(from.join_);
  no_reaction_.MergeFrom(from.no_reaction_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_smarts();
      smarts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smarts_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_query()->::SubstructureSearch::SubstructureQuery::MergeFrom(from.query());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_toggle_kekule_form()->::ToggleKekuleForm::ToggleKekuleForm::MergeFrom(from.toggle_kekule_form());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_match_conditions()->::ReactionProto::SidechainMatchConditions::MergeFrom(from.match_conditions());
    }
    if (cached_has_bits & 0x00000020u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000040u) {
      ignore_multiple_matches_involving_atoms_not_changing_ = from.ignore_multiple_matches_involving_atoms_not_changing_;
    }
    if (cached_has_bits & 0x00000080u) {
      ignore_multiple_matches_involving_changing_atoms_ = from.ignore_multiple_matches_involving_changing_atoms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      noop_reaction_ = from.noop_reaction_;
    }
    if (cached_has_bits & 0x00000200u) {
      make_implicit_hydrogens_explicit_ = from.make_implicit_hydrogens_explicit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SidechainReactionSite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.SidechainReactionSite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SidechainReactionSite::CopyFrom(const SidechainReactionSite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.SidechainReactionSite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SidechainReactionSite::IsInitialized() const {
  return true;
}

void SidechainReactionSite::Swap(SidechainReactionSite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SidechainReactionSite::InternalSwap(SidechainReactionSite* other) {
  using std::swap;
  CastToBase(&make_bond_)->InternalSwap(CastToBase(&other->make_bond_));
  CastToBase(&break_bond_)->InternalSwap(CastToBase(&other->break_bond_));
  remove_atom_.InternalSwap(&other->remove_atom_);
  remove_fragment_.InternalSwap(&other->remove_fragment_);
  keep_fragment_.InternalSwap(&other->keep_fragment_);
  CastToBase(&change_element_)->InternalSwap(CastToBase(&other->change_element_));
  CastToBase(&formal_charge_)->InternalSwap(CastToBase(&other->formal_charge_));
  CastToBase(&change_formal_charge_)->InternalSwap(CastToBase(&other->change_formal_charge_));
  CastToBase(&isotope_)->InternalSwap(CastToBase(&other->isotope_));
  CastToBase(&change_isotope_)->InternalSwap(CastToBase(&other->change_isotope_));
  CastToBase(&invert_isotope_)->InternalSwap(CastToBase(&other->invert_isotope_));
  CastToBase(&bond_length_)->InternalSwap(CastToBase(&other->bond_length_));
  CastToBase(&bond_angle_)->InternalSwap(CastToBase(&other->bond_angle_));
  CastToBase(&dihedral_angle_)->InternalSwap(CastToBase(&other->dihedral_angle_));
  CastToBase(&reaction_3d_replace_)->InternalSwap(CastToBase(&other->reaction_3d_replace_));
  CastToBase(&wedge_bonds_)->InternalSwap(CastToBase(&other->wedge_bonds_));
  CastToBase(&replace_atom_)->InternalSwap(CastToBase(&other->replace_atom_));
  unfix_implicit_hydrogens_.InternalSwap(&other->unfix_implicit_hydrogens_);
  CastToBase(&inactive_)->InternalSwap(CastToBase(&other->inactive_));
  invert_chirality_.InternalSwap(&other->invert_chirality_);
  remove_chirality_.InternalSwap(&other->remove_chirality_);
  reagent_.InternalSwap(CastToBase(&other->reagent_));
  CastToBase(&join_)->InternalSwap(CastToBase(&other->join_));
  CastToBase(&no_reaction_)->InternalSwap(CastToBase(&other->no_reaction_));
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smarts_.Swap(&other->smarts_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_, other->query_);
  swap(toggle_kekule_form_, other->toggle_kekule_form_);
  swap(match_conditions_, other->match_conditions_);
  swap(id_, other->id_);
  swap(ignore_multiple_matches_involving_atoms_not_changing_, other->ignore_multiple_matches_involving_atoms_not_changing_);
  swap(ignore_multiple_matches_involving_changing_atoms_, other->ignore_multiple_matches_involving_changing_atoms_);
  swap(noop_reaction_, other->noop_reaction_);
  swap(make_implicit_hydrogens_explicit_, other->make_implicit_hydrogens_explicit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SidechainReactionSite::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reaction::InitAsDefaultInstance() {
  ::ReactionProto::_Reaction_default_instance_._instance.get_mutable()->scaffold_ = const_cast< ::ReactionProto::ScaffoldReactionSite*>(
      ::ReactionProto::ScaffoldReactionSite::internal_default_instance());
  ::ReactionProto::_Reaction_default_instance_._instance.get_mutable()->scaffold_match_conditions_ = const_cast< ::ReactionProto::ScaffoldMatchConditions*>(
      ::ReactionProto::ScaffoldMatchConditions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reaction::kCommentFieldNumber;
const int Reaction::kScaffoldFieldNumber;
const int Reaction::kSidechainFieldNumber;
const int Reaction::kReactionStereoCenterFieldNumber;
const int Reaction::kAppendReagentNameFieldNumber;
const int Reaction::kAppendToNameFieldNumber;
const int Reaction::kQueryFilesInCurrentDirectoryFieldNumber;
const int Reaction::kReactionDirectoryFieldNumber;
const int Reaction::kFindKekuleFormsForBadValenceFieldNumber;
const int Reaction::kMakeImplicitHydrogensExplicitFieldNumber;
const int Reaction::kScaffoldMatchConditionsFieldNumber;
const int Reaction::kNoopReactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reaction::Reaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_reaction_2eproto::scc_info_Reaction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReactionProto.Reaction)
}
Reaction::Reaction(const Reaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sidechain_(from.sidechain_),
      reaction_stereo_center_(from.reaction_stereo_center_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  append_to_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_append_to_name()) {
    append_to_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.append_to_name_);
  }
  reaction_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reaction_directory()) {
    reaction_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reaction_directory_);
  }
  if (from.has_scaffold()) {
    scaffold_ = new ::ReactionProto::ScaffoldReactionSite(*from.scaffold_);
  } else {
    scaffold_ = NULL;
  }
  if (from.has_scaffold_match_conditions()) {
    scaffold_match_conditions_ = new ::ReactionProto::ScaffoldMatchConditions(*from.scaffold_match_conditions_);
  } else {
    scaffold_match_conditions_ = NULL;
  }
  ::memcpy(&append_reagent_name_, &from.append_reagent_name_,
    static_cast<size_t>(reinterpret_cast<char*>(&noop_reaction_) -
    reinterpret_cast<char*>(&append_reagent_name_)) + sizeof(noop_reaction_));
  // @@protoc_insertion_point(copy_constructor:ReactionProto.Reaction)
}

void Reaction::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  append_to_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reaction_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scaffold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noop_reaction_) -
      reinterpret_cast<char*>(&scaffold_)) + sizeof(noop_reaction_));
}

Reaction::~Reaction() {
  // @@protoc_insertion_point(destructor:ReactionProto.Reaction)
  SharedDtor();
}

void Reaction::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  append_to_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reaction_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scaffold_;
  if (this != internal_default_instance()) delete scaffold_match_conditions_;
}

void Reaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Reaction::descriptor() {
  ::protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reaction& Reaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_reaction_2eproto::scc_info_Reaction.base);
  return *internal_default_instance();
}


void Reaction::Clear() {
// @@protoc_insertion_point(message_clear_start:ReactionProto.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sidechain_.Clear();
  reaction_stereo_center_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      append_to_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      reaction_directory_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(scaffold_ != NULL);
      scaffold_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(scaffold_match_conditions_ != NULL);
      scaffold_match_conditions_->Clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&append_reagent_name_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&find_kekule_forms_for_bad_valence_) -
        reinterpret_cast<char*>(&append_reagent_name_)) + sizeof(find_kekule_forms_for_bad_valence_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&make_implicit_hydrogens_explicit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&noop_reaction_) -
        reinterpret_cast<char*>(&make_implicit_hydrogens_explicit_)) + sizeof(noop_reaction_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Reaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReactionProto.Reaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string comment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.Reaction.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.ScaffoldReactionSite scaffold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scaffold()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.SidechainReactionSite sidechain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sidechain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ReactionProto.StereoCenter reaction_stereo_center = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reaction_stereo_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool append_reagent_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_append_reagent_name();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &append_reagent_name_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string append_to_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_append_to_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->append_to_name().data(), static_cast<int>(this->append_to_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.Reaction.append_to_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool query_files_in_current_directory = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_query_files_in_current_directory();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_files_in_current_directory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reaction_directory = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reaction_directory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reaction_directory().data(), static_cast<int>(this->reaction_directory().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReactionProto.Reaction.reaction_directory");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool find_kekule_forms_for_bad_valence = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_find_kekule_forms_for_bad_valence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &find_kekule_forms_for_bad_valence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool make_implicit_hydrogens_explicit = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_make_implicit_hydrogens_explicit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &make_implicit_hydrogens_explicit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReactionProto.ScaffoldMatchConditions scaffold_match_conditions = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scaffold_match_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool noop_reaction = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_noop_reaction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noop_reaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReactionProto.Reaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReactionProto.Reaction)
  return false;
#undef DO_
}

void Reaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReactionProto.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comment = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.Reaction.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->comment(), output);
  }

  // optional .ReactionProto.ScaffoldReactionSite scaffold = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_scaffold(), output);
  }

  // repeated .ReactionProto.SidechainReactionSite sidechain = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sidechain_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->sidechain(static_cast<int>(i)),
      output);
  }

  // repeated .ReactionProto.StereoCenter reaction_stereo_center = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_stereo_center_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->reaction_stereo_center(static_cast<int>(i)),
      output);
  }

  // optional bool append_reagent_name = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->append_reagent_name(), output);
  }

  // optional string append_to_name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->append_to_name().data(), static_cast<int>(this->append_to_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.Reaction.append_to_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->append_to_name(), output);
  }

  // optional bool query_files_in_current_directory = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->query_files_in_current_directory(), output);
  }

  // optional string reaction_directory = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reaction_directory().data(), static_cast<int>(this->reaction_directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.Reaction.reaction_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->reaction_directory(), output);
  }

  // optional bool find_kekule_forms_for_bad_valence = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->find_kekule_forms_for_bad_valence(), output);
  }

  // optional bool make_implicit_hydrogens_explicit = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->make_implicit_hydrogens_explicit(), output);
  }

  // optional .ReactionProto.ScaffoldMatchConditions scaffold_match_conditions = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_scaffold_match_conditions(), output);
  }

  // optional bool noop_reaction = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->noop_reaction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReactionProto.Reaction)
}

::google::protobuf::uint8* Reaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReactionProto.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comment = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.Reaction.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->comment(), target);
  }

  // optional .ReactionProto.ScaffoldReactionSite scaffold = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_scaffold(), deterministic, target);
  }

  // repeated .ReactionProto.SidechainReactionSite sidechain = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sidechain_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->sidechain(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ReactionProto.StereoCenter reaction_stereo_center = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_stereo_center_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->reaction_stereo_center(static_cast<int>(i)), deterministic, target);
  }

  // optional bool append_reagent_name = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->append_reagent_name(), target);
  }

  // optional string append_to_name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->append_to_name().data(), static_cast<int>(this->append_to_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.Reaction.append_to_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->append_to_name(), target);
  }

  // optional bool query_files_in_current_directory = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->query_files_in_current_directory(), target);
  }

  // optional string reaction_directory = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reaction_directory().data(), static_cast<int>(this->reaction_directory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReactionProto.Reaction.reaction_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->reaction_directory(), target);
  }

  // optional bool find_kekule_forms_for_bad_valence = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->find_kekule_forms_for_bad_valence(), target);
  }

  // optional bool make_implicit_hydrogens_explicit = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->make_implicit_hydrogens_explicit(), target);
  }

  // optional .ReactionProto.ScaffoldMatchConditions scaffold_match_conditions = 12;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_scaffold_match_conditions(), deterministic, target);
  }

  // optional bool noop_reaction = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->noop_reaction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReactionProto.Reaction)
  return target;
}

size_t Reaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReactionProto.Reaction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ReactionProto.SidechainReactionSite sidechain = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sidechain_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sidechain(static_cast<int>(i)));
    }
  }

  // repeated .ReactionProto.StereoCenter reaction_stereo_center = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->reaction_stereo_center_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reaction_stereo_center(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string comment = 1;
    if (has_comment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }

    // optional string append_to_name = 6;
    if (has_append_to_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->append_to_name());
    }

    // optional string reaction_directory = 9;
    if (has_reaction_directory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reaction_directory());
    }

    // optional .ReactionProto.ScaffoldReactionSite scaffold = 2;
    if (has_scaffold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scaffold_);
    }

    // optional .ReactionProto.ScaffoldMatchConditions scaffold_match_conditions = 12;
    if (has_scaffold_match_conditions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scaffold_match_conditions_);
    }

    // optional bool append_reagent_name = 5;
    if (has_append_reagent_name()) {
      total_size += 1 + 1;
    }

    // optional bool query_files_in_current_directory = 8;
    if (has_query_files_in_current_directory()) {
      total_size += 1 + 1;
    }

    // optional bool find_kekule_forms_for_bad_valence = 10;
    if (has_find_kekule_forms_for_bad_valence()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool make_implicit_hydrogens_explicit = 11;
    if (has_make_implicit_hydrogens_explicit()) {
      total_size += 1 + 1;
    }

    // optional bool noop_reaction = 13;
    if (has_noop_reaction()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReactionProto.Reaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Reaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReactionProto.Reaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReactionProto.Reaction)
    MergeFrom(*source);
  }
}

void Reaction::MergeFrom(const Reaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReactionProto.Reaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sidechain_.MergeFrom(from.sidechain_);
  reaction_stereo_center_.MergeFrom(from.reaction_stereo_center_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_append_to_name();
      append_to_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.append_to_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_reaction_directory();
      reaction_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reaction_directory_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_scaffold()->::ReactionProto::ScaffoldReactionSite::MergeFrom(from.scaffold());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_scaffold_match_conditions()->::ReactionProto::ScaffoldMatchConditions::MergeFrom(from.scaffold_match_conditions());
    }
    if (cached_has_bits & 0x00000020u) {
      append_reagent_name_ = from.append_reagent_name_;
    }
    if (cached_has_bits & 0x00000040u) {
      query_files_in_current_directory_ = from.query_files_in_current_directory_;
    }
    if (cached_has_bits & 0x00000080u) {
      find_kekule_forms_for_bad_valence_ = from.find_kekule_forms_for_bad_valence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      make_implicit_hydrogens_explicit_ = from.make_implicit_hydrogens_explicit_;
    }
    if (cached_has_bits & 0x00000200u) {
      noop_reaction_ = from.noop_reaction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Reaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReactionProto.Reaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reaction::CopyFrom(const Reaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReactionProto.Reaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reaction::IsInitialized() const {
  return true;
}

void Reaction::Swap(Reaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reaction::InternalSwap(Reaction* other) {
  using std::swap;
  CastToBase(&sidechain_)->InternalSwap(CastToBase(&other->sidechain_));
  CastToBase(&reaction_stereo_center_)->InternalSwap(CastToBase(&other->reaction_stereo_center_));
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  append_to_name_.Swap(&other->append_to_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reaction_directory_.Swap(&other->reaction_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scaffold_, other->scaffold_);
  swap(scaffold_match_conditions_, other->scaffold_match_conditions_);
  swap(append_reagent_name_, other->append_reagent_name_);
  swap(query_files_in_current_directory_, other->query_files_in_current_directory_);
  swap(find_kekule_forms_for_bad_valence_, other->find_kekule_forms_for_bad_valence_);
  swap(make_implicit_hydrogens_explicit_, other->make_implicit_hydrogens_explicit_);
  swap(noop_reaction_, other->noop_reaction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Reaction::GetMetadata() const {
  protobuf_reaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_reaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ReactionProto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::MatchConditions* Arena::CreateMaybeMessage< ::ReactionProto::MatchConditions >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::MatchConditions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::ScaffoldMatchConditions* Arena::CreateMaybeMessage< ::ReactionProto::ScaffoldMatchConditions >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::ScaffoldMatchConditions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::SidechainMatchConditions* Arena::CreateMaybeMessage< ::ReactionProto::SidechainMatchConditions >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::SidechainMatchConditions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::PairOfAtoms* Arena::CreateMaybeMessage< ::ReactionProto::PairOfAtoms >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::PairOfAtoms >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::MatchedAtomInComponent* Arena::CreateMaybeMessage< ::ReactionProto::MatchedAtomInComponent >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::MatchedAtomInComponent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::StereoCenterComponent* Arena::CreateMaybeMessage< ::ReactionProto::StereoCenterComponent >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::StereoCenterComponent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::StereoCenter* Arena::CreateMaybeMessage< ::ReactionProto::StereoCenter >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::StereoCenter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::BondToBeMade* Arena::CreateMaybeMessage< ::ReactionProto::BondToBeMade >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::BondToBeMade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::InterParticleBond* Arena::CreateMaybeMessage< ::ReactionProto::InterParticleBond >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::InterParticleBond >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::ReplaceAtom* Arena::CreateMaybeMessage< ::ReactionProto::ReplaceAtom >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::ReplaceAtom >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::WedgeBond* Arena::CreateMaybeMessage< ::ReactionProto::WedgeBond >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::WedgeBond >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::ChangeElement* Arena::CreateMaybeMessage< ::ReactionProto::ChangeElement >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::ChangeElement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::FormalCharge* Arena::CreateMaybeMessage< ::ReactionProto::FormalCharge >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::FormalCharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::ChangeFormalCharge* Arena::CreateMaybeMessage< ::ReactionProto::ChangeFormalCharge >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::ChangeFormalCharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::PlaceIsotope* Arena::CreateMaybeMessage< ::ReactionProto::PlaceIsotope >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::PlaceIsotope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::IncrementIsotope* Arena::CreateMaybeMessage< ::ReactionProto::IncrementIsotope >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::IncrementIsotope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::BondLength* Arena::CreateMaybeMessage< ::ReactionProto::BondLength >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::BondLength >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::BondAngle* Arena::CreateMaybeMessage< ::ReactionProto::BondAngle >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::BondAngle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::DihedralAngle* Arena::CreateMaybeMessage< ::ReactionProto::DihedralAngle >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::DihedralAngle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::RotateFragment* Arena::CreateMaybeMessage< ::ReactionProto::RotateFragment >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::RotateFragment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::ThreeDReplace* Arena::CreateMaybeMessage< ::ReactionProto::ThreeDReplace >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::ThreeDReplace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::NoReaction* Arena::CreateMaybeMessage< ::ReactionProto::NoReaction >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::NoReaction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::ReactionSite* Arena::CreateMaybeMessage< ::ReactionProto::ReactionSite >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::ReactionSite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::ScaffoldReactionSite* Arena::CreateMaybeMessage< ::ReactionProto::ScaffoldReactionSite >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::ScaffoldReactionSite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::SidechainReactionSite* Arena::CreateMaybeMessage< ::ReactionProto::SidechainReactionSite >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::SidechainReactionSite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReactionProto::Reaction* Arena::CreateMaybeMessage< ::ReactionProto::Reaction >(Arena* arena) {
  return Arena::CreateInternal< ::ReactionProto::Reaction >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
