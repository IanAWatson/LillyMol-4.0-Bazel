syntax = "proto3";

package GeometricConstraints;

message Range {
  // Min and max values allowed in a range.
  float min = 1;
  float max = 2;
  // When C++ objects are instantiated from this proto, we have situations
  // where distances in the molecules are in Bohr, but the user
  // prefers Angstroms, or where angles in the Molecule object are specified
  // in radians, but the user would prefer degrees to use degrees here.
  // During construction, the value of `min` and `max` undergo a one
  // time scaling to the values that will be used during matching.
  // For example, if distances in the molecules are in Bohr, but the
  // user wants to specify a distance constraint in Angstroms, set
  // this to 1/0.529177=1.88973.
  // If angles are interpreted as radians, but the user wants to specify
  // angles in degrees, set this value to 180/Ï€
  float one_time_scaling_factor = 3;
}

// All the geometric constraings follow a similar pattern.
// One or more atoms, and a range of allowed values.

message Distance {
  int32 a1 = 1;
  int32 a2 = 2;
  Range range = 3;
}

// Note that with angles, the Range is interpreted as Radians.

message BondAngle {
  uint32 a1 = 1;
  uint32 a2 = 2;
  uint32 a3 = 3;
  Range range = 4;
}

message TorsionAngle {
  uint32 a1 = 1;
  uint32 a2 = 2;
  uint32 a3 = 3;
  uint32 a4 = 4;
  Range range = 5;
}

message SetOfConstraints {
  repeated Distance distances = 1;
  repeated BondAngle bond_angles = 2;
  repeated TorsionAngle torsion_angles = 3;
  // The number of the above constraints that must match.
  uint32 number_to_match = 4;
}
