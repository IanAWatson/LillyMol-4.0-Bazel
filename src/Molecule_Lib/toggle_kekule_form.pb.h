// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: toggle_kekule_form.proto

#ifndef PROTOBUF_INCLUDED_toggle_5fkekule_5fform_2eproto
#define PROTOBUF_INCLUDED_toggle_5fkekule_5fform_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Molecule_Lib/substructure.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_toggle_5fkekule_5fform_2eproto 

namespace protobuf_toggle_5fkekule_5fform_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_toggle_5fkekule_5fform_2eproto
namespace ToggleKekuleForm {
class KekuleBond;
class KekuleBondDefaultTypeInternal;
extern KekuleBondDefaultTypeInternal _KekuleBond_default_instance_;
class ToggleKekuleForm;
class ToggleKekuleFormDefaultTypeInternal;
extern ToggleKekuleFormDefaultTypeInternal _ToggleKekuleForm_default_instance_;
}  // namespace ToggleKekuleForm
namespace google {
namespace protobuf {
template<> ::ToggleKekuleForm::KekuleBond* Arena::CreateMaybeMessage<::ToggleKekuleForm::KekuleBond>(Arena*);
template<> ::ToggleKekuleForm::ToggleKekuleForm* Arena::CreateMaybeMessage<::ToggleKekuleForm::ToggleKekuleForm>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ToggleKekuleForm {

// ===================================================================

class KekuleBond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ToggleKekuleForm.KekuleBond) */ {
 public:
  KekuleBond();
  virtual ~KekuleBond();

  KekuleBond(const KekuleBond& from);

  inline KekuleBond& operator=(const KekuleBond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KekuleBond(KekuleBond&& from) noexcept
    : KekuleBond() {
    *this = ::std::move(from);
  }

  inline KekuleBond& operator=(KekuleBond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KekuleBond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KekuleBond* internal_default_instance() {
    return reinterpret_cast<const KekuleBond*>(
               &_KekuleBond_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(KekuleBond* other);
  friend void swap(KekuleBond& a, KekuleBond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KekuleBond* New() const final {
    return CreateMaybeMessage<KekuleBond>(NULL);
  }

  KekuleBond* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KekuleBond>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KekuleBond& from);
  void MergeFrom(const KekuleBond& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KekuleBond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 a1 = 1;
  bool has_a1() const;
  void clear_a1();
  static const int kA1FieldNumber = 1;
  ::google::protobuf::int32 a1() const;
  void set_a1(::google::protobuf::int32 value);

  // optional int32 a2 = 2;
  bool has_a2() const;
  void clear_a2();
  static const int kA2FieldNumber = 2;
  ::google::protobuf::int32 a2() const;
  void set_a2(::google::protobuf::int32 value);

  // optional .SubstructureSearch.BondType btype = 3;
  bool has_btype() const;
  void clear_btype();
  static const int kBtypeFieldNumber = 3;
  ::SubstructureSearch::BondType btype() const;
  void set_btype(::SubstructureSearch::BondType value);

  // @@protoc_insertion_point(class_scope:ToggleKekuleForm.KekuleBond)
 private:
  void set_has_a1();
  void clear_has_a1();
  void set_has_a2();
  void clear_has_a2();
  void set_has_btype();
  void clear_has_btype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 a1_;
  ::google::protobuf::int32 a2_;
  int btype_;
  friend struct ::protobuf_toggle_5fkekule_5fform_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToggleKekuleForm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ToggleKekuleForm.ToggleKekuleForm) */ {
 public:
  ToggleKekuleForm();
  virtual ~ToggleKekuleForm();

  ToggleKekuleForm(const ToggleKekuleForm& from);

  inline ToggleKekuleForm& operator=(const ToggleKekuleForm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToggleKekuleForm(ToggleKekuleForm&& from) noexcept
    : ToggleKekuleForm() {
    *this = ::std::move(from);
  }

  inline ToggleKekuleForm& operator=(ToggleKekuleForm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToggleKekuleForm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToggleKekuleForm* internal_default_instance() {
    return reinterpret_cast<const ToggleKekuleForm*>(
               &_ToggleKekuleForm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ToggleKekuleForm* other);
  friend void swap(ToggleKekuleForm& a, ToggleKekuleForm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToggleKekuleForm* New() const final {
    return CreateMaybeMessage<ToggleKekuleForm>(NULL);
  }

  ToggleKekuleForm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToggleKekuleForm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToggleKekuleForm& from);
  void MergeFrom(const ToggleKekuleForm& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToggleKekuleForm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ToggleKekuleForm.KekuleBond bond = 1;
  int bond_size() const;
  void clear_bond();
  static const int kBondFieldNumber = 1;
  ::ToggleKekuleForm::KekuleBond* mutable_bond(int index);
  ::google::protobuf::RepeatedPtrField< ::ToggleKekuleForm::KekuleBond >*
      mutable_bond();
  const ::ToggleKekuleForm::KekuleBond& bond(int index) const;
  ::ToggleKekuleForm::KekuleBond* add_bond();
  const ::google::protobuf::RepeatedPtrField< ::ToggleKekuleForm::KekuleBond >&
      bond() const;

  // @@protoc_insertion_point(class_scope:ToggleKekuleForm.ToggleKekuleForm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ToggleKekuleForm::KekuleBond > bond_;
  friend struct ::protobuf_toggle_5fkekule_5fform_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// KekuleBond

// optional int32 a1 = 1;
inline bool KekuleBond::has_a1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KekuleBond::set_has_a1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KekuleBond::clear_has_a1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KekuleBond::clear_a1() {
  a1_ = 0;
  clear_has_a1();
}
inline ::google::protobuf::int32 KekuleBond::a1() const {
  // @@protoc_insertion_point(field_get:ToggleKekuleForm.KekuleBond.a1)
  return a1_;
}
inline void KekuleBond::set_a1(::google::protobuf::int32 value) {
  set_has_a1();
  a1_ = value;
  // @@protoc_insertion_point(field_set:ToggleKekuleForm.KekuleBond.a1)
}

// optional int32 a2 = 2;
inline bool KekuleBond::has_a2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KekuleBond::set_has_a2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KekuleBond::clear_has_a2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KekuleBond::clear_a2() {
  a2_ = 0;
  clear_has_a2();
}
inline ::google::protobuf::int32 KekuleBond::a2() const {
  // @@protoc_insertion_point(field_get:ToggleKekuleForm.KekuleBond.a2)
  return a2_;
}
inline void KekuleBond::set_a2(::google::protobuf::int32 value) {
  set_has_a2();
  a2_ = value;
  // @@protoc_insertion_point(field_set:ToggleKekuleForm.KekuleBond.a2)
}

// optional .SubstructureSearch.BondType btype = 3;
inline bool KekuleBond::has_btype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KekuleBond::set_has_btype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KekuleBond::clear_has_btype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KekuleBond::clear_btype() {
  btype_ = 3;
  clear_has_btype();
}
inline ::SubstructureSearch::BondType KekuleBond::btype() const {
  // @@protoc_insertion_point(field_get:ToggleKekuleForm.KekuleBond.btype)
  return static_cast< ::SubstructureSearch::BondType >(btype_);
}
inline void KekuleBond::set_btype(::SubstructureSearch::BondType value) {
  assert(::SubstructureSearch::BondType_IsValid(value));
  set_has_btype();
  btype_ = value;
  // @@protoc_insertion_point(field_set:ToggleKekuleForm.KekuleBond.btype)
}

// -------------------------------------------------------------------

// ToggleKekuleForm

// repeated .ToggleKekuleForm.KekuleBond bond = 1;
inline int ToggleKekuleForm::bond_size() const {
  return bond_.size();
}
inline void ToggleKekuleForm::clear_bond() {
  bond_.Clear();
}
inline ::ToggleKekuleForm::KekuleBond* ToggleKekuleForm::mutable_bond(int index) {
  // @@protoc_insertion_point(field_mutable:ToggleKekuleForm.ToggleKekuleForm.bond)
  return bond_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ToggleKekuleForm::KekuleBond >*
ToggleKekuleForm::mutable_bond() {
  // @@protoc_insertion_point(field_mutable_list:ToggleKekuleForm.ToggleKekuleForm.bond)
  return &bond_;
}
inline const ::ToggleKekuleForm::KekuleBond& ToggleKekuleForm::bond(int index) const {
  // @@protoc_insertion_point(field_get:ToggleKekuleForm.ToggleKekuleForm.bond)
  return bond_.Get(index);
}
inline ::ToggleKekuleForm::KekuleBond* ToggleKekuleForm::add_bond() {
  // @@protoc_insertion_point(field_add:ToggleKekuleForm.ToggleKekuleForm.bond)
  return bond_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ToggleKekuleForm::KekuleBond >&
ToggleKekuleForm::bond() const {
  // @@protoc_insertion_point(field_list:ToggleKekuleForm.ToggleKekuleForm.bond)
  return bond_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ToggleKekuleForm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_toggle_5fkekule_5fform_2eproto
